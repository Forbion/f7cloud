{"version":3,"file":"calendar-src_utils_moment_js-src_components_Editor_FreeBusy_FreeBusy_vue.js?v=5f0131fdd03a0e86fc90","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3VA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACxjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACprFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACxDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACjEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACvDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AC9FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;AC/CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACrjtGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;ACxvjvltQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;ACtjpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtnrzNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACjEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;ACxrtzGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;AC1EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AC7DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACzEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACjDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACdrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAkBA;AACA;;;;;;;;;;;;;;;;;;;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAkBA;AACA;;;;;;;;;;;;;;;;ACvCA;;;;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack:///calendar/src/components/Editor/FreeBusy/FreeBusy.vue?vue&type=script&lang=js","webpack:///calendar/src/components/Editor/Invitees/InviteesListSearch.vue?vue&type=script&lang=js","webpack:///calendar/src/components/Editor/FreeBusy/FreeBusy.vue?vue&type=template&id=a60f3f46&scoped=true","webpack:///calendar/src/components/Editor/Invitees/InviteesListSearch.vue?vue&type=template&id=d74a293a&scoped=true","webpack:///calendar/src/defaults/defaultCategories.js","webpack:///calendar/src/filters/dateFormat.js","webpack:///calendar/src/fullcalendar/eventSources/freeBusyBlockedForAllEventSource.js","webpack:///calendar/src/fullcalendar/eventSources/freeBusyFakeBlockingEventSource.js","webpack:///calendar/src/fullcalendar/eventSources/freeBusyResourceEventSource.js","webpack:///calendar/src/fullcalendar/eventSources/freeBusyResourceEventSourceFunction.js","webpack:///calendar/src/fullcalendar/localization/dateFormattingConfig.js","webpack:///calendar/src/fullcalendar/localization/localeProvider.js","webpack:///calendar/src/fullcalendar/localization/momentPlugin.js","webpack:///calendar/src/fullcalendar/timezones/vtimezoneNamedTimezoneImpl.js","webpack:///calendar/src/models/alarm.js","webpack:///calendar/src/models/attachment.js","webpack:///calendar/src/models/attendee.js","webpack:///calendar/src/models/calendar.js","webpack:///calendar/src/models/calendarObject.js","webpack:///calendar/src/models/calendarShare.js","webpack:///calendar/src/models/consts.js","webpack:///calendar/src/models/event.js","webpack:///calendar/src/models/principal.js","webpack:///calendar/src/models/recurrenceRule.js","webpack:///calendar/src/models/rfcProps.js","webpack:///calendar/src/services/attachmentService.js","webpack:///calendar/src/services/caldavService.js","webpack:///calendar/src/services/circleService.js","webpack:///calendar/src/services/freeBusySlotService.js","webpack:///calendar/src/services/isCirclesEnabled.js","webpack:///calendar/src/services/settings.js","webpack:///calendar/src/services/talkService.js","webpack:///calendar/src/services/timezoneDataProviderService.js","webpack:///calendar/src/services/timezoneDetectionService.js","webpack:///calendar/src/store/calendarObjectInstance.js","webpack:///calendar/src/store/calendarObjects.js","webpack:///calendar/src/store/calendars.js","webpack:///calendar/src/store/fetchedTimeRanges.js","webpack:///calendar/src/store/importFiles.js","webpack:///calendar/src/store/importState.js","webpack:///calendar/src/store/principals.js","webpack:///calendar/src/store/settings.js","webpack:///calendar/src/utils/alarms.js","webpack:///calendar/src/utils/attendee.js","webpack:///calendar/src/utils/calendarObject.js","webpack:///calendar/src/utils/closestColor.js","webpack:///calendar/src/utils/color.js","webpack:///calendar/src/utils/date.js","webpack:///calendar/src/utils/freebusy.js","webpack:///calendar/src/utils/logger.js","webpack:///calendar/src/utils/moment.js","webpack:///calendar/src/utils/propfindErrorParse.js","webpack:///calendar/src/utils/randomId.js","webpack:///calendar/src/utils/recurrence.js","webpack:///calendar/src/utils/settings.js","webpack:///calendar/src/utils/uidToColor.js","webpack:///calendar/src/components/Editor/FreeBusy/FreeBusy.vue?vue&type=style&index=0&id=a60f3f46&lang=scss&scoped=true","webpack:///calendar/src/components/Editor/FreeBusy/FreeBusy.vue?vue&type=style&index=1&id=a60f3f46&lang=scss","webpack:///calendar/src/components/Editor/Invitees/InviteesListSearch.vue?vue&type=style&index=0&id=d74a293a&scoped=true&lang=css","webpack:///calendar/node_modules/moment/locale|lazy|/^\\.\\/.*\\.js$/|groupOptions: {}|namespace object","webpack://calendar/./src/components/Editor/Invitees/InviteesListSearch.vue?9d3d","webpack:///calendar/src/components/Editor/FreeBusy/FreeBusy.vue","webpack:///calendar/src/components/Editor/Invitees/InviteesListSearch.vue","webpack://calendar/./src/components/Editor/FreeBusy/FreeBusy.vue?9c65","webpack://calendar/./src/components/Editor/Invitees/InviteesListSearch.vue?a5a6","webpack://calendar/./src/components/Editor/FreeBusy/FreeBusy.vue?9f4b","webpack://calendar/./src/components/Editor/FreeBusy/FreeBusy.vue?62e1"],"sourcesContent":["// Import FullCalendar itself\nimport FullCalendar from '@fullcalendar/vue';\nimport resourceTimelinePlugin from '@fullcalendar/resource-timeline';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport { NcDateTimePickerNative, NcButton, NcPopover, NcUserBubble, NcDialog, NcSelect } from '@nextcloud/vue';\n// Import event sources\nimport freeBusyBlockedForAllEventSource from '../../../fullcalendar/eventSources/freeBusyBlockedForAllEventSource.js';\nimport freeBusyFakeBlockingEventSource from '../../../fullcalendar/eventSources/freeBusyFakeBlockingEventSource.js';\nimport freeBusyResourceEventSource from '../../../fullcalendar/eventSources/freeBusyResourceEventSource.js';\n\n// Import localization plugins\nimport { getDateFormattingConfig } from '../../../fullcalendar/localization/dateFormattingConfig.js';\nimport { getFullCalendarLocale } from '../../../fullcalendar/localization/localeProvider.js';\nimport momentPluginFactory from '../../../fullcalendar/localization/momentPlugin.js';\n\n// Import timezone plugins\nimport VTimezoneNamedTimezone from '../../../fullcalendar/timezones/vtimezoneNamedTimezoneImpl.js';\nimport ChevronRightIcon from 'vue-material-design-icons/ChevronRight.vue';\nimport ChevronLeftIcon from 'vue-material-design-icons/ChevronLeft.vue';\nimport CheckIcon from 'vue-material-design-icons/Check.vue';\nimport HelpCircleIcon from 'vue-material-design-icons/HelpCircle.vue';\nimport InviteesListSearch from '../Invitees/InviteesListSearch.vue';\nimport { getColorForFBType } from '../../../utils/freebusy.js';\nimport { getFirstFreeSlot, getBusySlots } from '../../../services/freeBusySlotService.js';\nimport dateFormat from '../../../filters/dateFormat.js';\nimport { mapState } from 'pinia';\nimport useSettingsStore from '../../../store/settings.js';\nexport default {\n  name: 'FreeBusy',\n  components: {\n    NcSelect,\n    FullCalendar,\n    InviteesListSearch,\n    NcDateTimePickerNative,\n    NcDialog,\n    NcButton,\n    NcPopover,\n    NcUserBubble,\n    ChevronRightIcon,\n    ChevronLeftIcon,\n    CheckIcon,\n    HelpCircleIcon\n  },\n  props: {\n    /**\n     * The organizer object.\n     * See /src/models/attendee.js for details\n     */\n    organizer: {\n      type: Object,\n      required: true\n    },\n    /**\n     * The attendee objects.\n     * See /src/models/attendee.js for details\n     */\n    attendees: {\n      type: Array,\n      required: true\n    },\n    /**\n     * The start-date to query free-busy information from\n     */\n    startDate: {\n      type: Date,\n      required: true\n    },\n    /**\n     * The end-date to query free-busy information from\n     */\n    endDate: {\n      type: Date,\n      required: true\n    },\n    eventTitle: {\n      type: String,\n      default: ''\n    },\n    alreadyInvitedEmails: {\n      type: Array,\n      default: () => []\n    },\n    dialogName: {\n      type: String,\n      required: false\n    },\n    disableFindTime: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data() {\n    return {\n      loadingIndicator: true,\n      currentDate: this.startDate,\n      currentStart: this.startDate,\n      currentEnd: this.endDate,\n      lang: getFullCalendarLocale().locale,\n      formattingOptions: {\n        weekday: 'long',\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric'\n      },\n      freeSlots: [],\n      selectedSlot: null\n    };\n  },\n  mounted() {\n    const calendar = this.$refs.freeBusyFullCalendar.getApi();\n    calendar.scrollToTime(this.scrollTime);\n    this.findFreeSlots();\n  },\n  computed: {\n    ...mapState(useSettingsStore, {\n      timezoneId: 'getResolvedTimezone'\n    }),\n    ...mapState(useSettingsStore, ['showWeekends', 'showWeekNumbers', 'timezone']),\n    placeholder() {\n      return this.$t('calendar', 'Select automatic slot');\n    },\n    /**\n     * FullCalendar Plugins\n     *\n     * @return {(PluginDef)[]}\n     */\n    plugins() {\n      return [resourceTimelinePlugin, momentPluginFactory(), VTimezoneNamedTimezone, interactionPlugin];\n    },\n    formattedCurrentStart() {\n      return this.currentDate.toLocaleDateString(this.lang, this.formattingOptions);\n    },\n    formattedCurrentTime() {\n      const options = {\n        hour: '2-digit',\n        minute: '2-digit',\n        hour12: true\n      };\n      const startTime = this.currentStart.toLocaleTimeString(this.lang, options);\n      const endTime = this.currentEnd.toLocaleTimeString(this.lang, options);\n      return `${startTime} - ${endTime} `;\n    },\n    scrollTime() {\n      const options = {\n        hour: '2-digit',\n        minute: '2-digit',\n        seconds: '2-digit',\n        hour12: false\n      };\n      return this.currentDate.getHours() > 0 ? new Date(this.currentDate.getTime() - 60 * 60 * 1000).toLocaleTimeString(this.lang, options) : '10:00:00';\n    },\n    formattedTimeZone() {\n      return this.timezoneId.replace('/', '-');\n    },\n    eventSources() {\n      return [freeBusyResourceEventSource(this._uid, this.organizer.attendeeProperty, this.attendees.map(a => a.attendeeProperty)), freeBusyFakeBlockingEventSource(this._uid, this.resources, this.currentStart, this.currentEnd), freeBusyBlockedForAllEventSource(this.organizer.attendeeProperty, this.attendees.map(a => a.attendeeProperty), this.resources)];\n    },\n    resources() {\n      const resources = [];\n      const roles = {\n        CHAIR: this.$t('calendar', 'chairperson'),\n        'REQ-PARTICIPANT': this.$t('calendar', 'required participant'),\n        'NON-PARTICIPANT': this.$t('calendar', 'non-participant'),\n        'OPT-PARTICIPANT': this.$t('calendar', 'optional participant')\n      };\n      for (const attendee of [this.organizer, ...this.attendees]) {\n        let title = attendee.commonName || attendee.uri.slice(7);\n        if (attendee === this.organizer) {\n          title = this.$t('calendar', '{organizer} (organizer)', {\n            organizer: title\n          });\n        } else {\n          title = this.$t('calendar', '{attendee} ({role})', {\n            attendee: title,\n            role: roles[attendee.role]\n          });\n        }\n        resources.push({\n          id: attendee.attendeeProperty.email,\n          title\n        });\n      }\n      // Sort the resources by ID, just like fullcalendar does. This ensures that\n      // the fake blocking event can know the first and last resource reliably\n      // ref https://fullcalendar.io/docs/resourceOrder\n      resources.sort((a, b) => (a.id > b.id) - (a.id < b.id));\n      return resources;\n    },\n    /**\n     * List of possible Free-Busy values.\n     * This is used as legend.\n     *\n     * @return {({color: string, label: string})[]}\n     */\n    colorCaption() {\n      return [{\n        // TRANSLATORS: free as in available\n        label: this.$t('calendar', 'Free'),\n        color: getColorForFBType('FREE')\n      }, {\n        label: this.$t('calendar', 'Busy (tentative)'),\n        color: getColorForFBType('BUSY-TENTATIVE')\n      }, {\n        label: this.$t('calendar', 'Busy'),\n        color: getColorForFBType('BUSY')\n      }, {\n        label: this.$t('calendar', 'Out of office'),\n        color: getColorForFBType('BUSY-UNAVAILABLE')\n      }, {\n        label: this.$t('calendar', 'Unknown'),\n        color: getColorForFBType('UNKNOWN')\n      }];\n    },\n    /**\n     * Configuration options for FullCalendar\n     * Please see https://fullcalendar.io/docs#toc for details\n     *\n     * @return {object}\n     */\n    options() {\n      return {\n        // Initialization:\n        initialView: 'resourceTimelineDay',\n        initialDate: this.currentStart,\n        schedulerLicenseKey: 'GPL-My-Project-Is-Open-Source',\n        // Data\n        eventSources: this.eventSources,\n        resources: this.resources,\n        // Plugins\n        plugins: this.plugins,\n        // Interaction:\n        editable: false,\n        selectable: true,\n        select: this.handleSelect,\n        // Localization:\n        ...getDateFormattingConfig(),\n        ...getFullCalendarLocale(),\n        // Rendering\n        height: 'auto',\n        loading: this.loading,\n        headerToolbar: false,\n        resourceAreaColumns: [{\n          field: 'title',\n          headerContent: 'Attendees'\n        }],\n        // Timezones:\n        timeZone: this.timezoneId,\n        // Formatting of the title\n        // will produce something like \"Tuesday, September 18, 2018\"\n        // ref https://fullcalendar.io/docs/date-formatting\n        titleFormat: {\n          month: 'long',\n          year: 'numeric',\n          day: 'numeric',\n          weekday: 'long'\n        },\n        dateClick: this.findFreeSlots()\n      };\n    }\n  },\n  methods: {\n    handleSelect(arg) {\n      this.currentStart = arg.start;\n      this.currentEnd = arg.end;\n    },\n    save() {\n      this.$emit('update-dates', {\n        start: this.currentStart,\n        end: this.currentEnd\n      });\n    },\n    addAttendee(attendee) {\n      this.$emit('add-attendee', attendee);\n      this.findFreeSlots();\n    },\n    removeAttendee(attendee) {\n      this.$emit('remove-attendee', attendee);\n      this.findFreeSlots();\n    },\n    loading(isLoading) {\n      this.loadingIndicator = isLoading;\n    },\n    handleActions(action) {\n      let date = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      const calendar = this.$refs.freeBusyFullCalendar.getApi();\n      switch (action) {\n        case 'today':\n          calendar.today();\n          break;\n        case 'left':\n          calendar.prev();\n          break;\n        case 'right':\n          calendar.next();\n          break;\n        case 'picker':\n          calendar.gotoDate(date);\n          break;\n      }\n      this.currentDate = calendar.getDate();\n      calendar.scrollToTime(this.scrollTime);\n      this.findFreeSlots();\n    },\n    async findFreeSlots() {\n      // Doesn't make sense for multiple days\n      if (this.currentStart.getDate() !== this.currentEnd.getDate()) {\n        return;\n      }\n\n      // Needed to update with full calendar widget changes\n      const startSearch = new Date(this.currentStart);\n      startSearch.setDate(this.currentDate.getDate());\n      startSearch.setMonth(this.currentDate.getMonth());\n      startSearch.setYear(this.currentDate.getFullYear());\n      const endSearch = new Date(this.currentEnd);\n      endSearch.setDate(this.currentDate.getDate());\n      endSearch.setMonth(this.currentDate.getMonth());\n      endSearch.setYear(this.currentDate.getFullYear());\n      try {\n        // for now search slots only in the first week days\n        const endSearchDate = new Date(startSearch);\n        endSearchDate.setDate(startSearch.getDate() + 8);\n        const eventResults = await getBusySlots(this.organizer.attendeeProperty, this.attendees.map(a => a.attendeeProperty), startSearch, endSearchDate, this.timezoneId);\n        const freeSlots = getFirstFreeSlot(startSearch, endSearch, eventResults.events);\n        freeSlots.forEach(slot => {\n          slot.displayStart = dateFormat(slot.start, false, getFullCalendarLocale().locale);\n        });\n        this.freeSlots = freeSlots;\n      } catch (error) {\n        // Handle error here\n        console.error('Error occurred while finding free slots:', error);\n        throw error; // Re-throwing the error to handle it in the caller\n      }\n    },\n    setSlotSuggestion(slot) {\n      this.selectedSlot = slot;\n      const calendar = this.$refs.freeBusyFullCalendar.getApi();\n      calendar.gotoDate(slot.start);\n      calendar.scrollToTime(this.scrollTime);\n\n      // have to make these \"selected\" version of the props seeing as they can't be modified directly, and they aren't updated reactively when vuex is\n      this.currentStart = slot.start;\n      this.currentEnd = slot.end;\n      const clonedDate = new Date(slot.start); // so as not to modify slot.start\n      this.currentDate = new Date(clonedDate.setHours(0, 0, 0, 0));\n    }\n  }\n};","import { NcAvatar as Avatar, NcSelect } from '@nextcloud/vue';\nimport { principalPropertySearchByDisplaynameOrEmail } from '../../../services/caldavService.js';\nimport isCirclesEnabled from '../../../services/isCirclesEnabled.js';\nimport { circleSearchByName, circleGetMembers } from '../../../services/circleService.js';\nimport HttpClient from '@nextcloud/axios';\nimport debounce from 'debounce';\nimport { linkTo } from '@nextcloud/router';\nimport { randomId } from '../../../utils/randomId.js';\nimport GoogleCirclesCommunitiesIcon from 'vue-material-design-icons/GoogleCirclesCommunities.vue';\nimport { showInfo } from '@nextcloud/dialogs';\nimport { removeMailtoPrefix } from '../../../utils/attendee.js';\nexport default {\n  name: 'InviteesListSearch',\n  components: {\n    Avatar,\n    NcSelect,\n    GoogleCirclesCommunitiesIcon\n  },\n  props: {\n    alreadyInvitedEmails: {\n      type: Array,\n      required: true\n    },\n    organizer: {\n      type: Object,\n      required: false\n    }\n  },\n  data() {\n    return {\n      isLoading: false,\n      inputGiven: false,\n      matches: [],\n      isCirclesEnabled\n    };\n  },\n  computed: {\n    placeholder() {\n      return this.$t('calendar', 'Search for emails, users, contacts, teams or groups');\n    },\n    noResult() {\n      return this.$t('calendar', 'No match found');\n    }\n  },\n  methods: {\n    findAttendees: debounce(async function (query) {\n      this.isLoading = true;\n      const matches = [];\n      if (query.length > 0) {\n        const promises = [this.findAttendeesFromContactsAPI(query), this.findAttendeesFromDAV(query)];\n        if (isCirclesEnabled) {\n          promises.push(this.findAttendeesFromCircles(query));\n        }\n        const [contactsResults, davResults, circleResults] = await Promise.all(promises);\n        matches.push(...contactsResults);\n        matches.push(...davResults);\n        if (isCirclesEnabled) {\n          matches.push(...circleResults);\n        }\n\n        // Source of the Regex: https://stackoverflow.com/a/46181\n        // eslint-disable-next-line\n        const emailRegex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        if (emailRegex.test(query)) {\n          const alreadyInList = matches.find(attendee => attendee.email.toLowerCase() === query.toLowerCase());\n          if (!alreadyInList) {\n            matches.unshift({\n              calendarUserType: 'INDIVIDUAL',\n              commonName: query,\n              email: query,\n              isUser: false,\n              avatar: null,\n              language: null,\n              timezoneId: null,\n              hasMultipleEMails: false,\n              dropdownName: query\n            });\n          }\n        }\n\n        // Generate a unique id for every result to make the avatar components reactive\n        for (const match of matches) {\n          match.uid = randomId();\n        }\n        this.isLoading = false;\n        this.inputGiven = true;\n      } else {\n        this.inputGiven = false;\n        this.isLoading = false;\n      }\n      this.matches = matches;\n    }, 500),\n    addAttendee(selectedValue) {\n      if (selectedValue.type === 'circle') {\n        showInfo(this.$t('calendar', 'Note that members of circles get invited but are not synced yet.'));\n        this.resolveCircleMembers(selectedValue.id, selectedValue.email);\n      }\n      if (selectedValue.type === 'contactsgroup') {\n        showInfo(this.$t('calendar', 'Note that members of contact groups get invited but are not synced yet.'));\n        this.getContactGroupMembers(selectedValue.commonName);\n        const group = {\n          calendarUserType: 'GROUP',\n          commonName: selectedValue.commonName,\n          dropdownName: selectedValue.dropdownName,\n          email: selectedValue.email,\n          isUser: false,\n          subtitle: selectedValue.subtitle,\n          type: 'contactsgroup'\n        };\n        this.$emit('add-attendee', group);\n        return;\n      }\n      this.$emit('add-attendee', selectedValue);\n    },\n    async resolveCircleMembers(circleId, groupId) {\n      let results;\n      try {\n        // Going to query custom backend to fetch Circle members since we're going to use\n        // mail addresses of local circle members. The Circles API doesn't expose member\n        // emails yet. Change approved by @miaulalala and @ChristophWurst.\n        results = await circleGetMembers(circleId);\n      } catch (error) {\n        console.debug(error);\n        return [];\n      }\n      results.data.forEach(member => {\n        if (!this.organizer || member.email !== this.organizer.uri) {\n          this.$emit('add-attendee', member);\n        }\n      });\n    },\n    async getContactGroupMembers(groupName) {\n      let results;\n      try {\n        results = await HttpClient.post(linkTo('calendar', 'index.php') + '/v1/autocompletion/groupmembers', {\n          groupName\n        });\n      } catch (error) {\n        console.error('Failed to fetch contact group members', error);\n        return [];\n      }\n      results.data.forEach(member => {\n        if (!this.organizer || member.email !== this.organizer.uri) {\n          this.$emit('add-attendee', member);\n        }\n      });\n    },\n    async findAttendeesFromContactsAPI(query) {\n      let response;\n      try {\n        response = await HttpClient.post(linkTo('calendar', 'index.php') + '/v1/autocompletion/attendee', {\n          search: query\n        });\n      } catch (error) {\n        console.debug(error);\n        return [];\n      }\n      const data = response.data;\n      return data.reduce((arr, result) => {\n        const hasMultipleEMails = result.emails.length > 1;\n        result.emails.forEach(email => {\n          let name;\n          if (result.name && !hasMultipleEMails) {\n            name = result.name;\n          } else if (result.name && hasMultipleEMails) {\n            name = `${result.name} (${email})`;\n          } else {\n            name = email;\n          }\n          if (email && this.alreadyInvitedEmails.includes(removeMailtoPrefix(email))) {\n            return;\n          }\n          if (result.type === 'contactsgroup') {\n            arr.push({\n              calendarUserType: 'GROUP',\n              commonName: result.name,\n              subtitle: this.$n('calendar', '%n member', '%n members', result.members),\n              members: {\n                length: result.members\n              },\n              email,\n              isUser: false,\n              avatar: result.photo,\n              language: result.lang,\n              timezoneId: result.tzid,\n              hasMultipleEMails: false,\n              dropdownName: name,\n              type: 'contactsgroup'\n            });\n            return;\n          }\n          arr.push({\n            calendarUserType: 'INDIVIDUAL',\n            commonName: result.name,\n            email,\n            isUser: false,\n            avatar: result.photo,\n            language: result.lang,\n            timezoneId: result.tzid,\n            hasMultipleEMails,\n            dropdownName: name\n          });\n        });\n        return arr;\n      }, []);\n    },\n    async findAttendeesFromDAV(query) {\n      let results;\n      try {\n        results = await principalPropertySearchByDisplaynameOrEmail(query);\n      } catch (error) {\n        console.debug(error);\n        return [];\n      }\n      return results.filter(principal => {\n        if (!principal.email) {\n          return false;\n        }\n        if (this.alreadyInvitedEmails.includes(principal.email)) {\n          return false;\n        }\n\n        // Do not include resources and rooms\n        if (['ROOM', 'RESOURCE'].includes(principal.calendarUserType)) {\n          return false;\n        }\n        return true;\n      }).map(principal => {\n        return {\n          commonName: principal.displayname,\n          calendarUserType: principal.calendarUserType,\n          email: principal.email,\n          language: principal.language,\n          isUser: principal.calendarUserType === 'INDIVIDUAL',\n          avatar: decodeURIComponent(principal.userId),\n          hasMultipleEMails: false,\n          dropdownName: principal.displayname ? [principal.displayname, principal.email].join(' ') : principal.email\n        };\n      });\n    },\n    async findAttendeesFromCircles(query) {\n      let results;\n      try {\n        results = await circleSearchByName(query);\n      } catch (error) {\n        console.debug(error);\n        return [];\n      }\n      return results.filter(circle => {\n        return true;\n      }).map(circle => {\n        return {\n          commonName: circle.displayname,\n          calendarUserType: 'GROUP',\n          email: 'circle+' + circle.id + '@' + circle.instance,\n          isUser: false,\n          dropdownName: circle.displayname,\n          type: 'circle',\n          id: circle.id,\n          subtitle: this.$n('calendar', '%n member', '%n members', circle.population)\n        };\n      });\n    }\n  }\n};","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c(\"NcDialog\", {\n    attrs: {\n      size: \"large\",\n      name: _vm.dialogName || _vm.$t(\"calendar\", \"Availability of attendees, resources and rooms\")\n    },\n    on: {\n      closing: function ($event) {\n        return _vm.$emit(\"close\");\n      }\n    }\n  }, [_c(\"div\", {\n    staticClass: \"modal__content modal--scheduler\"\n  }, [_vm.loadingIndicator ? _c(\"div\", {\n    staticClass: \"loading-indicator\"\n  }, [_c(\"div\", {\n    staticClass: \"icon-loading\"\n  })]) : _vm._e(), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"modal__content__header\"\n  }, [_c(\"h2\", [_vm._v(_vm._s(_vm.$t(\"calendar\", \"Find a time\")))]), _vm._v(\" \"), _c(\"h3\", [_vm._v(_vm._s(_vm.eventTitle))]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"modal__content__header__attendees\"\n  }, [_vm._v(\"\\n\\t\\t\\t\\t\" + _vm._s(_vm.t(\"calendar\", \"with\")) + \"\\n\\t\\t\\t\\t\"), _c(\"NcUserBubble\", {\n    attrs: {\n      size: \"24\",\n      \"display-name\": _vm.organizer.commonName\n    }\n  }), _vm._v(\" \"), _vm._l(_vm.attendees, function (attendee) {\n    return _c(\"NcUserBubble\", {\n      key: attendee.id,\n      staticClass: \"modal__content__header__attendees__user-bubble\",\n      attrs: {\n        size: \"24\",\n        \"display-name\": attendee.commonName\n      },\n      scopedSlots: _vm._u([{\n        key: \"name\",\n        fn: function () {\n          return [_c(\"a\", {\n            staticClass: \"icon-close\",\n            attrs: {\n              href: \"#\",\n              title: \"Remove user\"\n            },\n            on: {\n              click: function ($event) {\n                return _vm.removeAttendee(attendee);\n              }\n            }\n          })];\n        },\n        proxy: true\n      }], null, true)\n    });\n  })], 2)]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"modal__content__actions\"\n  }, [_c(\"InviteesListSearch\", {\n    staticClass: \"modal__content__actions__select\",\n    attrs: {\n      \"already-invited-emails\": _vm.alreadyInvitedEmails,\n      organizer: _vm.organizer\n    },\n    on: {\n      \"add-attendee\": _vm.addAttendee\n    }\n  }), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"modal__content__actions__date\"\n  }, [_c(\"NcButton\", {\n    attrs: {\n      type: \"secondary\"\n    },\n    on: {\n      click: function ($event) {\n        return _vm.handleActions(\"today\");\n      }\n    }\n  }, [_vm._v(\"\\n\\t\\t\\t\\t\\t\" + _vm._s(_vm.$t(\"calendar\", \"Today\")) + \"\\n\\t\\t\\t\\t\")]), _vm._v(\" \"), _c(\"NcButton\", {\n    attrs: {\n      type: \"secondary\"\n    },\n    on: {\n      click: function ($event) {\n        return _vm.handleActions(\"left\");\n      }\n    },\n    scopedSlots: _vm._u([{\n      key: \"icon\",\n      fn: function () {\n        return [_c(\"ChevronLeftIcon\", {\n          attrs: {\n            size: 20\n          }\n        })];\n      },\n      proxy: true\n    }])\n  }), _vm._v(\" \"), _c(\"NcButton\", {\n    attrs: {\n      type: \"secondary\"\n    },\n    on: {\n      click: function ($event) {\n        return _vm.handleActions(\"right\");\n      }\n    },\n    scopedSlots: _vm._u([{\n      key: \"icon\",\n      fn: function () {\n        return [_c(\"ChevronRightIcon\", {\n          attrs: {\n            size: 20\n          }\n        })];\n      },\n      proxy: true\n    }])\n  }), _vm._v(\" \"), _c(\"NcDateTimePickerNative\", {\n    attrs: {\n      \"hide-label\": true,\n      value: _vm.currentDate\n    },\n    on: {\n      input: date => _vm.handleActions(\"picker\", date)\n    }\n  }), _vm._v(\" \"), _c(\"NcPopover\", {\n    attrs: {\n      \"focus-trap\": false\n    },\n    scopedSlots: _vm._u([{\n      key: \"trigger\",\n      fn: function () {\n        return [_c(\"NcButton\", {\n          attrs: {\n            type: \"tertiary-no-background\"\n          },\n          scopedSlots: _vm._u([{\n            key: \"icon\",\n            fn: function () {\n              return [_c(\"HelpCircleIcon\", {\n                attrs: {\n                  size: 20\n                }\n              })];\n            },\n            proxy: true\n          }])\n        })];\n      },\n      proxy: true\n    }])\n  }, [_vm._v(\" \"), [_c(\"div\", {\n    staticClass: \"freebusy-caption\"\n  }, [_c(\"div\", {\n    staticClass: \"freebusy-caption__calendar-user-types\"\n  }), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"freebusy-caption__colors\"\n  }, _vm._l(_vm.colorCaption, function (color) {\n    return _c(\"div\", {\n      key: color.color,\n      staticClass: \"freebusy-caption-item\"\n    }, [_c(\"div\", {\n      staticClass: \"freebusy-caption-item__color\",\n      style: {\n        \"background-color\": color.color\n      }\n    }), _vm._v(\" \"), _c(\"div\", {\n      staticClass: \"freebusy-caption-item__label\"\n    }, [_vm._v(\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\" + _vm._s(color.label) + \"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\")])]);\n  }), 0)])]], 2)], 1)], 1), _vm._v(\" \"), _c(\"FullCalendar\", {\n    ref: \"freeBusyFullCalendar\",\n    attrs: {\n      options: _vm.options\n    }\n  }), _vm._v(\" \"), !_vm.disableFindTime ? _c(\"div\", {\n    staticClass: \"modal__content__footer\"\n  }, [_c(\"div\", {\n    staticClass: \"modal__content__footer__title\"\n  }, [_vm.freeSlots ? _c(\"p\", [_vm._v(\"\\n\\t\\t\\t\\t\\t\" + _vm._s(_vm.$t(\"calendar\", \"Available times:\")) + \"\\n\\t\\t\\t\\t\\t\"), _c(\"NcSelect\", {\n    staticClass: \"available-slots__multiselect\",\n    attrs: {\n      options: _vm.freeSlots,\n      placeholder: _vm.placeholder,\n      clearable: false,\n      \"input-id\": \"slot\",\n      label: \"displayStart\",\n      \"label-outside\": true,\n      value: _vm.selectedSlot\n    },\n    on: {\n      \"option:selected\": _vm.setSlotSuggestion\n    },\n    scopedSlots: _vm._u([{\n      key: \"selected-option\",\n      fn: function (_ref) {\n        let {} = _ref;\n        return [_vm._v(\"\\n\\t\\t\\t\\t\\t\\t\\t\" + _vm._s(_vm.$t(\"calendar\", \"Suggestion accepted\")) + \"\\n\\t\\t\\t\\t\\t\\t\")];\n      }\n    }], null, false, 1565055063)\n  })], 1) : _vm._e(), _vm._v(\" \"), _c(\"h3\", [_vm._v(\"\\n\\t\\t\\t\\t\\t\" + _vm._s(_vm.formattedCurrentStart) + \"\\n\\t\\t\\t\\t\")]), _vm._v(\" \"), _c(\"p\", [_vm._v(_vm._s(_vm.formattedCurrentTime)), _c(\"span\", {\n    staticClass: \"modal__content__footer__title__timezone\"\n  }, [_vm._v(_vm._s(_vm.formattedTimeZone))])])]), _vm._v(\" \"), _c(\"NcButton\", {\n    attrs: {\n      type: \"primary\"\n    },\n    on: {\n      click: _vm.save\n    },\n    scopedSlots: _vm._u([{\n      key: \"icon\",\n      fn: function () {\n        return [_c(\"CheckIcon\", {\n          attrs: {\n            size: 20\n          }\n        })];\n      },\n      proxy: true\n    }], null, false, 2630571749)\n  }, [_vm._v(\"\\n\\t\\t\\t\\t\" + _vm._s(_vm.$t(\"calendar\", \"Done\")) + \"\\n\\t\\t\\t\\t\")])], 1) : _vm._e()], 1)]);\n};\nvar staticRenderFns = [];\nrender._withStripped = true;\nexport { render, staticRenderFns };","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c(\"NcSelect\", {\n    staticClass: \"invitees-search__multiselect\",\n    class: {\n      showContent: _vm.inputGiven,\n      \"icon-loading\": _vm.isLoading\n    },\n    attrs: {\n      options: _vm.matches,\n      searchable: true,\n      \"max-height\": 600,\n      placeholder: _vm.placeholder,\n      clearable: false,\n      \"label-outside\": true,\n      \"input-id\": \"uid\",\n      label: \"dropdownName\"\n    },\n    on: {\n      search: _vm.findAttendees,\n      \"option:selected\": _vm.addAttendee\n    },\n    scopedSlots: _vm._u([{\n      key: \"option\",\n      fn: function (option) {\n        return [_c(\"div\", {\n          staticClass: \"invitees-search-list-item\"\n        }, [option.isUser ? _c(\"Avatar\", {\n          key: option.uid,\n          attrs: {\n            user: option.avatar,\n            \"display-name\": option.dropdownName\n          }\n        }) : option.type === \"circle\" ? _c(\"Avatar\", {\n          scopedSlots: _vm._u([{\n            key: \"icon\",\n            fn: function () {\n              return [_c(\"GoogleCirclesCommunitiesIcon\", {\n                attrs: {\n                  size: 20\n                }\n              })];\n            },\n            proxy: true\n          }], null, true)\n        }) : _vm._e(), _vm._v(\" \"), !option.isUser && option.type !== \"circle\" ? _c(\"Avatar\", {\n          key: option.uid,\n          attrs: {\n            url: option.avatar,\n            \"display-name\": option.commonName\n          }\n        }) : _vm._e(), _vm._v(\" \"), _c(\"div\", {\n          staticClass: \"invitees-search-list-item__label\"\n        }, [_c(\"div\", [_vm._v(\"\\n\\t\\t\\t\\t\\t\" + _vm._s(option.commonName) + \"\\n\\t\\t\\t\\t\")]), _vm._v(\" \"), option.email !== option.commonName && option.type !== \"circle\" && option.type !== \"contactsgroup\" ? _c(\"div\", [_vm._v(\"\\n\\t\\t\\t\\t\\t\" + _vm._s(option.email) + \"\\n\\t\\t\\t\\t\")]) : _vm._e(), _vm._v(\" \"), option.type === \"circle\" || option.type === \"contactsgroup\" ? _c(\"div\", [_vm._v(\"\\n\\t\\t\\t\\t\\t\" + _vm._s(option.subtitle) + \"\\n\\t\\t\\t\\t\")]) : _vm._e()])], 1)];\n      }\n    }])\n  });\n};\nvar staticRenderFns = [];\nrender._withStripped = true;\nexport { render, staticRenderFns };","/**\n * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\nimport { translate as t } from '@nextcloud/l10n';\n\n/**\n *\n */\nexport function getDefaultCategories() {\n  // This list was taken from https://tools.ietf.org/html/rfc5545#section-5\n  const values = [t('calendar', 'Anniversary'), t('calendar', 'Appointment'), t('calendar', 'Business'), t('calendar', 'Education'), t('calendar', 'Holiday'), t('calendar', 'Meeting'), t('calendar', 'Miscellaneous'), t('calendar', 'Non-working hours'), t('calendar', 'Not in office'), t('calendar', 'Personal'), t('calendar', 'Phone call'), t('calendar', 'Sick day'), t('calendar', 'Special occasion'), t('calendar', 'Travel'), t('calendar', 'Vacation')];\n  return values.map(value => ({\n    value,\n    label: value\n  }));\n}\nexport default getDefaultCategories;","/**\n * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\nimport moment from '@nextcloud/moment';\n\n/**\n * Formats a date object\n *\n * @param {Date} value The date object to format\n * @param {boolean} isAllDay Whether or not to display only the date part\n * @param {string} locale The locale to format it in\n * @return {string}\n */\nexport default (value, isAllDay, locale) => {\n  if (isAllDay) {\n    return moment(value).locale(locale).format('ll');\n  } else {\n    return moment(value).locale(locale).format('lll');\n  }\n};","/**\n * SPDX-FileCopyrightText: 2021 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\nimport getTimezoneManager from '../../services/timezoneDataProviderService.js';\nimport { AttendeeProperty, DateTimeValue } from '@nextcloud/calendar-js';\nimport logger from '../../utils/logger.js';\nimport { doFreeBusyRequest } from '../../utils/freebusy.js';\n\n/**\n * Returns an event source for free-busy\n *\n * @param {AttendeeProperty} organizer The organizer of the event\n * @param {AttendeeProperty[]} attendees Array of the event's attendees\n * @param {string[]} resources List of resources\n * @return {{startEditable: boolean, resourceEditable: boolean, editable: boolean, id: string, durationEditable: boolean, events: events}}\n */\nexport default function (organizer, attendees, resources) {\n  const resourceIds = resources.map(resource => resource.id);\n  return {\n    id: 'free-busy-free-for-all',\n    editable: false,\n    startEditable: false,\n    durationEditable: false,\n    resourceEditable: false,\n    events: async (_ref, successCallback, failureCallback) => {\n      let {\n        start,\n        end,\n        timeZone\n      } = _ref;\n      console.debug('freeBusyBlockedForAllEventSource', start, end, timeZone);\n      let timezoneObject = getTimezoneManager().getTimezoneForId(timeZone);\n      if (!timezoneObject) {\n        timezoneObject = getTimezoneManager().getTimezoneForId('UTC');\n        logger.error(`FreeBusyEventSource: Timezone ${timeZone} not found, falling back to UTC.`);\n      }\n      const startDateTime = DateTimeValue.fromJSDate(start, true);\n      const endDateTime = DateTimeValue.fromJSDate(end, true);\n      const organizerAsAttendee = new AttendeeProperty('ATTENDEE', organizer.email);\n      const freeBusyIterator = await doFreeBusyRequest(startDateTime, endDateTime, organizer, [organizerAsAttendee, ...attendees]);\n      const slots = [];\n      for await (const [, freeBusyProperty] of freeBusyIterator) {\n        slots.push({\n          start: freeBusyProperty.getFirstValue().start.getInTimezone(timezoneObject).jsDate,\n          end: freeBusyProperty.getFirstValue().end.getInTimezone(timezoneObject).jsDate\n        });\n      }\n\n      // Now that we have all the busy slots we try to combine them to iron\n      // out any overlaps between them.\n      // The algorithm below will sort the slots by their start time ane then\n      // iteratively collapse anything that starts and stops within the same\n      // time. The complexity of this algorithms is n^2, but assuming the\n      // number of attendees of an event is relatively low, this should be\n      // fine to calculate.\n      slots.sort((a, b) => a.start - b.start);\n      const slotsWithoutOverlap = [];\n      if (slots.length) {\n        let currentSlotStart = slots[0].start;\n        slots.forEach(slot => {\n          const combined = findNextCombinedSlot(slots, currentSlotStart) ?? slot;\n          if (combined.start < currentSlotStart) {\n            // This slot has already been combined with a former slot\n            return;\n          }\n          slotsWithoutOverlap.push(combined);\n          currentSlotStart = combined.end;\n        });\n      }\n      console.debug('deduplicated slots', slots, slotsWithoutOverlap);\n      const events = slotsWithoutOverlap.map(slot => {\n        return {\n          groupId: 'free-busy-blocked-for-all',\n          start: slot.start.toISOString(),\n          end: slot.end.toISOString(),\n          resourceIds,\n          display: 'background',\n          allDay: false,\n          backgroundColor: 'var(--color-text-maxcontrast)',\n          borderColor: 'var(--color-text-maxcontrast)'\n        };\n      });\n      console.debug('freeBusyBlockedForAllEventSource', slots, events);\n      successCallback(events);\n    }\n  };\n}\n\n/**\n * @param {object} slots the slots\n * @param {Date} start the start\n */\nfunction findNextCombinedSlot(slots, start) {\n  const slot = slots.filter(slot => slot.start >= start).reduce((combined, slot) => {\n    if (slot.start < combined.start) {\n      // This slot starts too early\n      return combined;\n    }\n    if (slot.end <= combined.end) {\n      // This slots starts and ends within the combined one\n      return combined;\n    }\n    if (slot.start > combined.end) {\n      // This slots starts after the the combined one\n      return combined;\n    }\n\n    // The slot is extended\n    return {\n      start: combined.start,\n      end: slot.end\n    };\n  }, {\n    start,\n    end: start\n  });\n  if (slot.start === slot.end) {\n    // Empty -> no slot\n    return undefined;\n  }\n  return slot;\n}","/**\n * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\n/**\n * Returns an event source for free-busy\n *\n * @param {string} id Identification for this source\n * @param {string[]} resources List of resources\n * @param {Date} eventStart Start of the event being edited / created\n * @param {Date} eventEnd End of the event being edited / created\n * @return {{startEditable: boolean, resourceEditable: boolean, editable: boolean, id: string, durationEditable: boolean, events: events}}\n */\nexport default function (id, resources, eventStart, eventEnd) {\n  const resourceIds = resources.map(resource => resource.id);\n  return {\n    id: 'free-busy-fake-blocking-event-source-' + id,\n    editable: false,\n    startEditable: false,\n    durationEditable: false,\n    resourceEditable: false,\n    events: async (_ref, successCallback, failureCallback) => {\n      let {\n        start,\n        end,\n        timeZone\n      } = _ref;\n      if (resources.length === 1) {\n        successCallback([{\n          id: Math.random().toString(36).substring(7),\n          start: eventStart.toISOString(),\n          end: eventEnd.toISOString(),\n          allDay: false,\n          display: 'background',\n          classNames: ['blocking-event-free-busy', 'blocking-event-free-busy--first-row', 'blocking-event-free-busy--last-row'],\n          resourceId: resourceIds[0]\n        }]);\n      } else if (resources.length === 2) {\n        successCallback([{\n          id: Math.random().toString(36).substring(7),\n          start: eventStart.toISOString(),\n          end: eventEnd.toISOString(),\n          allDay: false,\n          display: 'background',\n          classNames: ['blocking-event-free-busy', 'blocking-event-free-busy--first-row'],\n          resourceId: resourceIds[0]\n        }, {\n          id: Math.random().toString(36).substring(7),\n          start: eventStart.toISOString(),\n          end: eventEnd.toISOString(),\n          allDay: false,\n          display: 'background',\n          classNames: ['blocking-event-free-busy', 'blocking-event-free-busy--last-row'],\n          resourceId: resourceIds[1]\n        }]);\n      } else {\n        successCallback([{\n          id: Math.random().toString(36).substring(7),\n          start: eventStart.toISOString(),\n          end: eventEnd.toISOString(),\n          allDay: false,\n          display: 'background',\n          classNames: ['blocking-event-free-busy', 'blocking-event-free-busy--first-row'],\n          resourceIds: resourceIds.slice(0, 1)\n        }, {\n          id: Math.random().toString(36).substring(7),\n          start: eventStart.toISOString(),\n          end: eventEnd.toISOString(),\n          allDay: false,\n          display: 'background',\n          classNames: ['blocking-event-free-busy'],\n          resourceIds: resourceIds.slice(1, -1)\n        }, {\n          id: Math.random().toString(36).substring(7),\n          start: eventStart.toISOString(),\n          end: eventEnd.toISOString(),\n          allDay: false,\n          display: 'background',\n          classNames: ['blocking-event-free-busy', 'blocking-event-free-busy--last-row'],\n          resourceIds: resourceIds.slice(-1)\n        }]);\n      }\n    }\n  };\n}","/**\n * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\nimport { AttendeeProperty } from '@nextcloud/calendar-js';\nimport { getBusySlots } from '../../services/freeBusySlotService.js';\n\n/**\n * Returns an event source for free-busy\n *\n * @param {string} id Identification for this source\n * @param {AttendeeProperty} organizer The organizer of the event\n * @param {AttendeeProperty[]} attendees Array of the event's attendees\n * @return {{startEditable: boolean, resourceEditable: boolean, editable: boolean, id: string, durationEditable: boolean, events: events}}\n */\nexport default function (id, organizer, attendees) {\n  return {\n    id: 'free-busy-event-source-' + id,\n    editable: false,\n    startEditable: false,\n    durationEditable: false,\n    resourceEditable: false,\n    events: async (_ref, successCallback, failureCallback) => {\n      let {\n        start,\n        end,\n        timeZone\n      } = _ref;\n      const result = await getBusySlots(organizer, attendees, start, end, timeZone);\n      if (result.error) {\n        failureCallback(result.error);\n      } else {\n        successCallback(result.events);\n      }\n    }\n  };\n}","/**\n * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\nimport { getColorForFBType } from '../../utils/freebusy.js';\nimport { getParserManager } from '@nextcloud/calendar-js';\n\n/**\n * Converts the response\n *\n * @param {string} uri URI of the resource\n * @param {string} calendarData Calendar-data containing free-busy data\n * @param {boolean} success Whether or not the free-busy request was successful\n * @param {DateTimeValue} start The start of the fetched time-range\n * @param {DateTimeValue} end The end of the fetched time-range\n * @param {Timezone} timezone Timezone of user viewing data\n * @return {object[]}\n */\nexport default function (uri, calendarData, success, start, end, timezone) {\n  if (!success) {\n    return [{\n      id: Math.random().toString(36).substring(7),\n      start: start.getInTimezone(timezone).jsDate.toISOString(),\n      end: end.getInTimezone(timezone).jsDate.toISOString(),\n      resourceId: uri,\n      display: 'background',\n      allDay: false,\n      backgroundColor: getColorForFBType('UNKNOWN'),\n      borderColor: getColorForFBType('UNKNOWN')\n    }];\n  }\n  const parserManager = getParserManager();\n  const parser = parserManager.getParserForFileType('text/calendar');\n  parser.parse(calendarData);\n\n  // TODO: fix me upstream, parser only exports VEVENT, VJOURNAL and VTODO at the moment\n  const calendarComponent = parser._calendarComponent;\n  const freeBusyComponent = calendarComponent.getFirstComponent('VFREEBUSY');\n  if (!freeBusyComponent) {\n    return [];\n  }\n  const events = [];\n  for (const freeBusyProperty of freeBusyComponent.getPropertyIterator('FREEBUSY')) {\n    /** @member {FreeBusyProperty} freeBusyProperty */\n    events.push({\n      id: Math.random().toString(36).substring(7),\n      start: freeBusyProperty.getFirstValue().start.getInTimezone(timezone).jsDate.toISOString(),\n      end: freeBusyProperty.getFirstValue().end.getInTimezone(timezone).jsDate.toISOString(),\n      resourceId: uri,\n      display: 'background',\n      classNames: ['free-busy-block', 'free-busy-' + freeBusyProperty.type.toLowerCase()],\n      backgroundColor: getColorForFBType(freeBusyProperty.type)\n    });\n  }\n  return events;\n}","/**\n * SPDX-FileCopyrightText: 2020 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\n/**\n * Returns the date-formatting config for FullCalendar\n *\n * @return {object}\n */\nconst getDateFormattingConfig = () => {\n  const defaultConfig = {\n    dayHeaderFormat: 'ddd l',\n    titleFormat: 'll',\n    slotLabelFormat: 'LT'\n  };\n  return {\n    // Date formatting:\n    eventTimeFormat: 'LT',\n    views: {\n      dayGridMonth: {\n        ...defaultConfig,\n        dayHeaderFormat: 'ddd'\n      },\n      multiMonthYear: {\n        ...defaultConfig,\n        dayHeaderFormat: 'ddd',\n        multiMonthMaxColumns: 4\n      },\n      timeGridDay: defaultConfig,\n      timeGridWeek: defaultConfig,\n      listMonth: {\n        // Changes for the List View\n        listDayFormat: 'LL, dddd',\n        listDaySideFormat: false\n      },\n      resourceTimelineDay: defaultConfig\n    }\n  };\n};\nexport { getDateFormattingConfig };","/**\n * SPDX-FileCopyrightText: 2020 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\nimport { translate as t, getLanguage, getFirstDay } from '@nextcloud/l10n';\n\n/**\n * Returns localization settings for the FullCalender package.\n *\n * @see https://fullcalendar.io/docs\n * @return {object}\n */\nconst getFullCalendarLocale = () => {\n  return {\n    firstDay: getFirstDay(),\n    locale: getLanguage(),\n    // TRANSLATORS W is an abbreviation for Week\n    weekText: t('calendar', 'W'),\n    allDayText: t('calendar', 'All day'),\n    moreLinkText: n => t('calendar', '%n more', {}, n),\n    noEventsText: t('calendar', 'No events to display')\n  };\n};\nexport { getFullCalendarLocale };","/**\n * SPDX-FileCopyrightText: 2020 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\nimport moment from '@nextcloud/moment';\nimport { createPlugin } from '@fullcalendar/core';\nimport useSettingsStore from '../../store/settings.js';\n\n// TODO: We don't really need to use a factory pattern here anymore. It was introduced to fix a\n//       reactivity bug with Vuex. Since we use Pinia now and don't need to pass the store all the\n//       way down it can be refactored/reverted.\n//       Ref commit 207b7a13655ae7f1e01ee0e7d40b5109a37c6174\n\n/**\n * Creates a new moment object using the locale from the given Pinia store\n *\n * @param {object[]} data FullCalendar object containing the date etc.\n * @param {number[]} data.array Input data to initialize moment\n * @return {moment.Moment}\n */\nconst momentFactory = _ref => {\n  let {\n    array\n  } = _ref;\n  const settingsStore = useSettingsStore();\n  return moment(array).locale(settingsStore.momentLocale);\n};\n\n/**\n * Construct a cmdFormatter that can be used to construct a FullCalendar plugin\n *\n * @return {function(string, string):string} cmdFormatter function\n */\nconst cmdFormatterFactory = () => (cmdStr, arg) => {\n  // With our specific DateFormattingConfig,\n  // cmdStr will always be a moment parsable string\n  // like LT, etc.\n  //\n  // No need to manually parse it.\n  //\n  // This is not the case, if you use the standard FC\n  // formatting config.\n\n  // If arg.end is defined, this is a time-range\n  if (arg.end) {\n    const start = momentFactory(arg.start).format(cmdStr);\n    const end = momentFactory(arg.end).format(cmdStr);\n    if (start === end) {\n      return start;\n    }\n    return start + arg.defaultSeparator + end;\n  }\n  return momentFactory(arg.start).format(cmdStr);\n};\n\n/**\n * Construct a moment plugin for FullCalendar using the locale from the given Vuex store\n *\n * @return {object} The FullCalendar plugin\n */\nexport default function momentPluginFactory() {\n  return createPlugin({\n    name: '@nextcloud/moment-plugin',\n    cmdFormatter: cmdFormatterFactory()\n  });\n}","/**\n * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\nimport { createPlugin } from '@fullcalendar/core';\nimport { NamedTimeZoneImpl } from '@fullcalendar/core/internal';\nimport getTimezoneManager from '../../services/timezoneDataProviderService.js';\nimport logger from '../../utils/logger.js';\n\n/**\n * Our own FullCalendar Timezone implementation based on the VTimezones we ship\n */\nclass VTimezoneNamedTimezone extends NamedTimeZoneImpl {\n  /**\n   * gets UTC offset for given date of this timezone\n   *\n   * @param {number[]} date an array that mirrors the parameters from new Date()\n   * @return {number} offset in minutes\n   */\n  offsetForArray(_ref) {\n    let [year, month, day, hour, minute, second] = _ref;\n    let timezone = getTimezoneManager().getTimezoneForId(this.timeZoneName);\n    if (!timezone) {\n      timezone = getTimezoneManager().getTimezoneForId('UTC');\n      logger.error(`VTimezoneNamedTimezoneImpl: Timezone ${this.timeZoneName} not found, falling back to UTC.`);\n    }\n    // calendar-js works with natural month numbers,\n    // not the javascript 0-based ones\n    month += 1;\n    return timezone.offsetForArray(year, month, day, hour, minute, second) / 60;\n  }\n\n  /**\n   * returns parameters for Date object in this timezone based on given timestamp\n   *\n   * @param {number} ms Timestamp in milliseconds\n   * @return {number[]}\n   */\n  timestampToArray(ms) {\n    let timezone = getTimezoneManager().getTimezoneForId(this.timeZoneName);\n    if (!timezone) {\n      timezone = getTimezoneManager().getTimezoneForId('UTC');\n      logger.error(`VTimezoneNamedTimezoneImpl: Timezone ${this.timeZoneName} not found, falling back to UTC.`);\n    }\n    const timestampArray = timezone.timestampToArray(ms);\n\n    // calendar-js works with natural month numbers,\n    // not the javascript 0-based ones\n    timestampArray[1]--;\n    return timestampArray;\n  }\n}\nexport default createPlugin({\n  name: '@nextcloud/v-timezone-named-timezone-plugin',\n  namedTimeZonedImpl: VTimezoneNamedTimezone\n});","/**\n * SPDX-FileCopyrightText: 2020 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\nimport { getAmountAndUnitForTimedEvents, getAmountHoursMinutesAndUnitForAllDayEvents } from '../utils/alarms.js';\nimport { getDateFromDateTimeValue } from '../utils/date.js';\n\n/**\n * Creates a complete alarm object based on given props\n *\n * @param {object} props The alarm properties already provided\n * @return {object}\n */\nconst getDefaultAlarmObject = function () {\n  let props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return Object.assign({}, {\n    // The calendar-js alarm component\n    alarmComponent: null,\n    // Type of alarm: DISPLAY, EMAIL, AUDIO\n    type: null,\n    // Whether or not the alarm is relative\n    isRelative: false,\n    // Date object of an absolute alarm (if it's absolute, it must be DATE-TIME)\n    absoluteDate: null,\n    // The time zone id of for absolute alarms\n    absoluteTimezoneId: null,\n    // Whether or not the relative alarm is before the event,\n    relativeIsBefore: null,\n    // Whether or not the alarm is relative to the event's start\n    relativeIsRelatedToStart: null,\n    // TIMED EVENTS:\n    // Unit (seconds, minutes, hours, ...) if this alarm is inside a timed event\n    relativeUnitTimed: null,\n    // The amount of unit if this alarm is inside a timed event\n    relativeAmountTimed: null,\n    // ALL-DAY EVENTS:\n    // Unit (seconds, minutes, hours, ...) if this alarm is inside an all-day event\n    relativeUnitAllDay: null,\n    // The amount of unit if this alarm is inside a all-day event\n    relativeAmountAllDay: null,\n    // The hours to display alarm for in an all-day event (e.g. 1 day before at 9:00 am)\n    relativeHoursAllDay: null,\n    // The minutes to display alarm for in an all-day event (e.g. 1 day before at 9:30 am)\n    relativeMinutesAllDay: null,\n    // The total amount of seconds for a relative alarm\n    relativeTrigger: null\n  }, props);\n};\n\n/**\n * Map an alarm component to our alarm object\n *\n * @param {AlarmComponent} alarmComponent The calendar-js alarm-component to turn into an alarm object\n * @return {object}\n */\nconst mapAlarmComponentToAlarmObject = alarmComponent => {\n  if (alarmComponent.trigger.isRelative()) {\n    const relativeIsBefore = alarmComponent.trigger.value.isNegative;\n    const relativeIsRelatedToStart = alarmComponent.trigger.related === 'START';\n    const {\n      amount: relativeAmountTimed,\n      unit: relativeUnitTimed\n    } = getAmountAndUnitForTimedEvents(alarmComponent.trigger.value.totalSeconds);\n    const {\n      unit: relativeUnitAllDay,\n      amount: relativeAmountAllDay,\n      hours: relativeHoursAllDay,\n      minutes: relativeMinutesAllDay\n    } = getAmountHoursMinutesAndUnitForAllDayEvents(alarmComponent.trigger.value.totalSeconds);\n    const relativeTrigger = alarmComponent.trigger.value.totalSeconds;\n    return getDefaultAlarmObject({\n      alarmComponent,\n      type: alarmComponent.action,\n      isRelative: alarmComponent.trigger.isRelative(),\n      relativeIsBefore,\n      relativeIsRelatedToStart,\n      relativeUnitTimed,\n      relativeAmountTimed,\n      relativeUnitAllDay,\n      relativeAmountAllDay,\n      relativeHoursAllDay,\n      relativeMinutesAllDay,\n      relativeTrigger\n    });\n  } else {\n    const absoluteDate = getDateFromDateTimeValue(alarmComponent.trigger.value);\n    return getDefaultAlarmObject({\n      alarmComponent,\n      type: alarmComponent.action,\n      isRelative: alarmComponent.trigger.isRelative(),\n      absoluteDate,\n      absoluteTimezoneId: alarmComponent.trigger.value.timezoneId\n    });\n  }\n};\nexport { getDefaultAlarmObject, mapAlarmComponentToAlarmObject };","/**\n * SPDX-FileCopyrightText: 2022 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\n/**\n * Creates a complete attachment object based on given props\n *\n * @param {object} props The attachment properties already provided\n * @return {object}\n */\nconst getDefaultAttachmentObject = function () {\n  let props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return Object.assign({}, {\n    // The calendar-js attachment property\n    attachmentProperty: null,\n    // The file name of the attachment\n    fileName: null,\n    // The attachment mime type\n    formatType: null,\n    // The uri of the attachment\n    uri: null,\n    // The value from calendar object\n    value: null,\n    // Preview of file\n    xNcHasPreview: null,\n    // File id in NC\n    xNcFileId: null\n  }, props);\n};\n\n/**\n * Maps a calendar-js attachment property to our attachment object\n *\n * @param {attachmentProperty} attachmentProperty The calendar-js attachmentProperty to turn into a attachment object\n * @return {object}\n */\nconst mapAttachmentPropertyToAttchmentObject = attachmentProperty => {\n  return getDefaultAttachmentObject({\n    attachmentProperty,\n    fileName: attachmentProperty.getParameterFirstValue('FILENAME'),\n    formatType: attachmentProperty.formatType,\n    uri: attachmentProperty.uri,\n    value: attachmentProperty.value,\n    xNcHasPreview: attachmentProperty.getParameterFirstValue('X-NC-HAS-PREVIEW') === 'true',\n    xNcFileId: attachmentProperty.getParameterFirstValue('X-NC-FILE-ID')\n  });\n};\nexport { getDefaultAttachmentObject, mapAttachmentPropertyToAttchmentObject };","/**\n * SPDX-FileCopyrightText: 2020 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\nimport { AttendeeProperty } from '@nextcloud/calendar-js';\n\n/**\n * Creates a complete attendee object based on given props\n *\n * TODO:\n *  - we should eventually support delegatedFrom and delegatedTo\n *\n * @param {object} props The attendee properties already provided\n * @return {object}\n */\nconst getDefaultAttendeeObject = function () {\n  let props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return Object.assign({}, {\n    // The calendar-js attendee property\n    attendeeProperty: null,\n    // The display-name of the attendee\n    commonName: null,\n    // The calendar-user-type of the attendee\n    calendarUserType: 'INDIVIDUAL',\n    // The participation status of the attendee\n    participationStatus: 'NEEDS-ACTION',\n    // The role of the attendee\n    role: 'REQ-PARTICIPANT',\n    // The RSVP for the attendee\n    rsvp: false,\n    // The uri of the attendee\n    uri: null,\n    // Member address of the attendee\n    member: null\n  }, props);\n};\n\n/**\n * Maps a calendar-js attendee property to our attendee object\n *\n * @param {AttendeeProperty} attendeeProperty The calendar-js attendeeProperty to turn into a attendee object\n * @return {object}\n */\nconst mapAttendeePropertyToAttendeeObject = attendeeProperty => {\n  return getDefaultAttendeeObject({\n    attendeeProperty,\n    commonName: attendeeProperty.commonName,\n    calendarUserType: attendeeProperty.userType,\n    participationStatus: attendeeProperty.participationStatus,\n    role: attendeeProperty.role,\n    rsvp: attendeeProperty.rsvp,\n    uri: attendeeProperty.email,\n    member: attendeeProperty.member\n  });\n};\n\n/**\n * Maps a principal object to to our attendee object\n *\n * @param {object} principalObject An attendee object created by mapDavToPrincipal()\n * @param {boolean} isOrganizer Should it be an attendee or an organizer?\n * @return {AttendeeProperty}\n */\nconst mapPrincipalObjectToAttendeeObject = function (principalObject) {\n  let isOrganizer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  const attendeeProperty = AttendeeProperty.fromNameAndEMail(principalObject.displayname, principalObject.emailAddress, isOrganizer);\n  attendeeProperty.userType = principalObject.calendarUserType;\n  return mapAttendeePropertyToAttendeeObject(attendeeProperty);\n};\nexport { getDefaultAttendeeObject, mapAttendeePropertyToAttendeeObject, mapPrincipalObjectToAttendeeObject };","/**\n * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\nimport { detectColor, uidToHexColor } from '../utils/color.js';\nimport { mapDavShareeToCalendarShareObject } from './calendarShare.js';\n\n/**\n * Creates a complete calendar-object based on given props\n *\n * @param {object} props Calendar-props already provided\n * @return {object}\n */\nconst getDefaultCalendarObject = function () {\n  let props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return Object.assign({}, {\n    // Id of the calendar\n    id: '',\n    // Visible display name\n    displayName: '',\n    // Color of the calendar\n    color: uidToHexColor(''),\n    // Whether or not the calendar is visible in the grid\n    enabled: true,\n    // Whether or not the calendar is loading events at the moment\n    loading: false,\n    // Whether this calendar supports VEvents\n    supportsEvents: true,\n    // Whether this calendar supports VJournals\n    supportsJournals: false,\n    // Whether this calendar supports VTodos\n    supportsTasks: false,\n    // The principal uri of the owner\n    owner: '',\n    // Timezone set for this calendar\n    timezone: null,\n    // List of shares\n    shares: [],\n    // Published url\n    publishURL: null,\n    // Internal CalDAV url of this calendar\n    url: '',\n    // Whether this calendar is read-only\n    readOnly: false,\n    // The order of this calendar in the calendar-list\n    order: 0,\n    // Whether or not the calendar is shared with me\n    isSharedWithMe: false,\n    // Whether or not the calendar can be shared by me\n    canBeShared: false,\n    // Whether or not the calendar can be published by me\n    canBePublished: false,\n    // Reference to cdav-lib object\n    dav: false,\n    // All calendar-objects from this calendar that have already been fetched\n    calendarObjects: [],\n    // Time-ranges that have already been fetched for this calendar\n    fetchedTimeRanges: [],\n    // Scheduling transparency\n    transparency: 'opaque'\n  }, props);\n};\n\n/**\n * Map a dav collection to our calendar object model\n *\n * @param {object} calendar The calendar object from the cdav library\n * @param {object=} currentUserPrincipal The principal model of the current user principal\n * @return {object}\n */\nconst mapDavCollectionToCalendar = (calendar, currentUserPrincipal) => {\n  const id = btoa(calendar.url);\n  const displayName = calendar.displayname || getCalendarUriFromUrl(calendar.url);\n\n  // calendar.color can be set to anything on the server,\n  // so make sure it's something that remotely looks like a color\n  let color = detectColor(calendar.color);\n  if (!color) {\n    // As fallback if we don't know what color that is supposed to be\n    color = uidToHexColor(displayName);\n  }\n  const supportsEvents = calendar.components.includes('VEVENT');\n  const supportsJournals = calendar.components.includes('VJOURNAL');\n  const supportsTasks = calendar.components.includes('VTODO');\n  const owner = calendar.owner;\n  const readOnly = !calendar.isWriteable();\n  const canBeShared = calendar.isShareable();\n  const canBePublished = calendar.isPublishable();\n  const order = calendar.order || 0;\n  const url = calendar.url;\n  const publishURL = calendar.publishURL || null;\n  const timezone = calendar.timezone || null;\n  // If this property is not present on a calendar collection,\n  // then the default value CALDAV:opaque MUST be assumed.\n  // https://datatracker.ietf.org/doc/html/rfc6638#section-9.1\n  const transparency = calendar.transparency || 'opaque';\n  let isSharedWithMe = false;\n  if (!currentUserPrincipal) {\n    // If the user is not authenticated, the calendar\n    // will always be marked as shared with them\n    isSharedWithMe = true;\n  } else {\n    isSharedWithMe = owner !== currentUserPrincipal.url;\n  }\n  let enabled;\n  if (!currentUserPrincipal) {\n    // If the user is not authenticated,\n    // always enable the calendar\n    enabled = true;\n  } else if (typeof calendar.enabled === 'boolean') {\n    // If calendar-enabled is set, we will just take that\n    enabled = calendar.enabled;\n  } else {\n    // If there is no calendar-enabled,\n    // we will display the calendar by default and set enabled\n    enabled = true;\n    calendar.enabled = true;\n  }\n  const shares = [];\n  if (!!currentUserPrincipal && Array.isArray(calendar.shares)) {\n    for (const share of calendar.shares) {\n      if (share.href === currentUserPrincipal.principalScheme) {\n        continue;\n      }\n      shares.push(mapDavShareeToCalendarShareObject(share));\n    }\n  }\n  return getDefaultCalendarObject({\n    id,\n    displayName,\n    color,\n    order,\n    url,\n    enabled,\n    supportsEvents,\n    supportsJournals,\n    supportsTasks,\n    isSharedWithMe,\n    owner,\n    readOnly,\n    publishURL,\n    canBeShared,\n    canBePublished,\n    shares,\n    timezone,\n    transparency,\n    dav: calendar\n  });\n};\n\n/**\n * Gets the calendar uri from the url\n *\n * @param {string} url The url to get calendar uri from\n * @return {string}\n */\nfunction getCalendarUriFromUrl(url) {\n  if (url.endsWith('/')) {\n    url = url.substring(0, url.length - 1);\n  }\n  return url.substring(url.lastIndexOf('/') + 1);\n}\nexport { getDefaultCalendarObject, mapDavCollectionToCalendar };","/**\n * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\nimport { getParserManager } from '@nextcloud/calendar-js';\nimport { COMPONENT_NAME_EVENT, COMPONENT_NAME_JOURNAL, COMPONENT_NAME_VTODO } from './consts.js';\n\n/**\n * Creates a complete calendar-object-object based on given props\n *\n * @param {object} props Calendar-object-props already provided\n * @return {object}\n */\nconst getDefaultCalendarObjectObject = function () {\n  let props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return Object.assign({}, {\n    // Id of this calendar-object\n    id: null,\n    // Id of the associated calendar\n    calendarId: null,\n    // The cdav-library object storing the calendar-object\n    dav: null,\n    // The parsed calendar-js object\n    calendarComponent: null,\n    // The uid of the calendar-object\n    uid: null,\n    // The uri of the calendar-object\n    uri: null,\n    // The type of calendar-object\n    objectType: null,\n    // Whether or not the calendar-object is an event\n    isEvent: false,\n    // Whether or not the calendar-object is a journal\n    isJournal: false,\n    // Whether or not the calendar-object is a task\n    isTodo: false,\n    // Whether or not the calendar-object exists on the server\n    existsOnServer: false\n  }, props);\n};\n\n/**\n * Maps a calendar-object from c-dav to our calendar-object object\n *\n * @param {VObject} dav The c-dav VObject\n * @param {string} calendarId The calendar-id this object is associated with\n * @return {object}\n */\nconst mapCDavObjectToCalendarObject = (dav, calendarId) => {\n  const parserManager = getParserManager();\n  const parser = parserManager.getParserForFileType('text/calendar');\n\n  // This should not be the case, but let's just be on the safe side\n  if (typeof dav.data !== 'string' || dav.data.trim() === '') {\n    throw new Error('Empty calendar object');\n  }\n  parser.parse(dav.data);\n  const calendarComponentIterator = parser.getItemIterator();\n  const calendarComponent = calendarComponentIterator.next().value;\n  if (!calendarComponent) {\n    throw new Error('Empty calendar object');\n  }\n  const vObjectIterator = calendarComponent.getVObjectIterator();\n  const firstVObject = vObjectIterator.next().value;\n  return getDefaultCalendarObjectObject({\n    id: btoa(dav.url),\n    calendarId,\n    dav,\n    calendarComponent,\n    uid: firstVObject.uid,\n    uri: dav.url,\n    objectType: firstVObject.name,\n    isEvent: firstVObject.name === COMPONENT_NAME_EVENT,\n    isJournal: firstVObject.name === COMPONENT_NAME_JOURNAL,\n    isTodo: firstVObject.name === COMPONENT_NAME_VTODO,\n    existsOnServer: true\n  });\n};\n\n/**\n * Maps a calendar-component from calendar-js to our calendar-object object\n *\n * @param {CalendarComponent} calendarComponent The calendarComponent to create the calendarObject from\n * @param {string=} calendarId The associated calendar if applicable\n * @return {object}\n */\nconst mapCalendarJsToCalendarObject = function (calendarComponent) {\n  let calendarId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  const vObjectIterator = calendarComponent.getVObjectIterator();\n  const firstVObject = vObjectIterator.next().value;\n  if (!firstVObject) {\n    throw new Error('Calendar object without vobjects');\n  }\n  return getDefaultCalendarObjectObject({\n    calendarId,\n    calendarComponent,\n    uid: firstVObject.uid,\n    objectType: firstVObject.name,\n    isEvent: firstVObject.name === COMPONENT_NAME_EVENT,\n    isJournal: firstVObject.name === COMPONENT_NAME_JOURNAL,\n    isTodo: firstVObject.name === COMPONENT_NAME_VTODO\n  });\n};\nexport { getDefaultCalendarObjectObject, mapCDavObjectToCalendarObject, mapCalendarJsToCalendarObject };","/**\n * SPDX-FileCopyrightText: 2020 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\nimport { PRINCIPAL_PREFIX_CIRCLE, PRINCIPAL_PREFIX_GROUP, PRINCIPAL_PREFIX_USER } from './consts.js';\n\n/**\n * Creates a complete calendar-share-object based on given props\n *\n * @param {object} props Calendar-share-props already provided\n * @return {object}\n */\nconst getDefaultCalendarShareObject = function () {\n  let props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return Object.assign({}, {\n    // Unique identifier\n    id: null,\n    // Displayname of the sharee\n    displayName: null,\n    // Whether or not share is writable\n    writeable: false,\n    // Whether or not sharee is an individual user\n    isUser: false,\n    // Whether or not sharee is an admin-defined group\n    isGroup: false,\n    // Whether or not sharee is a user-defined group\n    isCircle: false,\n    // Uri necessary for deleting / updating share\n    uri: null\n  }, props);\n};\n\n/**\n * Map a dav collection to our calendar object model\n *\n * @param {object} sharee The sharee object from the cdav library shares\n * @return {object}\n */\nconst mapDavShareeToCalendarShareObject = sharee => {\n  // sharee.href might contain non-latin characters, so let's uri encode it first\n  const id = btoa(encodeURI(sharee.href));\n  let displayName;\n  if (sharee['common-name'] && sharee['common-name'].trim() !== '') {\n    displayName = sharee['common-name'];\n  } else if (sharee.href.startsWith(PRINCIPAL_PREFIX_GROUP)) {\n    displayName = decodeURIComponent(sharee.href.slice(28));\n  } else if (sharee.href.startsWith(PRINCIPAL_PREFIX_USER)) {\n    displayName = decodeURIComponent(sharee.href.slice(27));\n  } else {\n    displayName = sharee.href;\n  }\n  const writeable = sharee.access[0].endsWith('read-write');\n  const isUser = sharee.href.startsWith(PRINCIPAL_PREFIX_USER);\n  const isGroup = sharee.href.startsWith(PRINCIPAL_PREFIX_GROUP);\n  const isCircle = sharee.href.startsWith(PRINCIPAL_PREFIX_CIRCLE);\n  const uri = sharee.href;\n  return getDefaultCalendarShareObject({\n    id,\n    displayName,\n    writeable,\n    isUser,\n    isGroup,\n    isCircle,\n    uri\n  });\n};\nexport { getDefaultCalendarShareObject, mapDavShareeToCalendarShareObject };","/**\n * SPDX-FileCopyrightText: 2020 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\nconst COMPONENT_NAME_EVENT = 'VEVENT';\nconst COMPONENT_NAME_JOURNAL = 'VJOURNAL';\nconst COMPONENT_NAME_VTODO = 'VTODO';\nconst ITIP_MESSAGE_ADD = 'ADD';\nconst ITIP_MESSAGE_CANCEL = 'CANCEL';\nconst ITIP_MESSAGE_COUNTER = 'COUNTER';\nconst ITIP_MESSAGE_DECLINECOUNTER = 'DECLINECOUNTER';\nconst ITIP_MESSAGE_PUBLISH = 'PUBLISH';\nconst ITIP_MESSAGE_REFRESH = 'REFRESH';\nconst ITIP_MESSAGE_REPLY = 'REPLY';\nconst ITIP_MESSAGE_REQUEST = 'REQUEST';\nconst PRINCIPAL_PREFIX_USER = 'principal:principals/users/';\nconst PRINCIPAL_PREFIX_GROUP = 'principal:principals/groups/';\nconst PRINCIPAL_PREFIX_CIRCLE = 'principal:principals/circles/';\nconst PRINCIPAL_PREFIX_CALENDAR_RESOURCE = 'principal:principals/calendar-resources/';\nconst PRINCIPAL_PREFIX_CALENDAR_ROOM = 'principal:principals/calendar-rooms/';\nconst CALDAV_BIRTHDAY_CALENDAR = 'contact_birthdays';\nconst IMPORT_STAGE_DEFAULT = 'default';\nconst IMPORT_STAGE_IMPORTING = 'importing';\nconst IMPORT_STAGE_AWAITING_USER_SELECT = 'awaitingUserSelect';\nconst IMPORT_STAGE_PROCESSING = 'processing';\nexport { COMPONENT_NAME_EVENT, COMPONENT_NAME_JOURNAL, COMPONENT_NAME_VTODO, ITIP_MESSAGE_ADD, ITIP_MESSAGE_CANCEL, ITIP_MESSAGE_COUNTER, ITIP_MESSAGE_DECLINECOUNTER, ITIP_MESSAGE_PUBLISH, ITIP_MESSAGE_REFRESH, ITIP_MESSAGE_REPLY, ITIP_MESSAGE_REQUEST, PRINCIPAL_PREFIX_USER, PRINCIPAL_PREFIX_GROUP, PRINCIPAL_PREFIX_CIRCLE, PRINCIPAL_PREFIX_CALENDAR_RESOURCE, PRINCIPAL_PREFIX_CALENDAR_ROOM, CALDAV_BIRTHDAY_CALENDAR, IMPORT_STAGE_DEFAULT, IMPORT_STAGE_IMPORTING, IMPORT_STAGE_AWAITING_USER_SELECT, IMPORT_STAGE_PROCESSING };","/**\n * SPDX-FileCopyrightText: 2020 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\nimport { getDateFromDateTimeValue } from '../utils/date.js';\nimport { DurationValue, DateTimeValue } from '@nextcloud/calendar-js';\nimport { getHexForColorName, getClosestCSS3ColorNameForHex } from '../utils/color.js';\nimport { mapAlarmComponentToAlarmObject } from './alarm.js';\nimport { mapAttendeePropertyToAttendeeObject } from './attendee.js';\nimport { mapAttachmentPropertyToAttchmentObject } from './attachment.js';\nimport { getDefaultRecurrenceRuleObject, mapRecurrenceRuleValueToRecurrenceRuleObject } from './recurrenceRule.js';\n\n/**\n * Creates a complete calendar-object-instance-object based on given props\n *\n * @param {object} props The props already provided\n * @return {object}\n */\nconst getDefaultEventObject = function () {\n  let props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return Object.assign({}, {\n    // The real event-component coming from calendar-js\n    eventComponent: null,\n    // Title of the event\n    title: null,\n    // Start date of the event\n    startDate: null,\n    // Timezone of the start date\n    startTimezoneId: null,\n    // End date of the event\n    endDate: null,\n    // Timezone of the end date\n    endTimezoneId: null,\n    // Indicator whether or not event is all-day\n    isAllDay: false,\n    // Whether or not the user is allowed to toggle the all-day checkbox\n    canModifyAllDay: true,\n    // Location that the event takes places in\n    location: null,\n    // description of the event\n    description: null,\n    // Access class of the event (PUBLIC, PRIVATE, CONFIDENTIAL)\n    accessClass: null,\n    // Status of the event (CONFIRMED, TENTATIVE, CANCELLED)\n    status: null,\n    // Whether or not to block this event in Free-Busy reports (TRANSPARENT, OPAQUE)\n    timeTransparency: null,\n    // The recurrence rule of this event. We only support one recurrence-rule\n    recurrenceRule: getDefaultRecurrenceRuleObject(),\n    // Whether or not this event has multiple recurrence-rules\n    hasMultipleRRules: false,\n    // Whether or not this is the master item\n    isMasterItem: false,\n    // Whether or not this is a recurrence-exception\n    isRecurrenceException: false,\n    // Whether or not the applied modifications require to update this and all future\n    forceThisAndAllFuture: false,\n    // Whether or not it's possible to create a recurrence-exception for this event\n    canCreateRecurrenceException: false,\n    // Attendees of this event\n    attendees: [],\n    // Organizer of the event\n    organizer: null,\n    // Alarm of the event\n    alarms: [],\n    // Custom color of the event\n    customColor: null,\n    // Categories\n    categories: [],\n    // Attachments of this event\n    attachments: []\n  }, props);\n};\n\n/**\n *\n * @param {EventComponent} eventComponent The calendar-js eventComponent\n * @return {object}\n */\nconst mapEventComponentToEventObject = eventComponent => {\n  const eventObject = getDefaultEventObject({\n    eventComponent,\n    title: eventComponent.title,\n    isAllDay: eventComponent.isAllDay(),\n    canModifyAllDay: eventComponent.canModifyAllDay(),\n    location: eventComponent.location,\n    description: eventComponent.description,\n    accessClass: eventComponent.accessClass,\n    status: eventComponent.status,\n    timeTransparency: eventComponent.timeTransparency,\n    categories: Array.from(eventComponent.getCategoryIterator()),\n    isMasterItem: eventComponent.isMasterItem(),\n    isRecurrenceException: eventComponent.isRecurrenceException(),\n    canCreateRecurrenceException: eventComponent.canCreateRecurrenceExceptions()\n  });\n\n  /**\n   * According to RFC5545, DTEND is exclusive. This is rather intuitive for timed-events\n   * but rather unintuitive for all-day events\n   *\n   * That's why, when an event is all-day from 2019-10-03 to 2019-10-04,\n   * it will be displayed as 2019-10-03 to 2019-10-03 in the editor.\n   */\n  eventObject.startDate = getDateFromDateTimeValue(eventComponent.startDate);\n  eventObject.startTimezoneId = eventComponent.startDate.timezoneId;\n  if (eventComponent.isAllDay()) {\n    const endDate = eventComponent.endDate.clone();\n    endDate.addDuration(DurationValue.fromSeconds(-1 * 60 * 60 * 24));\n    eventObject.endDate = getDateFromDateTimeValue(endDate);\n  } else {\n    eventObject.endDate = getDateFromDateTimeValue(eventComponent.endDate);\n  }\n  eventObject.endTimezoneId = eventComponent.endDate.timezoneId;\n\n  /**\n   * Extract organizer if there is any\n   */\n  if (eventComponent.organizer) {\n    const organizerProperty = eventComponent.getFirstProperty('ORGANIZER');\n    eventObject.organizer = {\n      commonName: organizerProperty.commonName,\n      uri: organizerProperty.email,\n      attendeeProperty: organizerProperty\n    };\n  }\n\n  /**\n   * Extract alarms\n   */\n  for (const alarm of eventComponent.getAlarmIterator()) {\n    eventObject.alarms.push(mapAlarmComponentToAlarmObject(alarm));\n  }\n\n  /**\n   * Extract attendees\n   */\n  for (const attendee of eventComponent.getAttendeeIterator()) {\n    eventObject.attendees.push(mapAttendeePropertyToAttendeeObject(attendee));\n  }\n\n  /**\n   * Extract attachments\n   */\n\n  for (const attachment of eventComponent.getPropertyIterator('ATTACH')) {\n    eventObject.attachments.push(mapAttachmentPropertyToAttchmentObject(attachment));\n  }\n\n  /**\n   * Extract recurrence-rule\n   */\n  const recurrenceRuleIterator = eventComponent.getPropertyIterator('RRULE');\n  const recurrenceRuleFirstIteration = recurrenceRuleIterator.next();\n  const firstRecurrenceRule = recurrenceRuleFirstIteration.value;\n  if (firstRecurrenceRule) {\n    eventObject.recurrenceRule = mapRecurrenceRuleValueToRecurrenceRuleObject(firstRecurrenceRule.getFirstValue(), eventComponent.startDate);\n    eventObject.hasMultipleRRules = !recurrenceRuleIterator.next().done;\n  }\n\n  /**\n   * Convert the CSS 3 color name to a hex color\n   */\n  if (eventComponent.hasProperty('COLOR')) {\n    const hexColor = getHexForColorName(eventComponent.getFirstPropertyFirstValue('COLOR'));\n    if (hexColor !== null) {\n      eventObject.customColor = hexColor;\n    }\n  }\n  return eventObject;\n};\n\n/**\n * Copy data from a calendar-object-instance into a calendar-js event-component\n *\n * @param {object} eventObject The calendar-object-instance object\n * @param {EventComponent} eventComponent The calendar-js EventComponent object\n * @param {boolean} resetAttendeeStatus Whether or not to reset the attendee status\n */\nconst copyCalendarObjectInstanceIntoEventComponent = function (eventObject, eventComponent) {\n  let resetAttendeeStatus = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  eventComponent.title = eventObject.title;\n  eventComponent.location = eventObject.location;\n  eventComponent.description = eventObject.description;\n  eventComponent.accessClass = eventObject.accessClass;\n  eventComponent.status = eventObject.status;\n  eventComponent.timeTransparency = eventObject.timeTransparency;\n  for (const category of eventObject.categories) {\n    eventComponent.addCategory(category);\n  }\n  if (eventObject.organizer) {\n    eventComponent.setOrganizerFromNameAndEMail(eventObject.organizer.commonName, eventObject.organizer.uri);\n  }\n  for (const alarm of eventObject.alarms) {\n    if (alarm.isRelative) {\n      const duration = DurationValue.fromSeconds(alarm.relativeTrigger);\n      eventComponent.addRelativeAlarm(alarm.type, duration, alarm.relativeIsRelatedToStart);\n    } else {\n      const date = DateTimeValue.fromJSDate(alarm.absoluteDate);\n      eventComponent.addAbsoluteAlarm(alarm.type, date);\n    }\n  }\n  for (const attendee of eventObject.attendees) {\n    if (resetAttendeeStatus) {\n      attendee.attendeeProperty.participationStatus = 'NEEDS-ACTION';\n      attendee.attendeeProperty.rsvp = true;\n    }\n    eventComponent.addProperty(attendee.attendeeProperty);\n  }\n  for (const rule of eventObject.eventComponent.getPropertyIterator('RRULE')) {\n    eventComponent.addProperty(rule);\n  }\n  if (eventObject.customColor) {\n    eventComponent.color = getClosestCSS3ColorNameForHex(eventObject.customColor);\n  }\n};\nexport { getDefaultEventObject, mapEventComponentToEventObject, copyCalendarObjectInstanceIntoEventComponent };","/**\n * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\nimport { PRINCIPAL_PREFIX_CALENDAR_RESOURCE, PRINCIPAL_PREFIX_CALENDAR_ROOM, PRINCIPAL_PREFIX_CIRCLE, PRINCIPAL_PREFIX_GROUP, PRINCIPAL_PREFIX_USER } from './consts.js';\n\n/**\n * Creates a complete principal-object based on given props\n *\n * @param {object} props Principal-props already provided\n * @return {any}\n */\nconst getDefaultPrincipalObject = props => Object.assign({}, {\n  // Id of the principal\n  id: null,\n  // Calendar-user-type. This can be INDIVIDUAL, GROUP, RESOURCE or ROOM\n  calendarUserType: 'INDIVIDUAL',\n  // E-Mail address of principal used for scheduling\n  emailAddress: null,\n  // The principals display-name\n  // TODO: this should be renamed to displayName\n  displayname: null,\n  // principalScheme\n  principalScheme: null,\n  // The internal user-id in case it is of type INDIVIDUAL and a user\n  // TODO: userId is deprecrated, use principalId instead\n  userId: null,\n  // url to the DAV-principal-resource\n  url: null,\n  // The cdav-library object\n  dav: null,\n  // Whether or not this principal represents a circle\n  isCircle: false,\n  // Whether or not this principal represents a user\n  isUser: false,\n  // Whether or not this principal represents a group\n  isGroup: false,\n  // Whether or not this principal represents a calendar-resource\n  isCalendarResource: false,\n  // Whether or not this principal represents a calendar-room\n  isCalendarRoom: false,\n  // The id of the principal without prefix. e.g. userId / groupId / etc.\n  principalId: null,\n  // The url of the default calendar for invitations\n  scheduleDefaultCalendarUrl: null\n}, props);\n\n/**\n * converts a dav principal into a vuex object\n *\n * @param {object} dav cdav-library Principal object\n * @return {object}\n */\nconst mapDavToPrincipal = dav => {\n  const id = btoa(encodeURI(dav.url));\n  const calendarUserType = dav.calendarUserType;\n  const principalScheme = dav.principalScheme;\n  const emailAddress = dav.email;\n  const displayname = dav.displayname;\n  const scheduleDefaultCalendarUrl = dav.scheduleDefaultCalendarUrl;\n  const isUser = dav.principalScheme.startsWith(PRINCIPAL_PREFIX_USER);\n  const isGroup = dav.principalScheme.startsWith(PRINCIPAL_PREFIX_GROUP);\n  const isCircle = dav.principalScheme.startsWith(PRINCIPAL_PREFIX_CIRCLE);\n  const isCalendarResource = dav.principalScheme.startsWith(PRINCIPAL_PREFIX_CALENDAR_RESOURCE);\n  const isCalendarRoom = dav.principalScheme.startsWith(PRINCIPAL_PREFIX_CALENDAR_ROOM);\n  let principalId = null;\n  if (isUser) {\n    principalId = dav.principalScheme.substring(PRINCIPAL_PREFIX_USER.length);\n  } else if (isGroup) {\n    principalId = dav.principalScheme.substring(PRINCIPAL_PREFIX_GROUP.length);\n  } else if (isCircle) {\n    principalId = dav.principalScheme.substring(PRINCIPAL_PREFIX_CIRCLE.length);\n  } else if (isCalendarResource) {\n    principalId = dav.principalScheme.substring(PRINCIPAL_PREFIX_CALENDAR_RESOURCE.length);\n  } else if (isCalendarRoom) {\n    principalId = dav.principalScheme.substring(PRINCIPAL_PREFIX_CALENDAR_ROOM.length);\n  }\n  const url = dav.principalUrl;\n  const userId = dav.userId;\n  return getDefaultPrincipalObject({\n    id,\n    calendarUserType,\n    principalScheme,\n    emailAddress,\n    displayname,\n    url,\n    dav,\n    isUser,\n    isGroup,\n    isCircle,\n    isCalendarResource,\n    isCalendarRoom,\n    principalId,\n    userId,\n    scheduleDefaultCalendarUrl\n  });\n};\nexport { getDefaultPrincipalObject, mapDavToPrincipal };","/**\n * SPDX-FileCopyrightText: 2020 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\nimport { getWeekDayFromDate } from '../utils/recurrence.js';\nimport { getDateFromDateTimeValue } from '../utils/date.js';\n\n/**\n * Creates a complete recurrence-rule-object based on given props\n *\n * @param {object} props Recurrence-rule-object-props already provided\n * @return {object}\n */\nconst getDefaultRecurrenceRuleObject = function () {\n  let props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return Object.assign({}, {\n    // The calendar-js recurrence-rule value\n    recurrenceRuleValue: null,\n    // The frequency of the recurrence-rule (DAILY, WEEKLY, ...)\n    frequency: 'NONE',\n    // The interval of the recurrence-rule, must be a positive integer\n    interval: 1,\n    // Positive integer if recurrence-rule limited by count, null otherwise\n    count: null,\n    // Date if recurrence-rule limited by date, null otherwise\n    // We do not store a timezone here, since we only care about the date part\n    until: null,\n    // List of byDay components to limit/expand the recurrence-rule\n    byDay: [],\n    // List of byMonth components to limit/expand the recurrence-rule\n    byMonth: [],\n    // List of byMonthDay components to limit/expand the recurrence-rule\n    byMonthDay: [],\n    // A position to limit the recurrence-rule (e.g. -1 for last Friday)\n    bySetPosition: null,\n    // Whether or not the rule is not supported for editing\n    isUnsupported: false\n  }, props);\n};\n\n/**\n * Maps a calendar-js recurrence-rule-value to an recurrence-rule-object\n *\n * @param {RecurValue} recurrenceRuleValue The calendar-js recurrence rule value\n * @param {DateTimeValue} baseDate The base-date used to fill unset values\n * @return {object}\n */\nconst mapRecurrenceRuleValueToRecurrenceRuleObject = (recurrenceRuleValue, baseDate) => {\n  switch (recurrenceRuleValue.frequency) {\n    case 'DAILY':\n      return mapDailyRuleValueToRecurrenceRuleObject(recurrenceRuleValue);\n    case 'WEEKLY':\n      return mapWeeklyRuleValueToRecurrenceRuleObject(recurrenceRuleValue, baseDate);\n    case 'MONTHLY':\n      return mapMonthlyRuleValueToRecurrenceRuleObject(recurrenceRuleValue, baseDate);\n    case 'YEARLY':\n      return mapYearlyRuleValueToRecurrenceRuleObject(recurrenceRuleValue, baseDate);\n    default:\n      // SECONDLY, MINUTELY, HOURLY\n      return getDefaultRecurrenceRuleObjectForRecurrenceValue(recurrenceRuleValue, {\n        isUnsupported: true\n      });\n  }\n};\nconst FORBIDDEN_BY_PARTS_DAILY = ['BYSECOND', 'BYMINUTE', 'BYHOUR', 'BYDAY', 'BYMONTHDAY', 'BYYEARDAY', 'BYWEEKNO', 'BYMONTH', 'BYSETPOS'];\nconst FORBIDDEN_BY_PARTS_WEEKLY = ['BYSECOND', 'BYMINUTE', 'BYHOUR', 'BYMONTHDAY', 'BYYEARDAY', 'BYWEEKNO', 'BYMONTH', 'BYSETPOS'];\nconst FORBIDDEN_BY_PARTS_MONTHLY = ['BYSECOND', 'BYMINUTE', 'BYHOUR', 'BYYEARDAY', 'BYWEEKNO', 'BYMONTH'];\nconst FORBIDDEN_BY_PARTS_YEARLY = ['BYSECOND', 'BYMINUTE', 'BYHOUR', 'BYMONTHDAY', 'BYYEARDAY', 'BYWEEKNO'];\nconst SUPPORTED_BY_DAY_WEEKLY = ['SU', 'MO', 'TU', 'WE', 'TH', 'FR', 'SA'];\n\n/**\n * Get all numbers between start and end as strings\n *\n * @param {number} start Lower end of range\n * @param {number} end Upper end of range\n * @return {string[]}\n */\nconst getRangeAsStrings = (start, end) => {\n  return Array.apply(null, Array(end - start + 1)).map((_, n) => n + start).map(s => s.toString());\n};\nconst SUPPORTED_BY_MONTHDAY_MONTHLY = getRangeAsStrings(1, 31);\nconst SUPPORTED_BY_MONTH_YEARLY = getRangeAsStrings(1, 12);\n\n/**\n * Maps a daily calendar-js recurrence-rule-value to an recurrence-rule-object\n *\n * @param {RecurValue} recurrenceRuleValue The calendar-js recurrence rule value\n * @return {object}\n */\nconst mapDailyRuleValueToRecurrenceRuleObject = recurrenceRuleValue => {\n  /**\n   * We only support DAILY rules without any by-parts in the editor.\n   * If the recurrence-rule contains any by-parts, mark it as unsupported.\n   */\n  const isUnsupported = containsRecurrenceComponent(recurrenceRuleValue, FORBIDDEN_BY_PARTS_DAILY);\n  return getDefaultRecurrenceRuleObjectForRecurrenceValue(recurrenceRuleValue, {\n    isUnsupported\n  });\n};\n\n/**\n * Maps a weekly calendar-js recurrence-rule-value to an recurrence-rule-object\n *\n * @param {RecurValue} recurrenceRuleValue The calendar-js recurrence rule value\n * @param {DateTimeValue} baseDate The base-date used to fill unset values\n * @return {object}\n */\nconst mapWeeklyRuleValueToRecurrenceRuleObject = (recurrenceRuleValue, baseDate) => {\n  /**\n   * For WEEKLY recurrences, our editor only allows BYDAY\n   *\n   * As defined in RFC5545 3.3.10. Recurrence Rule:\n   * > Each BYDAY value can also be preceded by a positive (+n) or\n   * > negative (-n) integer.  If present, this indicates the nth\n   * > occurrence of a specific day within the MONTHLY or YEARLY \"RRULE\".\n   *\n   * RFC 5545 specifies other components, which can be used along WEEKLY.\n   * Among them are BYMONTH and BYSETPOS. We don't support those.\n   */\n  const containsUnsupportedByParts = containsRecurrenceComponent(recurrenceRuleValue, FORBIDDEN_BY_PARTS_WEEKLY);\n  const containsInvalidByDayPart = recurrenceRuleValue.getComponent('BYDAY').some(weekday => !SUPPORTED_BY_DAY_WEEKLY.includes(weekday));\n  const isUnsupported = containsUnsupportedByParts || containsInvalidByDayPart;\n  const byDay = recurrenceRuleValue.getComponent('BYDAY').filter(weekday => SUPPORTED_BY_DAY_WEEKLY.includes(weekday));\n\n  // If the BYDAY is empty, add the day that the event occurs in\n  // E.g. if the event is on a Wednesday, automatically set BYDAY:WE\n  if (byDay.length === 0) {\n    byDay.push(getWeekDayFromDate(baseDate.jsDate));\n  }\n  return getDefaultRecurrenceRuleObjectForRecurrenceValue(recurrenceRuleValue, {\n    byDay,\n    isUnsupported\n  });\n};\n\n/**\n * Maps a monthly calendar-js recurrence-rule-value to an recurrence-rule-object\n *\n * @param {RecurValue} recurrenceRuleValue The calendar-js recurrence rule value\n * @param {DateTimeValue} baseDate The base-date used to fill unset values\n * @return {object}\n */\nconst mapMonthlyRuleValueToRecurrenceRuleObject = (recurrenceRuleValue, baseDate) => {\n  /**\n   * We only supports BYMONTHDAY, BYDAY, BYSETPOS in order to expand the monthly rule.\n   * It supports either BYMONTHDAY or the combination of BYDAY and BYSETPOS. They have to be used exclusively\n   * and cannot be combined.\n   *\n   * We do not support other BY-parts like BYMONTH\n   *\n   * For monthly recurrence-rules, BYDAY components are allowed to be preceded by positive or negative integers.\n   * The Nextcloud-editor supports at most one BYDAY component with an integer.\n   * If it's presented with such a BYDAY component, it will internally be converted to BYDAY without integer and BYSETPOS.\n   * e.g.\n   * BYDAY=3WE => BYDAY=WE,BYSETPOS=3\n   *\n   * BYSETPOS is limited to -2, -1, 1, 2, 3, 4, 5\n   * Other values are not supported\n   *\n   * BYDAY is limited to \"MO\", \"TU\", \"WE\", \"TH\", \"FR\", \"SA\", \"SU\",\n   * \"MO,TU,WE,TH,FR,SA,SU\", \"MO,TU,WE,TH,FR\", \"SA,SU\"\n   *\n   * BYMONTHDAY is limited to \"1\", \"2\", ..., \"31\"\n   */\n  let isUnsupported = containsRecurrenceComponent(recurrenceRuleValue, FORBIDDEN_BY_PARTS_MONTHLY);\n  let byDay = [];\n  let bySetPosition = null;\n  let byMonthDay = [];\n\n  // This handles the first case, where we have a BYMONTHDAY rule\n  if (containsRecurrenceComponent(recurrenceRuleValue, ['BYMONTHDAY'])) {\n    // verify there is no BYDAY or BYSETPOS at the same time\n    if (containsRecurrenceComponent(recurrenceRuleValue, ['BYDAY', 'BYSETPOS'])) {\n      isUnsupported = true;\n    }\n    const containsInvalidByMonthDay = recurrenceRuleValue.getComponent('BYMONTHDAY').some(monthDay => !SUPPORTED_BY_MONTHDAY_MONTHLY.includes(monthDay.toString()));\n    isUnsupported = isUnsupported || containsInvalidByMonthDay;\n    byMonthDay = recurrenceRuleValue.getComponent('BYMONTHDAY').filter(monthDay => SUPPORTED_BY_MONTHDAY_MONTHLY.includes(monthDay.toString())).map(monthDay => monthDay.toString());\n\n    // This handles cases where we have both BYDAY and BYSETPOS\n  } else if (containsRecurrenceComponent(recurrenceRuleValue, ['BYDAY']) && containsRecurrenceComponent(recurrenceRuleValue, ['BYSETPOS'])) {\n    if (isAllowedByDay(recurrenceRuleValue.getComponent('BYDAY'))) {\n      byDay = recurrenceRuleValue.getComponent('BYDAY');\n    } else {\n      byDay = ['MO', 'TU', 'WE', 'TH', 'FR', 'SA', 'SU'];\n      isUnsupported = true;\n    }\n    const setPositionArray = recurrenceRuleValue.getComponent('BYSETPOS');\n    if (setPositionArray.length === 1 && isAllowedBySetPos(setPositionArray[0])) {\n      bySetPosition = setPositionArray[0];\n    } else {\n      bySetPosition = 1;\n      isUnsupported = true;\n    }\n\n    // This handles cases where we only have a BYDAY\n  } else if (containsRecurrenceComponent(recurrenceRuleValue, ['BYDAY'])) {\n    const byDayArray = recurrenceRuleValue.getComponent('BYDAY');\n    if (byDayArray.length > 1) {\n      byMonthDay.push(baseDate.day.toString());\n      isUnsupported = true;\n    } else {\n      const firstElement = byDayArray[0];\n      const match = /^(-?\\d)([A-Z]{2})$/.exec(firstElement);\n      if (match) {\n        const matchedBySetPosition = match[1];\n        const matchedByDay = match[2];\n        if (isAllowedBySetPos(matchedBySetPosition)) {\n          byDay = [matchedByDay];\n          bySetPosition = parseInt(matchedBySetPosition, 10);\n        } else {\n          byDay = [matchedByDay];\n          bySetPosition = 1;\n          isUnsupported = true;\n        }\n      } else {\n        byMonthDay.push(baseDate.day.toString());\n        isUnsupported = true;\n      }\n    }\n\n    // This is a fallback where we just default BYMONTHDAY to the start date of the event\n  } else {\n    byMonthDay.push(baseDate.day.toString());\n  }\n  return getDefaultRecurrenceRuleObjectForRecurrenceValue(recurrenceRuleValue, {\n    byDay,\n    bySetPosition,\n    byMonthDay,\n    isUnsupported\n  });\n};\n\n/**\n * Maps a yearly calendar-js recurrence-rule-value to an recurrence-rule-object\n *\n * @param {RecurValue} recurrenceRuleValue The calendar-js recurrence rule value\n * @param {DateTimeValue} baseDate The base-date used to fill unset values\n * @return {object}\n */\nconst mapYearlyRuleValueToRecurrenceRuleObject = (recurrenceRuleValue, baseDate) => {\n  /**\n   * We only supports BYMONTH, BYDAY, BYSETPOS in order to expand the yearly rule.\n   * It supports a combination of them.\n   *\n   * We do not support other BY-parts.\n   *\n   * For yearly recurrence-rules, BYDAY components are allowed to be preceded by positive or negative integers.\n   * The Nextcloud-editor supports at most one BYDAY component with an integer.\n   * If it's presented with such a BYDAY component, it will internally be converted to BYDAY without integer and BYSETPOS.\n   * e.g.\n   * BYDAY=3WE => BYDAY=WE,BYSETPOS=3\n   *\n   * BYSETPOS is limited to -2, -1, 1, 2, 3, 4, 5\n   * Other values are not supported\n   *\n   * BYDAY is limited to \"MO\", \"TU\", \"WE\", \"TH\", \"FR\", \"SA\", \"SU\",\n   * \"MO,TU,WE,TH,FR,SA,SU\", \"MO,TU,WE,TH,FR\", \"SA,SU\"\n   */\n  let isUnsupported = containsRecurrenceComponent(recurrenceRuleValue, FORBIDDEN_BY_PARTS_YEARLY);\n  let byDay = [];\n  let bySetPosition = null;\n  let byMonth = [];\n  if (containsRecurrenceComponent(recurrenceRuleValue, ['BYMONTH'])) {\n    const containsInvalidByMonthDay = recurrenceRuleValue.getComponent('BYMONTH').some(month => !SUPPORTED_BY_MONTH_YEARLY.includes(month.toString()));\n    isUnsupported = isUnsupported || containsInvalidByMonthDay;\n    byMonth = recurrenceRuleValue.getComponent('BYMONTH').filter(monthDay => SUPPORTED_BY_MONTH_YEARLY.includes(monthDay.toString())).map(month => month.toString());\n  } else {\n    byMonth.push(baseDate.month.toString());\n  }\n  if (containsRecurrenceComponent(recurrenceRuleValue, ['BYDAY']) && containsRecurrenceComponent(recurrenceRuleValue, ['BYSETPOS'])) {\n    if (isAllowedByDay(recurrenceRuleValue.getComponent('BYDAY'))) {\n      byDay = recurrenceRuleValue.getComponent('BYDAY');\n    } else {\n      byDay = ['MO', 'TU', 'WE', 'TH', 'FR', 'SA', 'SU'];\n      isUnsupported = true;\n    }\n    const setPositionArray = recurrenceRuleValue.getComponent('BYSETPOS');\n    if (setPositionArray.length === 1 && isAllowedBySetPos(setPositionArray[0])) {\n      bySetPosition = setPositionArray[0];\n    } else {\n      bySetPosition = 1;\n      isUnsupported = true;\n    }\n  } else if (containsRecurrenceComponent(recurrenceRuleValue, ['BYDAY'])) {\n    const byDayArray = recurrenceRuleValue.getComponent('BYDAY');\n    if (byDayArray.length > 1) {\n      isUnsupported = true;\n    } else {\n      const firstElement = byDayArray[0];\n      const match = /^(-?\\d)([A-Z]{2})$/.exec(firstElement);\n      if (match) {\n        const matchedBySetPosition = match[1];\n        const matchedByDay = match[2];\n        if (isAllowedBySetPos(matchedBySetPosition)) {\n          byDay = [matchedByDay];\n          bySetPosition = parseInt(matchedBySetPosition, 10);\n        } else {\n          byDay = [matchedByDay];\n          bySetPosition = 1;\n          isUnsupported = true;\n        }\n      } else {\n        isUnsupported = true;\n      }\n    }\n  }\n  return getDefaultRecurrenceRuleObjectForRecurrenceValue(recurrenceRuleValue, {\n    byDay,\n    bySetPosition,\n    byMonth,\n    isUnsupported\n  });\n};\n\n/**\n * Checks if the given parameter is a supported BYDAY value\n *\n * @param {string[]} byDay The byDay component to check\n * @return {boolean}\n */\nconst isAllowedByDay = byDay => {\n  return ['MO', 'TU', 'WE', 'TH', 'FR', 'SA', 'SU', 'FR,MO,SA,SU,TH,TU,WE', 'FR,MO,TH,TU,WE', 'SA,SU'].includes(byDay.slice().sort().join(','));\n};\n\n/**\n * Checks if the given parameter is a supported BYSETPOS value\n *\n * @param {string} bySetPos The bySetPos component to check\n * @return {boolean}\n */\nconst isAllowedBySetPos = bySetPos => {\n  return ['-2', '-1', '1', '2', '3', '4', '5'].includes(bySetPos.toString());\n};\n\n/**\n * Checks if the recurrence-rule contains any of the given components\n *\n * @param {RecurValue} recurrenceRule The recurrence-rule value to check for the given components\n * @param {string[]} components List of components to check for\n * @return {boolean}\n */\nconst containsRecurrenceComponent = (recurrenceRule, components) => {\n  for (const component of components) {\n    const componentValue = recurrenceRule.getComponent(component);\n    if (componentValue.length > 0) {\n      return true;\n    }\n  }\n  return false;\n};\n\n/**\n * Returns a full recurrence-rule-object with default values derived from recurrenceRuleValue\n * and additional props\n *\n * @param {RecurValue} recurrenceRuleValue The recurrence-rule value to get default values from\n * @param {object} props The properties to provide on top of default one\n * @return {object}\n */\nconst getDefaultRecurrenceRuleObjectForRecurrenceValue = (recurrenceRuleValue, props) => {\n  const isUnsupported = recurrenceRuleValue.count !== null && recurrenceRuleValue.until !== null;\n  let isUnsupportedProps = {};\n  if (isUnsupported) {\n    isUnsupportedProps = {\n      isUnsupported\n    };\n  }\n  return getDefaultRecurrenceRuleObject(Object.assign({}, {\n    recurrenceRuleValue,\n    frequency: recurrenceRuleValue.frequency,\n    interval: parseInt(recurrenceRuleValue.interval, 10) || 1,\n    count: recurrenceRuleValue.count,\n    until: recurrenceRuleValue.until ? getDateFromDateTimeValue(recurrenceRuleValue.until) : null\n  }, props, isUnsupportedProps));\n};\nexport { getDefaultRecurrenceRuleObject, mapRecurrenceRuleValueToRecurrenceRuleObject };","/**\n * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\nimport { translate as t } from '@nextcloud/l10n';\nimport { getDefaultCategories } from '../defaults/defaultCategories.js';\n\n/**\n * Gets all supported RFC properties\n *\n * @return {{color: {readableName: *, icon: string, multiple: boolean, info: *}, timeTransparency: {readableName: *, defaultValue: string, icon: string, multiple: boolean, options: *[], info: *}, description: {readableName: *, icon: string, placeholder: *, defaultNumberOfRows: number}, location: {readableName: *, icon: string, placeholder: *}, categories: {readableName: *, icon: string, multiple: boolean, options: *, tagPlaceholder: *, placeholder: *, info: *}, accessClass: {readableName: *, defaultValue: string, icon: string, options: *[], multiple: boolean, info: *}, status: {readableName: *, defaultValue: string, icon: string, options: *[], multiple: boolean, info: *}}}\n */\nconst getRFCProperties = () => {\n  return {\n    /**\n     * https://tools.ietf.org/html/rfc5545#section-3.8.1.3\n     */\n    accessClass: {\n      readableName: t('calendar', 'When shared show'),\n      icon: 'Eye',\n      options: [{\n        value: 'PUBLIC',\n        label: t('calendar', 'When shared show full event')\n      }, {\n        value: 'CONFIDENTIAL',\n        label: t('calendar', 'When shared show only busy')\n      }, {\n        value: 'PRIVATE',\n        label: t('calendar', 'When shared hide this event')\n      }],\n      multiple: false,\n      info: t('calendar', 'The visibility of this event in shared calendars.'),\n      defaultValue: 'PUBLIC'\n    },\n    /**\n     * https://tools.ietf.org/html/rfc5545#section-3.8.1.7\n     */\n    location: {\n      readableName: t('calendar', 'Location'),\n      placeholder: t('calendar', 'Add a location'),\n      icon: 'MapMarker'\n    },\n    /**\n     * https://tools.ietf.org/html/rfc5545#section-3.8.1.5\n     */\n    description: {\n      readableName: t('calendar', 'Description'),\n      placeholder: t('calendar', 'Add a description\\n' + '\\n' + '- What is this meeting about\\n' + '- Agenda items\\n' + '- Anything participants need to prepare'),\n      icon: 'TextBoxOutline',\n      defaultNumberOfRows: 2\n    },\n    /**\n     * https://tools.ietf.org/html/rfc5545#section-3.8.1.11\n     */\n    status: {\n      readableName: t('calendar', 'Status'),\n      icon: 'Check',\n      options: [{\n        value: 'CONFIRMED',\n        label: t('calendar', 'Confirmed')\n      }, {\n        value: 'TENTATIVE',\n        label: t('calendar', 'Tentative')\n      }, {\n        value: 'CANCELLED',\n        label: t('calendar', 'Canceled')\n      }],\n      multiple: false,\n      info: t('calendar', 'Confirmation about the overall status of the event.'),\n      defaultValue: 'CONFIRMED'\n    },\n    /**\n     * https://tools.ietf.org/html/rfc5545#section-3.8.2.7\n     */\n    timeTransparency: {\n      readableName: t('calendar', 'Show as'),\n      icon: 'Briefcase',\n      multiple: false,\n      info: t('calendar', 'Take this event into account when calculating free-busy information.'),\n      options: [{\n        value: 'TRANSPARENT',\n        label: t('calendar', 'Free')\n      }, {\n        value: 'OPAQUE',\n        label: t('calendar', 'Busy')\n      }],\n      defaultValue: 'TRANSPARENT'\n    },\n    /**\n     * https://tools.ietf.org/html/rfc5545#section-3.8.1.2\n     */\n    categories: {\n      readableName: t('calendar', 'Categories'),\n      icon: 'Tag',\n      multiple: true,\n      info: t('calendar', 'Categories help you to structure and organize your events.'),\n      placeholder: t('calendar', 'Search or add categories'),\n      tagPlaceholder: t('calendar', 'Add this as a new category'),\n      options: getDefaultCategories()\n    },\n    /**\n     * https://tools.ietf.org/html/rfc7986#section-5.9\n     */\n    color: {\n      readableName: t('calendar', 'Custom color'),\n      icon: 'EyedropperVariant',\n      multiple: false,\n      info: t('calendar', 'Special color of this event. Overrides the calendar-color.')\n    }\n  };\n};\nexport { getRFCProperties };","/**\n * SPDX-FileCopyrightText: 2022 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\nimport axios from '@nextcloud/axios';\nimport { generateOcsUrl, generateRemoteUrl } from '@nextcloud/router';\nimport { showError, showSuccess } from '@nextcloud/dialogs';\nimport { translate as t } from '@nextcloud/l10n';\nimport { parseXML } from 'webdav';\nimport { parseUploadError } from '../utils/propfindErrorParse.js';\n\n/**\n * Makes a share link for a given file or directory.\n *\n * @param {string} path The file path from the user's root directory. e.g. `/myfile.txt`\n * @return {string} url share link\n */\nconst shareFile = async function (path) {\n  try {\n    const res = await axios.post(generateOcsUrl('apps/files_sharing/api/v1/', 2) + 'shares', {\n      shareType: OC.Share.SHARE_TYPE_LINK,\n      path\n    });\n    return res.data.ocs.data;\n  } catch (error) {\n    if (error?.response?.data?.ocs?.meta?.message) {\n      console.error(`Error while sharing file: ${error.response.data.ocs.meta.message}`);\n      showError(error.response.data.ocs.meta.message);\n      throw error;\n    } else {\n      console.error('Error while sharing file: Unknown error');\n      showError(t('calendar', 'Error while sharing file'));\n      throw error;\n    }\n  }\n};\n\n/**\n * Share file with a user with permissions\n *\n * @param path\n * @param sharedWith\n * @param permissions\n * @return {Promise<[{path: string, permissions, scope: string, name: string, backend: string, type: string},{path: string, permissions: *, scope: string, name: string, backend: string, type: string}]>}\n */\nconst shareFileWith = async function (path, sharedWith) {\n  let permissions = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 17;\n  try {\n    const url = generateOcsUrl('apps/files_sharing/api/v1/', 2);\n    const res = await axios.post(`${url}shares`, {\n      password: null,\n      shareType: OC.Share.SHARE_TYPE_USER,\n      // WITH USERS,\n      permissions,\n      // 14 - edit, 17 - view\n      path,\n      shareWith: sharedWith\n    });\n    return res.data.ocs.data;\n  } catch (error) {\n    if (error?.response?.data?.ocs?.meta?.message) {\n      console.error(`Error while sharing file with user: ${error.response.data.ocs.meta.message}`);\n      showError(error.response.data.ocs.meta.message);\n      throw error;\n    } else {\n      console.error('Error while sharing file with user: Unknown error');\n      showError(t('calendar', 'Error while sharing file with user'));\n      throw error;\n    }\n  }\n};\nconst createFolder = async function (folderName, userId) {\n  const url = generateRemoteUrl(`dav/files/${userId}/${folderName}`);\n  try {\n    await axios({\n      method: 'MKCOL',\n      url\n    });\n  } catch (e) {\n    if (e?.response?.status !== 405) {\n      showError(t('calendar', 'Error creating a folder {folder}', {\n        folder: folderName\n      }));\n      // Maybe the actual upload succeeds -> keep going\n      return folderName;\n    }\n\n    // Folder already exists\n    if (folderName !== '/') {\n      folderName = await findFirstOwnedFolder(folderName, userId);\n    }\n  }\n  return folderName;\n};\nconst findFirstOwnedFolder = async function (path, userId) {\n  const infoXml = await getFileInfo(path, userId);\n  const info = await parseXML(infoXml);\n  const mountType = info?.multistatus?.response[0]?.propstat?.prop?.['mount-type'];\n  if (mountType !== 'shared') {\n    return path;\n  }\n  const hierarchy = path.split('/');\n  hierarchy.pop();\n  if (hierarchy.length === 1) {\n    return '/';\n  }\n  return findFirstOwnedFolder(hierarchy.join('/'), userId);\n};\nconst uploadLocalAttachment = async function (folder, files, dav, componentAttachments) {\n  const attachments = [];\n  const promises = [];\n  files.forEach(file => {\n    // temp fix, until we decide where to save the attachments\n    if (componentAttachments.map(attachment => attachment.fileName.split('/').pop()).indexOf(file.name) !== -1) {\n      // TODO may be show user confirmation dialog to create a file named Existing_File_(2) ?\n      showError(t('calendar', 'Attachment {fileName} already exists!', {\n        fileName: file.name\n      }));\n    } else {\n      const url = generateRemoteUrl(`dav/files/${dav.userId}/${folder}/${file.name}`);\n      const res = axios.put(url, file).then(resp => {\n        const data = {\n          fileName: file.name,\n          formatType: file.type,\n          uri: url,\n          value: url,\n          path: `/${file.name}`\n        };\n        if (resp.status === 204 || resp.status === 201) {\n          showSuccess(t('calendar', 'Attachment {fileName} added!', {\n            fileName: file.name\n          }));\n          attachments.push(data);\n        }\n      }).catch(async exception => {\n        if (exception.response) {\n          const message = await parseUploadError(exception);\n          if (message) {\n            showError(message);\n          } else {\n            showError(t('calendar', 'An error occurred during uploading file {fileName}', {\n              fileName: file.name\n            }));\n          }\n        }\n      });\n      promises.push(res);\n    }\n  });\n  await Promise.all(promises);\n  return attachments;\n};\n\n// TODO is shared or not @share-types@\nconst getFileInfo = async function (path, userId) {\n  const url = generateRemoteUrl(`dav/files/${userId}/${path}`);\n  const res = await axios({\n    method: 'PROPFIND',\n    url,\n    data: `<?xml version=\"1.0\"?>\n\t\t\t<d:propfind\n\t\t\txmlns:d=\"DAV:\"\n\t\t\txmlns:oc=\"http://owncloud.org/ns\"\n\t\t\txmlns:nc=\"http://nextcloud.org/ns\">\n\t\t\t\t<d:prop>\n\t\t\t\t\t<d:getcontenttype />\n\t\t\t\t\t<oc:size />\n\t\t\t\t\t<oc:fileid />\n\t\t\t\t\t<oc:share-types />\n\t\t\t\t\t<nc:has-preview />\n\t\t\t\t\t<nc:mount-type />\n\t\t\t\t</d:prop>\n\t\t\t</d:propfind>`\n  }).catch(() => {\n    showError(t('calendar', 'An error occurred during getting file information'));\n  });\n  return res.data;\n};\nexport { getFileInfo, shareFile, shareFileWith, uploadLocalAttachment, createFolder };","/**\n * SPDX-FileCopyrightText: 2020 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\nimport DavClient from '@nextcloud/cdav-library';\nimport { generateRemoteUrl } from '@nextcloud/router';\nimport { getRequestToken } from '@nextcloud/auth';\nimport { CALDAV_BIRTHDAY_CALENDAR } from '../models/consts.js';\nconst clients = {};\nconst getClientKey = headers => JSON.stringify(headers);\nconst getClient = function () {\n  let headers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const clientKey = getClientKey(headers);\n  if (clients[clientKey]) {\n    return clients[clientKey];\n  }\n  clients[clientKey] = new DavClient({\n    rootUrl: generateRemoteUrl('dav')\n  }, () => {\n    const mergedHeaders = {\n      'X-Requested-With': 'XMLHttpRequest',\n      requesttoken: getRequestToken(),\n      'X-NC-CalDAV-Webcal-Caching': 'On',\n      ...headers\n    };\n    const xhr = new XMLHttpRequest();\n    const oldOpen = xhr.open;\n\n    // override open() method to add headers\n    xhr.open = function () {\n      const result = oldOpen.apply(this, arguments);\n      for (const name in mergedHeaders) {\n        xhr.setRequestHeader(name, mergedHeaders[name]);\n      }\n      return result;\n    };\n    OC.registerXHRForErrorProcessing(xhr); // eslint-disable-line no-undef\n    return xhr;\n  });\n  return clients[clientKey];\n};\n\n/**\n * Initializes the client for use in the user-view\n */\nconst initializeClientForUserView = async () => {\n  await getClient().connect({\n    enableCalDAV: true\n  });\n};\n\n/**\n * Initializes the client for use in the public/embed-view\n */\nconst initializeClientForPublicView = async () => {\n  await getClient()._createPublicCalendarHome();\n};\n\n/**\n * Fetch all calendars from the server\n *\n * @param {object} headers\n * @return {Promise<CalendarHome>}\n */\nconst getCalendarHome = headers => getClient(headers).calendarHomes[0];\n\n/**\n * Fetch all collections in the calendar home from the server\n *\n * @return {Promise<Collection[]>}\n */\nconst findAll = () => {\n  return getCalendarHome().findAllCalDAVCollectionsGrouped();\n};\n\n/**\n * Fetch all calendars in the calendar home from the server\n *\n * @return {Promise<Calendar[]>}\n */\nconst findAllCalendars = () => {\n  return getCalendarHome().findAllCalendars();\n};\n\n/**\n * Fetch all subscriptions in the calendar home from the server\n */\nexport const findAllSubscriptions = async () => {\n  const headers = {\n    'X-NC-CalDAV-Webcal-Caching': 'Off'\n  };\n\n  // Ensure the client is initialized once\n  await getClient(headers).connect({\n    enableCalDAV: true\n  });\n  return getCalendarHome(headers).findAllSubscriptions();\n};\n\n/**\n * Fetch all deleted calendars from the server\n *\n * @return {Promise<Calendar[]>}\n */\nconst findAllDeletedCalendars = () => {\n  return getCalendarHome().findAllDeletedCalendars();\n};\n\n/**\n * Fetch public calendars by their token\n *\n * @param {string[]} tokens List of tokens\n * @return {Promise<Calendar[]>}\n */\nconst findPublicCalendarsByTokens = async tokens => {\n  const findPromises = [];\n  for (const token of tokens) {\n    const promise = getClient().publicCalendarHome.find(token).catch(() => null); // Catch outdated tokens\n\n    findPromises.push(promise);\n  }\n  const calendars = await Promise.all(findPromises);\n  return calendars.filter(calendar => calendar !== null);\n};\n\n/**\n * Fetches all scheduling inboxes\n *\n * Nitpick detail: Technically, we shouldn't be querying all scheduling inboxes\n * in the calendar-home and just take the first one, but rather query the\n * \"CALDAV:schedule-inbox-URL\" property on the principal URL and take that one.\n * However, it doesn't make any difference for the Nextcloud CalDAV server\n * and saves us extraneous requests here.\n *\n * https://tools.ietf.org/html/rfc6638#section-2.2.1\n *\n * @return {Promise<ScheduleInbox[]>}\n */\nconst findSchedulingInbox = async () => {\n  const inboxes = await getCalendarHome().findAllScheduleInboxes();\n  return inboxes[0];\n};\n\n/**\n * Fetches all scheduling outboxes\n *\n * Nitpick detail: Technically, we shouldn't be querying all scheduling outboxes\n * in the calendar-home and just take the first one, but rather query the\n * \"CALDAV:schedule-outbox-URL\" property on the principal URL and take that one.\n * However, it doesn't make any difference for the Nextcloud CalDAV server\n * and saves us extraneous requests here.\n *\n * https://tools.ietf.org/html/rfc6638#section-2.1.1\n *\n * @return {Promise<ScheduleOutbox>}\n */\nconst findSchedulingOutbox = async () => {\n  const outboxes = await getCalendarHome().findAllScheduleOutboxes();\n  return outboxes[0];\n};\n\n/**\n * Creates a calendar\n *\n * @param {string} displayName Visible name\n * @param {string} color Color\n * @param {string[]} components Supported component set\n * @param {number} order Order of calendar in list\n * @param {string} timezoneIcs ICS representation of timezone\n * @return {Promise<Calendar>}\n */\nconst createCalendar = async (displayName, color, components, order, timezoneIcs) => {\n  return getCalendarHome().createCalendarCollection(displayName, color, components, order, timezoneIcs);\n};\n\n/**\n * Creates a subscription\n *\n * This function does not return a subscription, but a cached calendar\n *\n * @param {string} displayName Visible name\n * @param {string} color Color\n * @param {string} source Link to WebCAL Source\n * @param {number} order Order of calendar in list\n * @return {Promise<Calendar>}\n */\nconst createSubscription = async (displayName, color, source, order) => {\n  return getCalendarHome().createSubscribedCollection(displayName, color, source, order);\n};\n\n/**\n * Enables the birthday calendar\n *\n * @return {Promise<Calendar>}\n */\nconst enableBirthdayCalendar = async () => {\n  await getCalendarHome().enableBirthdayCalendar();\n  return getBirthdayCalendar();\n};\n\n/**\n * Gets the birthday calendar\n *\n * @return {Promise<Calendar>}\n */\nconst getBirthdayCalendar = async () => {\n  return getCalendarHome().find(CALDAV_BIRTHDAY_CALENDAR);\n};\n\n/**\n * Returns the Current User Principal\n *\n * @return {Principal}\n */\nconst getCurrentUserPrincipal = () => {\n  return getClient().currentUserPrincipal;\n};\n\n/**\n * Finds calendar principals by displayname\n *\n * @param {string} term The search-term\n * @return {Promise<void>}\n */\nconst principalPropertySearchByDisplaynameOrEmail = async term => {\n  return getClient().principalPropertySearchByDisplaynameOrEmail(term);\n};\n\n/**\n * Performs a principal property search based on multiple advanced filters\n *\n * @param {object} query The destructuring query object\n * @param {string=} query.displayName The display name to search for\n * @param {number=} query.capacity The minimum required seating capacity\n * @param {string[]=} query.features The features to filter by\n * @param {string=} query.roomType The room type to filter by\n * @return {Promise<Principal[]>}\n */\nconst advancedPrincipalPropertySearch = async query => {\n  return getClient().advancedPrincipalPropertySearch(query);\n};\n\n/**\n * Finds one principal by it's URL\n *\n * @param {string} url The principal-url\n * @return {Promise<Principal>}\n */\nconst findPrincipalByUrl = async url => {\n  return getClient().findPrincipal(url);\n};\n\n/**\n * Finds all principals in a collection at the given URL\n *\n * @param {string} url The URL of the principal collection\n * @param {object} options Passed to cdav-library/Principal::getPropFindList()\n * @return {Promise<Principal[]>}\n */\nconst findPrincipalsInCollection = async function (url) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return getClient().findPrincipalsInCollection(url, options);\n};\nexport { initializeClientForUserView, initializeClientForPublicView, findAll, findAllCalendars, findAllDeletedCalendars, findPublicCalendarsByTokens, findSchedulingInbox, findSchedulingOutbox, createCalendar, createSubscription, enableBirthdayCalendar, getBirthdayCalendar, getCurrentUserPrincipal, principalPropertySearchByDisplaynameOrEmail, advancedPrincipalPropertySearch, findPrincipalByUrl, findPrincipalsInCollection };","/**\n * SPDX-FileCopyrightText: 2023 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\nimport HttpClient from '@nextcloud/axios';\nimport { generateOcsUrl, linkTo } from '@nextcloud/router';\n\n/**\n * Finds circles by displayname\n *\n * @param {string} query The search-term\n * @return {Promise<void>}\n */\nconst circleSearchByName = async query => {\n  let results;\n  try {\n    results = await HttpClient.get(generateOcsUrl('apps/files_sharing/api/v1/') + 'sharees', {\n      params: {\n        format: 'json',\n        search: query,\n        perPage: 200,\n        itemType: 'pringroucipals'\n      }\n    });\n  } catch (error) {\n    return [];\n  }\n  if (results.data.ocs.meta.status === 'failure') {\n    return [];\n  }\n  let circles = [];\n  if (Array.isArray(results.data.ocs.data.circles)) {\n    circles = circles.concat(results.data.ocs.data.circles);\n  }\n  if (Array.isArray(results.data.ocs.data.exact.circles)) {\n    circles = circles.concat(results.data.ocs.data.exact.circles);\n  }\n  if (circles.length === 0) {\n    return [];\n  }\n  return circles.filter(circle => {\n    return true;\n  }).map(circle => ({\n    displayname: circle.label,\n    population: circle.value.circle.population,\n    id: circle.value.circle.id,\n    instance: circle.value.circle.owner.instance\n  }));\n};\n\n/**\n * Get members of circle by id\n *\n * @param {string} circleId The circle id to query\n * @return {Promise<void>}\n */\nconst circleGetMembers = async circleId => {\n  let results;\n  try {\n    results = await HttpClient.get(linkTo('calendar', 'index.php') + '/v1/circles/getmembers', {\n      params: {\n        format: 'json',\n        circleId\n      }\n    });\n  } catch (error) {\n    console.debug(error);\n    return [];\n  }\n  return results;\n};\nexport { circleSearchByName, circleGetMembers };","/**\n * SPDX-FileCopyrightText: 2024 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\nimport { AttendeeProperty, createFreeBusyRequest, DateTimeValue } from '@nextcloud/calendar-js';\nimport { findSchedulingOutbox } from './caldavService.js';\nimport freeBusyResourceEventSourceFunction from '../fullcalendar/eventSources/freeBusyResourceEventSourceFunction.js';\nimport getTimezoneManager from './timezoneDataProviderService.js';\nimport logger from '../utils/logger.js';\nconst daysToSearch = 7;\n\n/**\n * Get the first available slot for an event using freebusy API\n *\n * @param {Principal} organizer The organizer of the event\n * @param {AttendeeProperty[]} attendees Array of the event's attendees\n * @param {Date} start The start date and time of the event\n * @param {Date} end The end date and time of the event\n * @param timeZoneId\n * @return {Promise<>}\n */\nexport async function getBusySlots(organizer, attendees, start, end, timeZoneId) {\n  // We start searching a day earlier because if we don't availability events get cut off in weird ways\n  const clonedStart = new Date(start.getTime());\n  clonedStart.setDate(clonedStart.getDate() - 1);\n  let timezoneObject = getTimezoneManager().getTimezoneForId(timeZoneId);\n  if (!timezoneObject) {\n    timezoneObject = getTimezoneManager().getTimezoneForId('UTC');\n    logger.error(`FreeBusyEventSource: Timezone ${timeZoneId} not found, falling back to UTC.`);\n  }\n  const startDateTime = DateTimeValue.fromJSDate(clonedStart, true);\n  const endDateTime = DateTimeValue.fromJSDate(end, true);\n  const organizerAsAttendee = new AttendeeProperty('ATTENDEE', organizer.email);\n  const freeBusyComponent = createFreeBusyRequest(startDateTime, endDateTime, organizer, [organizerAsAttendee, ...attendees]);\n  const freeBusyICS = freeBusyComponent.toICS();\n  let outbox;\n  try {\n    outbox = await findSchedulingOutbox();\n  } catch (error) {\n    return {\n      error\n    };\n  }\n  let freeBusyData;\n  try {\n    freeBusyData = await outbox.freeBusyRequest(freeBusyICS);\n  } catch (error) {\n    return {\n      error\n    };\n  }\n  const events = [];\n  for (const [uri, data] of Object.entries(freeBusyData)) {\n    events.push(...freeBusyResourceEventSourceFunction(uri, data.calendarData, data.success, startDateTime, endDateTime, timezoneObject));\n  }\n  return {\n    events\n  };\n}\n\n/**\n * Get the first available slot for an event using the freebusy API\n *\n\n * @param {Date} start The start date and time of the event\n * @param {Date} end The end date and time of the event\n * @param retrievedEvents Events found by the freebusy API\n * @return []\n */\nexport function getFirstFreeSlot(start, end, retrievedEvents) {\n  // Here we are trying to understand the duration of the event, this is needed to check that the start and end points of a theoretical slot are free\n  let duration = getDurationInSeconds(start, end);\n  if (duration === 0) {\n    duration = 86400; // One day\n  }\n\n  // We check all events in a weekly span from the start of the event\n  const endSearchDate = new Date(start);\n  endSearchDate.setDate(start.getDate() + daysToSearch);\n  if (retrievedEvents.error) {\n    return [{\n      error: retrievedEvents.error\n    }];\n  }\n\n  // Events have to be sorted to be checked cronologically\n  let events = sortEvents(retrievedEvents);\n  events = events.filter(function (event) {\n    return new Date(start) < new Date(event.end);\n  });\n  const totalSlots = [];\n\n  // Check times after every event\n  for (let i = 0; i < events.length; i++) {\n    const foundSlots = checkTime(new Date(events[i].end), duration, events);\n    if (foundSlots) totalSlots.push(foundSlots);\n  }\n\n  // Check current time\n  const foundSlots = checkTime(new Date(start), duration, events, false, false);\n  if (foundSlots) {\n    totalSlots.unshift(foundSlots);\n  }\n  return totalSlots;\n}\n\n/**\n *\n * @param start\n * @param end\n * @return {number}\n */\nfunction getDurationInSeconds(start, end) {\n  // Convert dates to UTC to account for daylight saving time\n  const startUTC = new Date(start).toUTCString();\n  const endUTC = new Date(end).toUTCString();\n  const durationMs = new Date(endUTC) - new Date(startUTC);\n  // Convert milliseconds to seconds\n  return Math.floor(durationMs / 1000);\n}\n\n/**\n *\n * @param currentCheckedTime\n * @param duration\n * @param events\n * @param toRound\n * @parma toRound\n */\nfunction checkTime(currentCheckedTime, duration, events) {\n  let toRound = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n  let timeValid = true;\n\n  // We sometimes don't want to round, like when using the current time\n  if (toRound) {\n    currentCheckedTime = roundToNearestQuarter(currentCheckedTime);\n  }\n  const currentCheckedTimeEnd = new Date(currentCheckedTime);\n  currentCheckedTimeEnd.setSeconds(currentCheckedTime.getSeconds() + duration);\n  events.every(event => {\n    const eventStart = new Date(event.start);\n    const eventEnd = new Date(event.end);\n\n    // Start of event is within the range that we are checking\n    if (eventStart >= currentCheckedTime && eventStart <= currentCheckedTimeEnd) {\n      timeValid = false;\n      return false;\n    }\n\n    // End of event is within range that we are checking\n    if (eventEnd >= currentCheckedTime && eventEnd <= currentCheckedTimeEnd) {\n      timeValid = false;\n      return false;\n    }\n\n    // Range that we are checking is within ends of event\n    if (eventStart <= currentCheckedTime && eventEnd >= currentCheckedTimeEnd) {\n      timeValid = false;\n      return false;\n    }\n    return true;\n  });\n  if (timeValid) {\n    return {\n      start: currentCheckedTime,\n      end: currentCheckedTimeEnd\n    };\n  } else {\n    return false;\n  }\n}\n\n/**\n *\n * @param events\n */\nfunction sortEvents(events) {\n  // Remove events that have the same start and end time, if not done causes problems\n  const mappedEvents = new Map();\n  for (const obj of events) {\n    const key = obj.start.toString() + obj.end.toString();\n    if (!mappedEvents.has(key)) {\n      mappedEvents.set(key, obj);\n    }\n  }\n  return Array.from(mappedEvents.values()).sort((a, b) => new Date(a.start) - new Date(b.start));\n}\n\n/**\n *\n * @param date\n */\nfunction roundToNearestQuarter(date) {\n  // Needed because it doesn't work with 0\n  if (date.getMinutes() % 15 === 0) date.setMinutes(date.getMinutes() + 1);\n  const roundedMinutes = Math.ceil(date.getMinutes() / 15) * 15;\n  date.setMinutes(roundedMinutes);\n\n  // Reset seconds and milliseconds\n  date.setSeconds(0);\n  date.setMilliseconds(0);\n  return date;\n}","/**\n * SPDX-FileCopyrightText: 2021 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\nimport { loadState } from '@nextcloud/initial-state';\nconst isCirclesEnabled = loadState('calendar', 'isCirclesEnabled', false);\nexport default isCirclesEnabled;","/**\n * SPDX-FileCopyrightText: 2020 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\nimport HttpClient from '@nextcloud/axios';\nimport { getLinkToConfig } from '../utils/settings.js';\n\n/**\n *\n * @param {string} key Config-key to set\n * @param {string | number | boolean} value Config-value to set\n * @return {Promise<void>}\n */\nconst setConfig = async (key, value) => {\n  await HttpClient.post(getLinkToConfig(key), {\n    value\n  });\n};\nexport { setConfig };","/**\n * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\nimport HTTPClient from '@nextcloud/axios';\nimport { translate as t } from '@nextcloud/l10n';\nimport { generateUrl, generateOcsUrl } from '@nextcloud/router';\nimport { loadState } from '@nextcloud/initial-state';\nimport { getCurrentUser } from '@nextcloud/auth';\nimport logger from '../utils/logger.js';\nimport { removeMailtoPrefix } from '../utils/attendee.js';\nimport md5 from 'md5';\n\n/**\n * Creates a new public talk room\n *\n * @param {?string} eventTitle Title of the event\n * @param {?string} eventDescription Description of the event\n * @param {?string[]} attendees Attendees of the event\n *\n * @return {Promise<string>}\n */\nexport async function createTalkRoom() {\n  let eventTitle = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  let eventDescription = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  let attendees = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  const apiVersion = loadState('calendar', 'talk_api_version');\n  try {\n    const response = await HTTPClient.post(generateOcsUrl('apps/spreed/api/' + apiVersion + '/', 2) + 'room', {\n      roomType: 3,\n      roomName: eventTitle || t('calendar', 'Talk conversation for event'),\n      objectType: 'event',\n      objectId: md5(new Date())\n    });\n    const conversation = response.data.ocs.data;\n    const token = conversation.token;\n    if (eventDescription) {\n      await HTTPClient.put(generateOcsUrl('apps/spreed/api/' + apiVersion + '/', 2) + 'room/' + token + '/description', {\n        description: eventDescription\n      });\n    }\n    return generateURLForToken(token);\n  } catch (error) {\n    console.debug(error);\n    throw error;\n  }\n}\n\n/**\n *\n * @param eventComponent\n */\nexport async function updateTalkParticipants(eventComponent) {\n  const apiVersion = loadState('calendar', 'talk_api_version');\n  const url = eventComponent.getConferenceList()[0]?.uri ?? eventComponent.location;\n  if (!url || !url.startsWith(window.location.protocol + '//' + window.location.host)) {\n    logger.debug('Event\\'s conference/location is from another host', url);\n    return;\n  }\n  const token = extractCallTokenFromUrl(url);\n  if (!token) {\n    logger.debug('URL ' + url + ' contains no call token');\n    return;\n  }\n  try {\n    const {\n      data: {\n        ocs: {\n          data: room\n        }\n      }\n    } = await HTTPClient.get(generateOcsUrl('apps/spreed/api/' + apiVersion + '/', 2) + 'room/' + token);\n    const participantsResponse = await HTTPClient.get(generateOcsUrl('apps/spreed/api/' + apiVersion + '/', 2) + 'room/' + token + '/participants');\n    // Ignore if the actor isn't owner of the conversation\n    if (!participantsResponse.data.ocs.data.some(participant => participant.actorId === getCurrentUser().uid && participant.participantType <= 2)) {\n      logger.debug('Current user is not a moderator or owner', {\n        currentUser: getCurrentUser().uid,\n        conversation: participantsResponse.data.ocs.data\n      });\n      return;\n    }\n    console.info('room', room);\n    for (const attendee of eventComponent.getAttendeeIterator()) {\n      logger.debug('Processing attendee', {\n        attendee\n      });\n      if (['GROUP', 'RESOURCE', 'ROOM'].includes(attendee.userType)) {\n        continue;\n      }\n      const participantId = removeMailtoPrefix(attendee.email);\n      try {\n        // Map attendee email to Nextcloud user uid\n        const searchResult = await HTTPClient.get(generateOcsUrl('core/autocomplete/', 2) + 'get?search=' + encodeURIComponent(participantId) + '&itemType=&itemId=%20&shareTypes[]=0&limit=2');\n        // Only map if there is exactly one result\n        if (searchResult.data.ocs.data.length === 1 && searchResult.data.ocs.data[0].id !== getCurrentUser().uid) {\n          await HTTPClient.post(generateOcsUrl('apps/spreed/api/' + apiVersion + '/', 2) + 'room/' + token + '/participants', {\n            newParticipant: searchResult.data.ocs.data[0].id,\n            source: 'users'\n          });\n        } else if (searchResult.data.ocs.data[0]?.id === getCurrentUser().uid) {\n          logger.debug('Skipping organizer ' + searchResult.data.ocs.data[0].id);\n        } else if (room.type === 3) {\n          await HTTPClient.post(generateOcsUrl('apps/spreed/api/' + apiVersion + '/', 2) + 'room/' + token + '/participants', {\n            newParticipant: participantId,\n            source: 'emails'\n          });\n        } else {\n          logger.debug('Attendee ' + participantId + ' ignored as Talk participant');\n        }\n      } catch (error) {\n        logger.info('Could not add attendee ' + participantId + ' as Talk participant', {\n          error\n        });\n      }\n    }\n  } catch (error) {\n    logger.warn('Could not update Talk room attendees', {\n      error\n    });\n  }\n}\n\n/**\n * Checks whether the value contains a talk link\n *\n * @param {?string} text Haystack\n * @return {boolean}\n */\nexport function doesContainTalkLink(text) {\n  if (!text) {\n    return false;\n  }\n\n  // TODO: there is most definitely a more reliable way,\n  // but this works for now\n  const fakeUrl = generateURLForToken();\n  return text.includes(fakeUrl);\n}\n\n/**\n * Generates an absolute URL to the talk room based on the token\n *\n * @param {string} token The token to the call room\n * @return {string}\n */\nexport function generateURLForToken() {\n  let token = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  return window.location.protocol + '//' + window.location.host + generateUrl('/call/' + token);\n}\n\n/**\n * Extract a spreed call token from the given URL\n *\n * @param {string} callUrl URL of the spreed call\n * @return {string|undefined} Matched token or undefined if URL is invalid\n */\nexport function extractCallTokenFromUrl(callUrl) {\n  return callUrl.match(/\\/call\\/([a-z0-9]*)(\\/|#.*)?$/)?.[1] ?? undefined;\n}","/**\n * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\nimport { getTimezoneManager } from '@nextcloud/timezones';\nconst timezoneManager = getTimezoneManager();\nlet initialized = false;\n\n/**\n * Gets the timezone-manager\n * initializes it if necessary\n *\n * @return {TimezoneManager}\n */\nexport default function () {\n  if (!initialized) {\n    timezoneManager.registerDefaultTimezones();\n    initialized = true;\n  }\n  return timezoneManager;\n}","/**\n * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\nimport jstz from 'jstz';\n\n/**\n * Returns the current timezone of the user\n *\n * @return {string} Current timezone of user\n */\nconst detectTimezone = () => {\n  const determinedTimezone = jstz.determine();\n  if (!determinedTimezone) {\n    return 'UTC';\n  }\n  const timezoneName = determinedTimezone.name();\n  if (!timezoneName) {\n    return 'UTC';\n  }\n  return timezoneName;\n};\nexport default detectTimezone;\nexport { detectTimezone };","/**\n * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\nimport getTimezoneManager from '../services/timezoneDataProviderService.js';\nimport { getDateFromDateTimeValue } from '../utils/date.js';\nimport { AttendeeProperty, Property, DateTimeValue, DurationValue, RecurValue, AttachmentProperty, Parameter } from '@nextcloud/calendar-js';\nimport { getBySetPositionAndBySetFromDate, getWeekDayFromDate } from '../utils/recurrence.js';\nimport { copyCalendarObjectInstanceIntoEventComponent, getDefaultEventObject, mapEventComponentToEventObject } from '../models/event.js';\nimport { getAmountAndUnitForTimedEvents, getAmountHoursMinutesAndUnitForAllDayEvents, getTotalSecondsFromAmountAndUnitForTimedEvents, getTotalSecondsFromAmountHourMinutesAndUnitForAllDayEvents, updateAlarms } from '../utils/alarms.js';\nimport { mapAlarmComponentToAlarmObject } from '../models/alarm.js';\nimport { getObjectAtRecurrenceId } from '../utils/calendarObject.js';\nimport logger from '../utils/logger.js';\nimport { getRFCProperties } from '../models/rfcProps.js';\nimport { generateUrl } from '@nextcloud/router';\nimport { updateTalkParticipants } from '../services/talkService.js';\nimport useCalendarObjectsStore from './calendarObjects.js';\nimport useCalendarsStore from './calendars.js';\nimport useSettingsStore from './settings.js';\nimport { getClosestCSS3ColorNameForHex, getHexForColorName } from '../utils/color.js';\nimport { defineStore } from 'pinia';\nimport Vue from 'vue';\nexport default defineStore('calendarObjectInstance', {\n  state: () => {\n    return {\n      isNew: null,\n      calendarObject: null,\n      calendarObjectInstance: null,\n      existingEvent: {\n        objectId: null,\n        recurrenceId: null\n      }\n    };\n  },\n  actions: {\n    /**\n     * Set a calendar-object-instance that will be opened in the editor (existing event)\n     *\n     * @param {object} data The destructuring object\n     * @param {object} data.calendarObject The calendar-object currently being edited\n     * @param {object} data.calendarObjectInstance The calendar-object-instance currently being edited\n     * @param {string} data.objectId The objectId of the calendar-object\n     * @param {number} data.recurrenceId The recurrence-id of the calendar-object-instance\n     */\n    setCalendarObjectInstanceForExistingEvent(_ref) {\n      let {\n        calendarObject,\n        calendarObjectInstance,\n        objectId,\n        recurrenceId\n      } = _ref;\n      this.isNew = false;\n      this.calendarObject = calendarObject;\n      this.calendarObjectInstance = calendarObjectInstance;\n      this.existingEvent.objectId = objectId;\n      this.existingEvent.recurrenceId = recurrenceId;\n    },\n    /**\n     * Set a calendar-object-instance that will be opened in the editor (new event)\n     *\n     * @param {object} data The destructuring object\n     * @param {object} data.calendarObject The calendar-object currently being created\n     * @param {object} data.calendarObjectInstance The calendar-object-instance currently being crated\n     */\n    setCalendarObjectInstanceForNewEvent(_ref2) {\n      let {\n        calendarObject,\n        calendarObjectInstance\n      } = _ref2;\n      this.isNew = true;\n      this.calendarObject = calendarObject;\n      this.calendarObjectInstance = calendarObjectInstance;\n      this.existingEvent.objectId = null;\n      this.existingEvent.recurrenceId = null;\n    },\n    resetCalendarObjectInstanceObjectIdAndRecurrenceId() {\n      this.isNew = false;\n      this.calendarObject = null;\n      this.calendarObjectInstance = null;\n      this.existingEvent.objectId = null;\n      this.existingEvent.recurrenceId = null;\n    },\n    /**\n     * Change the title of the event\n     *\n     * @param {object} data The destructuring object\n     * @param {object} data.calendarObjectInstance The calendarObjectInstance object\n     * @param {string} data.title The new Title\n     */\n    changeTitle(_ref3) {\n      let {\n        calendarObjectInstance,\n        title\n      } = _ref3;\n      calendarObjectInstance.eventComponent.title = title;\n      calendarObjectInstance.title = title;\n    },\n    /**\n     * Change the event's start\n     *\n     * @param {object} data The destructuring object\n     * @param {object} data.calendarObjectInstance The calendarObjectInstance object\n     * @param {Date} data.startDate New start date to set\n     */\n    changeStartDateMutation(_ref4) {\n      let {\n        calendarObjectInstance,\n        startDate\n      } = _ref4;\n      calendarObjectInstance.eventComponent.startDate.year = startDate.getFullYear();\n      calendarObjectInstance.eventComponent.startDate.month = startDate.getMonth() + 1;\n      calendarObjectInstance.eventComponent.startDate.day = startDate.getDate();\n      calendarObjectInstance.eventComponent.startDate.hour = startDate.getHours();\n      calendarObjectInstance.eventComponent.startDate.minute = startDate.getMinutes();\n      calendarObjectInstance.eventComponent.startDate.second = 0;\n      const isAllDay = calendarObjectInstance.eventComponent.isAllDay();\n      const endDateObj = calendarObjectInstance.eventComponent.endDate.clone();\n      const startDateObj = calendarObjectInstance.eventComponent.startDate.clone();\n      if (isAllDay) {\n        endDateObj.addDuration(DurationValue.fromSeconds(-1 * 60 * 60 * 24));\n        if (endDateObj.compare(startDateObj) === -1) {\n          const timezone = getTimezoneManager().getTimezoneForId(endDateObj.timezoneId);\n          calendarObjectInstance.eventComponent.endDate = calendarObjectInstance.eventComponent.startDate.getInTimezone(timezone);\n          calendarObjectInstance.endDate = getDateFromDateTimeValue(calendarObjectInstance.eventComponent.endDate);\n          calendarObjectInstance.eventComponent.endDate.addDuration(DurationValue.fromSeconds(60 * 60 * 24));\n        }\n      } else {\n        if (endDateObj.compare(startDateObj) === -1) {\n          const timezone = getTimezoneManager().getTimezoneForId(endDateObj.timezoneId);\n          calendarObjectInstance.eventComponent.endDate = calendarObjectInstance.eventComponent.startDate.getInTimezone(timezone);\n          calendarObjectInstance.endDate = getDateFromDateTimeValue(calendarObjectInstance.eventComponent.endDate);\n        }\n      }\n      calendarObjectInstance.startDate = startDate;\n    },\n    /**\n     * Change the timezone of the event's start\n     *\n     * @param {object} data The destructuring object\n     * @param {object} data.calendarObjectInstance The calendarObjectInstance object\n     * @param {string} data.startTimezone New timezone to set for start\n     */\n    changeStartTimezoneMutation(_ref5) {\n      let {\n        calendarObjectInstance,\n        startTimezone\n      } = _ref5;\n      const timezone = getTimezoneManager().getTimezoneForId(startTimezone);\n      calendarObjectInstance.eventComponent.startDate.replaceTimezone(timezone);\n      calendarObjectInstance.startTimezoneId = startTimezone;\n\n      // Either both are floating or both have a timezone, but it can't be mixed\n      if (startTimezone === 'floating' || calendarObjectInstance.endTimezoneId === 'floating') {\n        calendarObjectInstance.eventComponent.endDate.replaceTimezone(timezone);\n        calendarObjectInstance.endTimezoneId = startTimezone;\n      }\n    },\n    /**\n     * Change the event's end\n     *\n     * @param {object} data The destructuring object\n     * @param {object} data.calendarObjectInstance The calendarObjectInstance object\n     * @param {Date} data.endDate New end date to set\n     */\n    changeEndDateMutation(_ref6) {\n      let {\n        calendarObjectInstance,\n        endDate\n      } = _ref6;\n      // If the event is using DURATION, endDate is dynamically generated.\n      // In order to alter it, we need to explicitly set DTEND\n      const endDateObject = calendarObjectInstance.eventComponent.endDate;\n      calendarObjectInstance.eventComponent.endDate = endDateObject;\n      calendarObjectInstance.eventComponent.endDate.year = endDate.getFullYear();\n      calendarObjectInstance.eventComponent.endDate.month = endDate.getMonth() + 1;\n      calendarObjectInstance.eventComponent.endDate.day = endDate.getDate();\n      calendarObjectInstance.eventComponent.endDate.hour = endDate.getHours();\n      calendarObjectInstance.eventComponent.endDate.minute = endDate.getMinutes();\n      calendarObjectInstance.eventComponent.endDate.second = 0;\n      const isAllDay = calendarObjectInstance.eventComponent.isAllDay();\n      const endDateObj = calendarObjectInstance.eventComponent.endDate.clone();\n      const startDateObj = calendarObjectInstance.eventComponent.startDate.clone();\n      if (isAllDay) {\n        if (endDateObj.compare(startDateObj) === -1) {\n          const timezone = getTimezoneManager().getTimezoneForId(startDateObj.timezoneId);\n          calendarObjectInstance.eventComponent.startDate = calendarObjectInstance.eventComponent.endDate.getInTimezone(timezone);\n          calendarObjectInstance.startDate = getDateFromDateTimeValue(calendarObjectInstance.eventComponent.startDate);\n        }\n\n        // endDate is inclusive, but DTEND needs to be exclusive, so always add one day\n        calendarObjectInstance.eventComponent.endDate.addDuration(DurationValue.fromSeconds(60 * 60 * 24));\n      } else {\n        // Is end before start?\n        if (endDateObj.compare(startDateObj) === -1) {\n          // Is end more than one day before start?\n          endDateObj.addDuration(DurationValue.fromSeconds(60 * 60 * 24));\n          if (endDateObj.compare(startDateObj) === -1) {\n            const timezone = getTimezoneManager().getTimezoneForId(startDateObj.timezoneId);\n            calendarObjectInstance.eventComponent.startDate = calendarObjectInstance.eventComponent.endDate.getInTimezone(timezone);\n            calendarObjectInstance.startDate = getDateFromDateTimeValue(calendarObjectInstance.eventComponent.startDate);\n          } else {\n            // add one day to endDate if the endDate is before the startDate which allows to easily create events that reach over or to 0:00\n            calendarObjectInstance.eventComponent.endDate.addDuration(DurationValue.fromSeconds(60 * 60 * 24));\n            endDate = new Date(endDate.getTime() + 24 * 60 * 60 * 1000);\n          }\n        }\n      }\n      calendarObjectInstance.endDate = endDate;\n    },\n    /**\n     * Change the timezone of the event's end\n     *\n     * @param {object} data The destructuring object\n     * @param {object} data.calendarObjectInstance The calendarObjectInstance object\n     * @param {string} data.endTimezone New timezone to set for end\n     */\n    changeEndTimezoneMutation(_ref7) {\n      let {\n        calendarObjectInstance,\n        endTimezone\n      } = _ref7;\n      const timezone = getTimezoneManager().getTimezoneForId(endTimezone);\n      calendarObjectInstance.eventComponent.endDate.replaceTimezone(timezone);\n      calendarObjectInstance.endTimezoneId = endTimezone;\n\n      // Either both are floating or both have a timezone, but it can't be mixed\n      if (endTimezone === 'floating' || calendarObjectInstance.startTimezoneId === 'floating') {\n        calendarObjectInstance.eventComponent.startDate.replaceTimezone(timezone);\n        calendarObjectInstance.startTimezoneId = endTimezone;\n      }\n    },\n    /**\n     * Switch from a timed event to allday or vice versa\n     *\n     * @param {object} data The destructuring object\n     * @param {object} data.calendarObjectInstance The calendarObjectInstance object\n     */\n    toggleAllDayMutation(_ref8) {\n      let {\n        calendarObjectInstance\n      } = _ref8;\n      if (!calendarObjectInstance.eventComponent.canModifyAllDay()) {\n        return;\n      }\n      const isAllDay = calendarObjectInstance.eventComponent.isAllDay();\n      calendarObjectInstance.eventComponent.startDate.isDate = !isAllDay;\n      calendarObjectInstance.eventComponent.endDate.isDate = !isAllDay;\n      calendarObjectInstance.isAllDay = calendarObjectInstance.eventComponent.isAllDay();\n\n      // isAllDay = old value\n      if (isAllDay) {\n        calendarObjectInstance.eventComponent.endDate.addDuration(DurationValue.fromSeconds(-1 * 60 * 60 * 24));\n      } else {\n        calendarObjectInstance.eventComponent.endDate.addDuration(DurationValue.fromSeconds(60 * 60 * 24));\n      }\n    },\n    /**\n     * Changes the time of a timed event to the default values\n     *\n     * @param {object} data The destructuring object\n     * @param {object} data.calendarObjectInstance The calendarObjectInstance object\n     */\n    changeTimeToDefaultForTimedEvents(_ref9) {\n      let {\n        calendarObjectInstance\n      } = _ref9;\n      const startDate = calendarObjectInstance.eventComponent.startDate;\n      const endDate = calendarObjectInstance.eventComponent.endDate;\n      if (startDate.hour === 0 && startDate.minute === 0 && endDate.hour === 0 && endDate.minute === 0) {\n        startDate.hour = 10;\n        endDate.hour = 11;\n        calendarObjectInstance.startDate = getDateFromDateTimeValue(startDate);\n        calendarObjectInstance.endDate = getDateFromDateTimeValue(endDate);\n      }\n    },\n    /**\n     * Change the location of an event\n     *\n     * @param {object} data The destructuring object\n     * @param {object} data.calendarObjectInstance The calendarObjectInstance object\n     * @param {string} data.location New location to set\n     */\n    changeLocation(_ref10) {\n      let {\n        calendarObjectInstance,\n        location\n      } = _ref10;\n      // Special case: delete Apple-specific location property to avoid inconsistencies\n      calendarObjectInstance.eventComponent.deleteAllProperties('X-APPLE-STRUCTURED-LOCATION');\n      calendarObjectInstance.eventComponent.location = location;\n      calendarObjectInstance.location = location;\n    },\n    /**\n     * Change the description of an event\n     *\n     * @param {object} data The destructuring object\n     * @param {object} data.calendarObjectInstance The calendarObjectInstance object\n     * @param {string} data.description New description to set\n     */\n    changeDescription(_ref11) {\n      let {\n        calendarObjectInstance,\n        description\n      } = _ref11;\n      // To avoid inconsistencies (bug #3863), remove all parameters (e.g., ALTREP) upon modification\n      const descriptionProperty = calendarObjectInstance.eventComponent.getFirstProperty('Description');\n      if (descriptionProperty) {\n        for (const parameter of descriptionProperty.getParametersIterator()) {\n          descriptionProperty.deleteParameter(parameter.name);\n        }\n      }\n\n      // Delete custom description properties\n      calendarObjectInstance.eventComponent.deleteAllProperties('X-ALT-DESC');\n      calendarObjectInstance.eventComponent.description = description;\n      calendarObjectInstance.description = description;\n    },\n    /**\n     * Change the access class of an event\n     *\n     * @param {object} data The destructuring object\n     * @param {object} data.calendarObjectInstance The calendarObjectInstance object\n     * @param {string} data.accessClass New access class to set\n     */\n    changeAccessClass(_ref12) {\n      let {\n        calendarObjectInstance,\n        accessClass\n      } = _ref12;\n      calendarObjectInstance.eventComponent.accessClass = accessClass;\n      calendarObjectInstance.accessClass = accessClass;\n    },\n    /**\n     * Change the status of an event\n     *\n     * @param {object} data The destructuring object\n     * @param {object} data.calendarObjectInstance The calendarObjectInstance object\n     * @param {string} data.status New status to set\n     */\n    changeStatus(_ref13) {\n      let {\n        calendarObjectInstance,\n        status\n      } = _ref13;\n      calendarObjectInstance.eventComponent.status = status;\n      calendarObjectInstance.status = status;\n    },\n    /**\n     * Change the time-transparency of an event\n     *\n     * @param {object} data The destructuring object\n     * @param {object} data.calendarObjectInstance The calendarObjectInstance object\n     * @param {string} data.timeTransparency New time-transparency to set\n     */\n    changeTimeTransparency(_ref14) {\n      let {\n        calendarObjectInstance,\n        timeTransparency\n      } = _ref14;\n      calendarObjectInstance.eventComponent.timeTransparency = timeTransparency;\n      calendarObjectInstance.timeTransparency = timeTransparency;\n    },\n    /**\n     * Change the customized color of an event\n     *\n     * @param {object} data The destructuring object\n     * @param {object} data.calendarObjectInstance The calendarObjectInstance object\n     * @param {string | null} data.customColor New color to set\n     */\n    changeCustomColor(_ref15) {\n      let {\n        calendarObjectInstance,\n        customColor\n      } = _ref15;\n      if (customColor === null) {\n        calendarObjectInstance.eventComponent.deleteAllProperties('COLOR');\n        // TODO: get rid of Vue.set in Vue 3\n        Vue.set(calendarObjectInstance, 'customColor', null);\n        return;\n      }\n      const cssColorName = getClosestCSS3ColorNameForHex(customColor);\n      const hexColorOfCssName = getHexForColorName(cssColorName);\n\n      // Abort if either is undefined\n      if (!cssColorName || !hexColorOfCssName) {\n        console.error('Setting custom color failed');\n        console.error('customColor: ', customColor);\n        console.error('cssColorName: ', cssColorName);\n        console.error('hexColorOfCssName: ', hexColorOfCssName);\n        return;\n      }\n      calendarObjectInstance.eventComponent.color = cssColorName;\n      // TODO: get rid of Vue.set in Vue 3\n      Vue.set(calendarObjectInstance, 'customColor', hexColorOfCssName);\n    },\n    /**\n     * Adds an attendee to the event and sets the organizer if not present already\n     *\n     * @param {object} data The destructuring object\n     * @param {object} data.calendarObjectInstance The calendarObjectInstance object\n     * @param {string} data.commonName Displayname of attendee\n     * @param {string} data.uri Email address of attendee\n     * @param {string} data.calendarUserType Calendar-user-type of attendee (INDIVIDUAL, GROUP, RESOURCE, ROOM)\n     * @param {string} data.participationStatus Participation Status of attendee\n     * @param {string} data.role Role of Attendee\n     * @param {boolean} data.rsvp Whether or not to request a response from the attendee\n     * @param {string=} data.language Preferred language of the attendee\n     * @param {string=} data.timezoneId Preferred timezone of the attendee\n     * @param {object=} data.organizer Principal of the organizer to be set if not present\n     * @param {string | Array} data.member Group membership(s)\n     */\n    addAttendee(_ref16) {\n      let {\n        calendarObjectInstance,\n        commonName,\n        uri,\n        calendarUserType = null,\n        participationStatus = null,\n        role = null,\n        rsvp = null,\n        language = null,\n        timezoneId = null,\n        organizer = null,\n        member = null\n      } = _ref16;\n      const attendee = AttendeeProperty.fromNameAndEMail(commonName, uri);\n      if (calendarUserType !== null) {\n        attendee.userType = calendarUserType;\n      }\n      if (participationStatus !== null) {\n        attendee.participationStatus = participationStatus;\n      }\n      if (role !== null) {\n        attendee.role = role;\n      }\n      if (rsvp !== null) {\n        attendee.rsvp = rsvp;\n      }\n      if (language !== null) {\n        attendee.language = language;\n      }\n      if (timezoneId !== null) {\n        attendee.updateParameterIfExist('TZID', timezoneId);\n      }\n      if (member !== null) {\n        attendee.updateParameterIfExist('MEMBER', member);\n      }\n\n      // TODO - use real addAttendeeFrom method\n      calendarObjectInstance.eventComponent.addProperty(attendee);\n      calendarObjectInstance.attendees.push({\n        commonName,\n        participationStatus,\n        role,\n        rsvp,\n        uri,\n        attendeeProperty: attendee\n      });\n      if (!calendarObjectInstance.organizer && organizer) {\n        this.setOrganizer({\n          calendarObjectInstance,\n          commonName: organizer.displayname,\n          email: organizer.emailAddress\n        });\n      }\n    },\n    /**\n     * Removes an attendee from the event\n     *\n     * @param {object} data The destructuring object\n     * @param {object} data.calendarObjectInstance The calendarObjectInstance object\n     * @param {object} data.attendee The attendee object to remove\n     */\n    removeAttendee(_ref17) {\n      let {\n        calendarObjectInstance,\n        attendee\n      } = _ref17;\n      calendarObjectInstance.eventComponent.removeAttendee(attendee.attendeeProperty);\n      // Also remove members if attendee is a group\n      if (attendee.attendeeProperty.userType === 'GROUP') {\n        attendee.members.forEach(function (member) {\n          if (Array.isArray(member.attendeeProperty.member) && member.attendeeProperty.member.length > 1) {\n            const removeIndex = member.attendeeProperty.member.findIndex(function (groupname) {\n              if (groupname === attendee.uri) {\n                return true;\n              }\n              return false;\n            });\n            if (removeIndex !== -1) {\n              member.attendeeProperty.member.splice(removeIndex, 1);\n            }\n          } else {\n            calendarObjectInstance.eventComponent.removeAttendee(member.attendeeProperty);\n            const index = calendarObjectInstance.attendees.indexOf(member);\n            if (index !== -1) {\n              calendarObjectInstance.attendees.splice(index, 1);\n            }\n          }\n        });\n      }\n      const index = calendarObjectInstance.attendees.indexOf(attendee);\n      if (index !== -1) {\n        calendarObjectInstance.attendees.splice(index, 1);\n      }\n    },\n    /**\n     * Changes an attendees' participation status\n     *\n     * @param {object} data The destructuring object\n     * @param {object} data.attendee The attendee object\n     * @param {string} data.participationStatus New Participation Status of attendee\n     */\n    changeAttendeesParticipationStatus(_ref18) {\n      let {\n        attendee,\n        participationStatus\n      } = _ref18;\n      attendee.attendeeProperty.participationStatus = participationStatus;\n      attendee.participationStatus = participationStatus;\n    },\n    /**\n     * Changes an attendees' role\n     *\n     * @param {object} data The destructuring object\n     * @param {object} data.attendee The attendee object\n     * @param {string} data.role New role of attendee\n     */\n    changeAttendeesRole(_ref19) {\n      let {\n        attendee,\n        role\n      } = _ref19;\n      attendee.attendeeProperty.role = role;\n      attendee.role = role;\n    },\n    /**\n     * Changes an attendees' RVSP\n     *\n     * @param {object} data The destructuring object\n     * @param {object} data.attendee The attendee object\n     */\n    toggleAttendeeRSVP(_ref20) {\n      let {\n        attendee\n      } = _ref20;\n      const oldRSVP = attendee.attendeeProperty.rsvp;\n      attendee.attendeeProperty.rsvp = !oldRSVP;\n      attendee.rsvp = !oldRSVP;\n    },\n    /**\n     * Set the event's organizer\n     *\n     * @param {object} data The destructuring object\n     * @param {object} data.calendarObjectInstance The calendarObjectInstance object\n     * @param {string=} data.commonName Displayname of organizer\n     * @param {string} data.email Email-address of organizer\n     */\n    setOrganizer(_ref21) {\n      let {\n        calendarObjectInstance,\n        commonName = null,\n        email\n      } = _ref21;\n      calendarObjectInstance.eventComponent.setOrganizerFromNameAndEMail(commonName, email);\n      Vue.set(calendarObjectInstance, 'organizer', {\n        commonName,\n        uri: email,\n        attendeeProperty: calendarObjectInstance.eventComponent.getFirstProperty('ORGANIZER')\n      });\n    },\n    /**\n     * Adds a category to the event\n     *\n     * @param {object} data The destructuring object\n     * @param {object} data.calendarObjectInstance The calendarObjectInstance object\n     * @param {string} data.category Category to add\n     */\n    addCategory(_ref22) {\n      let {\n        calendarObjectInstance,\n        category\n      } = _ref22;\n      calendarObjectInstance.eventComponent.addCategory(category);\n      calendarObjectInstance.categories.push(category);\n    },\n    /**\n     * Removes a category from the event\n     *\n     * @param {object} data The destructuring object\n     * @param {object} data.calendarObjectInstance The calendarObjectInstance object\n     * @param {string} data.category Category to remove\n     */\n    removeCategory(_ref23) {\n      let {\n        calendarObjectInstance,\n        category\n      } = _ref23;\n      calendarObjectInstance.eventComponent.removeCategory(category);\n      const index = calendarObjectInstance.categories.indexOf(category);\n      if (index !== -1) {\n        calendarObjectInstance.categories.splice(index, 1);\n      }\n    },\n    /**\n     * Change the interval of the recurrence-rule\n     *\n     * @param {object} data The destructuring object\n     * @param {object} data.recurrenceRule The recurrenceRule object to modify\n     * @param {string} data.interval The new interval to set\n     */\n    changeRecurrenceInterval(_ref24) {\n      let {\n        recurrenceRule,\n        interval\n      } = _ref24;\n      if (recurrenceRule.recurrenceRuleValue) {\n        recurrenceRule.recurrenceRuleValue.interval = interval;\n        recurrenceRule.interval = interval;\n        console.debug(recurrenceRule.recurrenceRuleValue._innerValue.toString());\n      }\n    },\n    /**\n     * Change the frequency of the recurrence-rule\n     *\n     * @param {object} data The destructuring object\n     * @param {object} data.recurrenceRule The recurrenceRule object to modify\n     * @param {string} data.frequency The new frequency to set\n     */\n    changeRecurrenceFrequencyMutation(_ref25) {\n      let {\n        recurrenceRule,\n        frequency\n      } = _ref25;\n      if (recurrenceRule.recurrenceRuleValue) {\n        recurrenceRule.recurrenceRuleValue.frequency = frequency;\n        recurrenceRule.frequency = frequency;\n        console.debug(recurrenceRule.recurrenceRuleValue._innerValue.toString());\n      }\n    },\n    /**\n     * Change the count limit of the recurrence-rule\n     *\n     * @param {object} data The destructuring object\n     * @param {object} data.recurrenceRule The recurrenceRule object to modify\n     * @param {string} data.count The new count to set\n     */\n    changeRecurrenceCount(_ref26) {\n      let {\n        recurrenceRule,\n        count\n      } = _ref26;\n      if (recurrenceRule.recurrenceRuleValue) {\n        recurrenceRule.recurrenceRuleValue.count = count;\n        recurrenceRule.count = count;\n        recurrenceRule.until = null;\n        console.debug(recurrenceRule.recurrenceRuleValue._innerValue.toString());\n      }\n    },\n    /**\n     * Change the until limit of the recurrence-rule\n     *\n     * @param {object} data The destructuring object\n     * @param {object} data.calendarObjectInstance The calendarObjectInstance object\n     * @param {object} data.recurrenceRule The recurrenceRule object to modify\n     * @param {Date} data.until The new until to set\n     */\n    changeRecurrenceUntil(_ref27) {\n      let {\n        calendarObjectInstance,\n        recurrenceRule,\n        until\n      } = _ref27;\n      if (recurrenceRule.recurrenceRuleValue) {\n        // RFC 5545, setion 3.3.10: until must be in UTC if the start time is timezone-aware\n        if (calendarObjectInstance.startTimezoneId !== 'floating') {\n          recurrenceRule.recurrenceRuleValue.until = DateTimeValue.fromJSDate(until, {\n            zone: 'utc'\n          });\n        } else {\n          recurrenceRule.recurrenceRuleValue.until = DateTimeValue.fromJSDate(until);\n        }\n        recurrenceRule.until = until;\n        recurrenceRule.count = null;\n        console.debug(recurrenceRule.recurrenceRuleValue._innerValue.toString());\n      }\n    },\n    /**\n     * Changes the recurrence-rule to never end\n     *\n     * @param {object} data The destructuring object\n     * @param {object} data.recurrenceRule The recurrenceRule object to modify\n     */\n    changeRecurrenceToInfinite(_ref28) {\n      let {\n        recurrenceRule\n      } = _ref28;\n      if (recurrenceRule.recurrenceRuleValue) {\n        recurrenceRule.recurrenceRuleValue.setToInfinite();\n        recurrenceRule.until = null;\n        recurrenceRule.count = null;\n        console.debug(recurrenceRule.recurrenceRuleValue._innerValue.toString());\n      }\n    },\n    /**\n     * Reset the By-parts of the recurrence rule\n     *\n     * @param {object} data The destructuring object\n     * @param {object} data.recurrenceRule The recurrenceRule object to modify\n     */\n    resetRecurrenceByParts(_ref29) {\n      let {\n        recurrenceRule\n      } = _ref29;\n      if (recurrenceRule.recurrenceRuleValue) {\n        const parts = ['BYSECOND', 'BYMINUTE', 'BYHOUR', 'BYDAY', 'BYMONTHDAY', 'BYYEARDAY', 'BYWEEKNO', 'BYMONTH', 'BYSETPOS'];\n        for (const part of parts) {\n          recurrenceRule.recurrenceRuleValue.setComponent(part, []);\n        }\n\n        /* TODO\n        recurrenceRule.byDay = []\n        recurrenceRule.byMonth = []\n        recurrenceRule.byMonthDay = []\n        recurrenceRule.bySetPosition = null\n        */\n\n        Vue.set(recurrenceRule, 'byDay', []);\n        Vue.set(recurrenceRule, 'byMonth', []);\n        Vue.set(recurrenceRule, 'byMonthDay', []);\n        Vue.set(recurrenceRule, 'bySetPosition', null);\n        console.debug(recurrenceRule.recurrenceRuleValue._innerValue.toString());\n      }\n    },\n    /**\n     *\n     * @param {object} data The destructuring object\n     * @param {object} data.calendarObjectInstance The calendarObjectInstance object\n     * @param {object} data.recurrenceRule The recurrenceRule object to modify\n     */\n    setDefaultRecurrenceByPartsForMonthlyBySetPosition(_ref30) {\n      let {\n        calendarObjectInstance,\n        recurrenceRule\n      } = _ref30;\n      if (recurrenceRule.recurrenceRuleValue) {\n        const {\n          byDay,\n          bySetPosition\n        } = getBySetPositionAndBySetFromDate(calendarObjectInstance.startDate);\n        recurrenceRule.recurrenceRuleValue.setComponent('BYDAY', [byDay]);\n        recurrenceRule.recurrenceRuleValue.setComponent('BYSETPOS', [bySetPosition]);\n        recurrenceRule.byDay.push(byDay);\n        recurrenceRule.bySetPosition = bySetPosition;\n        console.debug(recurrenceRule.recurrenceRuleValue._innerValue.toString());\n      }\n    },\n    /**\n     * Change the until limit of the recurrence-rule\n     *\n     * @param {object} data The destructuring object\n     * @param {object} data.recurrenceRule The recurrenceRule object to modify\n     * @param {string} data.byDay The new until to set\n     */\n    addByDayToRecurrenceRule(_ref31) {\n      let {\n        recurrenceRule,\n        byDay\n      } = _ref31;\n      if (recurrenceRule.recurrenceRuleValue) {\n        const byDayList = recurrenceRule.recurrenceRuleValue.getComponent('BYDAY');\n        const index = byDayList.indexOf(byDay);\n        if (index === -1) {\n          byDayList.push(byDay);\n          recurrenceRule.recurrenceRuleValue.setComponent('BYDAY', byDayList);\n        }\n        const index2 = recurrenceRule.byDay.indexOf(byDay);\n        if (index2 === -1) {\n          recurrenceRule.byDay.push(byDay);\n        }\n        console.debug(recurrenceRule.recurrenceRuleValue._innerValue.toString());\n      }\n    },\n    /**\n     * Change the until limit of the recurrence-rule\n     *\n     * @param {object} data The destructuring object\n     * @param {object} data.recurrenceRule The recurrenceRule object to modify\n     * @param {string} data.byDay The new until to set\n     */\n    removeByDayFromRecurrenceRule(_ref32) {\n      let {\n        recurrenceRule,\n        byDay\n      } = _ref32;\n      if (recurrenceRule.recurrenceRuleValue) {\n        const byDayList = recurrenceRule.recurrenceRuleValue.getComponent('BYDAY');\n        const index = byDayList.indexOf(byDay);\n        if (index !== -1) {\n          byDayList.splice(index, 1);\n          recurrenceRule.recurrenceRuleValue.setComponent('BYDAY', byDayList);\n        }\n        const index2 = recurrenceRule.byDay.indexOf(byDay);\n        if (index2 !== -1) {\n          recurrenceRule.byDay.splice(index2, 1);\n        }\n        console.debug(recurrenceRule.recurrenceRuleValue._innerValue.toString());\n      }\n    },\n    /**\n     * Change the until limit of the recurrence-rule\n     *\n     * @param {object} data The destructuring object\n     * @param {object} data.recurrenceRule The recurrenceRule object to modify\n     * @param {string} data.byMonthDay The new until to set\n     */\n    addByMonthDayToRecurrenceRule(_ref33) {\n      let {\n        recurrenceRule,\n        byMonthDay\n      } = _ref33;\n      if (recurrenceRule.recurrenceRuleValue) {\n        const byMonthDayList = recurrenceRule.recurrenceRuleValue.getComponent('BYMONTHDAY');\n        const index = byMonthDayList.indexOf(byMonthDay);\n        if (index === -1) {\n          byMonthDayList.push(byMonthDay);\n          recurrenceRule.recurrenceRuleValue.setComponent('BYMONTHDAY', byMonthDayList);\n        }\n        const index2 = recurrenceRule.byMonthDay.indexOf(byMonthDay);\n        if (index2 === -1) {\n          recurrenceRule.byMonthDay.push(byMonthDay);\n        }\n        console.debug(recurrenceRule.recurrenceRuleValue._innerValue.toString());\n      }\n    },\n    /**\n     * Change the until limit of the recurrence-rule\n     *\n     * @param {object} data The destructuring object\n     * @param {object} data.recurrenceRule The recurrenceRule object to modify\n     * @param {string} data.byMonthDay The new until to set\n     */\n    removeByMonthDayFromRecurrenceRule(_ref34) {\n      let {\n        recurrenceRule,\n        byMonthDay\n      } = _ref34;\n      if (recurrenceRule.recurrenceRuleValue) {\n        const byMonthDayList = recurrenceRule.recurrenceRuleValue.getComponent('BYMONTHDAY');\n        const index = byMonthDayList.indexOf(byMonthDay);\n        if (index !== -1) {\n          byMonthDayList.splice(index, 1);\n          recurrenceRule.recurrenceRuleValue.setComponent('BYMONTHDAY', byMonthDayList);\n        }\n        const index2 = recurrenceRule.byMonthDay.indexOf(byMonthDay);\n        if (index2 !== -1) {\n          recurrenceRule.byMonthDay.splice(index2, 1);\n        }\n        console.debug(recurrenceRule.recurrenceRuleValue._innerValue.toString());\n      }\n    },\n    /**\n     * Change the until limit of the recurrence-rule\n     *\n     * @param {object} data The destructuring object\n     * @param {object} data.recurrenceRule The recurrenceRule object to modify\n     * @param {string} data.byMonth The new until to set\n     */\n    addByMonthToRecurrenceRule(_ref35) {\n      let {\n        recurrenceRule,\n        byMonth\n      } = _ref35;\n      if (recurrenceRule.recurrenceRuleValue) {\n        console.debug('addByMonthToRecurrenceRule', byMonth);\n        const byMonthList = recurrenceRule.recurrenceRuleValue.getComponent('BYMONTH');\n        const index = byMonthList.indexOf(byMonth);\n        if (index === -1) {\n          byMonthList.push(byMonth);\n          recurrenceRule.recurrenceRuleValue.setComponent('BYMONTH', byMonthList);\n        }\n        const index2 = recurrenceRule.byMonth.indexOf(byMonth);\n        if (index2 === -1) {\n          recurrenceRule.byMonth.push(byMonth);\n        }\n        console.debug(recurrenceRule.recurrenceRuleValue._innerValue.toString());\n      }\n    },\n    /**\n     * Change the until limit of the recurrence-rule\n     *\n     * @param {object} data The destructuring object\n     * @param {object} data.recurrenceRule The recurrenceRule object to modify\n     * @param {string} data.byMonth The new until to set\n     */\n    removeByMonthFromRecurrenceRule(_ref36) {\n      let {\n        recurrenceRule,\n        byMonth\n      } = _ref36;\n      if (recurrenceRule.recurrenceRuleValue) {\n        console.debug('removeByMonthFromRecurrenceRule', byMonth);\n        const byMonthList = recurrenceRule.recurrenceRuleValue.getComponent('BYMONTH');\n        const index = byMonthList.indexOf(byMonth);\n        if (index !== -1) {\n          byMonthList.splice(index, 1);\n          recurrenceRule.recurrenceRuleValue.setComponent('BYMONTH', byMonthList);\n        }\n        const index2 = recurrenceRule.byMonth.indexOf(byMonth);\n        if (index2 !== -1) {\n          recurrenceRule.byMonth.splice(index2, 1);\n        }\n        console.debug(recurrenceRule.recurrenceRuleValue._innerValue.toString());\n      }\n    },\n    /**\n     *\n     * @param {object} data The destructuring object\n     * @param {object} data.recurrenceRule The recurrenceRule object to modify\n     * @param {string[]} data.byDay The new until to set\n     */\n    changeRecurrenceByDay(_ref37) {\n      let {\n        recurrenceRule,\n        byDay\n      } = _ref37;\n      if (recurrenceRule.recurrenceRuleValue) {\n        recurrenceRule.recurrenceRuleValue.setComponent('BYDAY', byDay);\n        // TODO recurrenceRule.byDay = byDay\n        Vue.set(recurrenceRule, 'byDay', byDay);\n        console.debug(recurrenceRule.recurrenceRuleValue._innerValue.toString());\n      }\n    },\n    /**\n     * Change the until limit of the recurrence-rule\n     *\n     * @param {object} data The destructuring object\n     * @param {object} data.recurrenceRule The recurrenceRule object to modify\n     * @param {string} data.bySetPosition The new until to set\n     */\n    changeRecurrenceBySetPosition(_ref38) {\n      let {\n        recurrenceRule,\n        bySetPosition\n      } = _ref38;\n      if (recurrenceRule.recurrenceRuleValue) {\n        recurrenceRule.recurrenceRuleValue.setComponent('BYSETPOS', [bySetPosition]);\n        /// TODO recurrenceRule.bySetPosition = bySetPosition\n        Vue.set(recurrenceRule, 'bySetPosition', bySetPosition);\n        console.debug(recurrenceRule.recurrenceRuleValue._innerValue.toString());\n      }\n    },\n    /**\n     *\n     * @param {object} data The destructuring object\n     * @param {object} data.recurrenceRule The recurrenceRule object to modify\n     */\n    markRecurrenceRuleAsSupported(_ref39) {\n      let {\n        recurrenceRule\n      } = _ref39;\n      recurrenceRule.isUnsupported = false;\n    },\n    /**\n     *\n     * @param {object} data The destructuring object\n     * @param {object} data.alarm The alarm object\n     * @param {string} data.type New type of alarm\n     */\n    changeAlarmType(_ref40) {\n      let {\n        alarm,\n        type\n      } = _ref40;\n      if (alarm.alarmComponent) {\n        alarm.alarmComponent.action = type;\n        alarm.type = type;\n        console.debug(alarm.alarmComponent.toICALJs().toString());\n      }\n    },\n    /**\n     *\n     * @param {object} data The destructuring object\n     * @param {object} data.alarm The alarm object\n     * @param {Date} data.date New date object\n     */\n    changeAlarmAbsoluteDate(_ref41) {\n      let {\n        alarm,\n        date\n      } = _ref41;\n      if (alarm.alarmComponent) {\n        alarm.alarmComponent.trigger.value.year = date.getFullYear();\n        alarm.alarmComponent.trigger.value.month = date.getMonth() + 1;\n        alarm.alarmComponent.trigger.value.day = date.getDate();\n        alarm.alarmComponent.trigger.value.hour = date.getHours();\n        alarm.alarmComponent.trigger.value.minute = date.getMinutes();\n        alarm.alarmComponent.trigger.value.second = 0;\n        alarm.absoluteDate = date;\n        console.debug(alarm.alarmComponent.toICALJs().toString());\n      }\n    },\n    /**\n     *\n     * @param {object} data The destructuring object\n     * @param {object} data.alarm The alarm object\n     * @param {string} data.timezoneId New timezoneId\n     */\n    changeAlarmAbsoluteTimezoneId(_ref42) {\n      let {\n        alarm,\n        timezoneId\n      } = _ref42;\n      if (alarm.alarmComponent) {\n        const timezone = getTimezoneManager().getTimezoneForId(timezoneId);\n        alarm.alarmComponent.trigger.value.replaceTimezone(timezone);\n        alarm.absoluteTimezoneId = timezoneId;\n        console.debug(alarm.alarmComponent.toICALJs().toString());\n      }\n    },\n    /**\n     *\n     * @param {object} data The destructuring object\n     * @param {object} data.alarm The alarm object\n     */\n    updateAlarmAllDayParts(_ref43) {\n      let {\n        alarm\n      } = _ref43;\n      if (alarm.alarmComponent) {\n        const totalSeconds = alarm.alarmComponent.trigger.value.totalSeconds;\n        const allDayParts = getAmountHoursMinutesAndUnitForAllDayEvents(totalSeconds);\n        alarm.relativeUnitAllDay = allDayParts.unit;\n        alarm.relativeAmountAllDay = allDayParts.amount;\n        alarm.relativeHoursAllDay = allDayParts.hours;\n        alarm.relativeMinutesAllDay = allDayParts.minutes;\n      }\n    },\n    /**\n     *\n     * @param {object} data The destructuring object\n     * @param {object} data.alarm The alarm object\n     */\n    updateAlarmTimedParts(_ref44) {\n      let {\n        alarm\n      } = _ref44;\n      if (alarm.alarmComponent) {\n        const totalSeconds = alarm.alarmComponent.trigger.value.totalSeconds;\n        const timedParts = getAmountAndUnitForTimedEvents(totalSeconds);\n        alarm.relativeUnitTimed = timedParts.unit;\n        alarm.relativeAmountTimed = timedParts.amount;\n        console.debug(alarm.alarmComponent.toICALJs().toString());\n      }\n    },\n    /**\n     *\n     * @param {object} data The destructuring object\n     * @param {object} data.calendarObjectInstance The calendarObjectInstance object\n     * @param {string} data.type Type of alarm\n     * @param {number} data.totalSeconds Total amount of seconds for new alarm\n     */\n    addAlarmToCalendarObjectInstance(_ref45) {\n      let {\n        calendarObjectInstance,\n        type,\n        totalSeconds\n      } = _ref45;\n      if (calendarObjectInstance.eventComponent) {\n        const eventComponent = calendarObjectInstance.eventComponent;\n        const duration = DurationValue.fromSeconds(totalSeconds);\n        const alarmComponent = eventComponent.addRelativeAlarm(type, duration);\n        const alarmObject = mapAlarmComponentToAlarmObject(alarmComponent);\n        calendarObjectInstance.alarms.push(alarmObject);\n        console.debug(alarmObject.alarmComponent.toICALJs().toString());\n      }\n    },\n    /**\n     *\n     * @param {object} data The destructuring object\n     * @param {object} data.calendarObjectInstance The calendarObjectInstance object\n     * @param {object} data.alarm The alarm object\n     */\n    removeAlarmFromCalendarObjectInstance(_ref46) {\n      let {\n        calendarObjectInstance,\n        alarm\n      } = _ref46;\n      if (alarm.alarmComponent) {\n        calendarObjectInstance.eventComponent.removeAlarm(alarm.alarmComponent);\n        const index = calendarObjectInstance.alarms.indexOf(alarm);\n        if (index !== -1) {\n          calendarObjectInstance.alarms.splice(index, 1);\n        }\n      }\n    },\n    /**\n     * @deprecated\n     * @param calendarObjectInstance.calendarObjectInstance\n     * @param calendarObjectInstance\n     * @param calendarObjectInstance.sharedData\n     * @param sharedData\n     */\n    addAttachmentBySharedData(_ref47) {\n      let {\n        calendarObjectInstance,\n        sharedData\n      } = _ref47;\n      const attachment = AttachmentProperty.fromLink(sharedData.url);\n      const fileName = sharedData.fileName;\n\n      // hot-fix needed temporary, because calendar-js has no fileName get-setter\n      const parameterFileName = new Parameter('FILENAME', fileName);\n      // custom has-preview parameter from dav file\n      const xNcHasPreview = new Parameter('X-NC-HAS-PREVIEW', sharedData['has-preview'].toString());\n      // custom file id parameter from dav file\n      const xNcFileId = new Parameter('X-NC-FILE-ID', sharedData.fileid.toString());\n      // custom share-types parameter from dav file\n      const xNcSharedTypes = new Parameter('X-NC-SHARED-TYPES', sharedData['share-types']['share-type'] ? sharedData['share-types']['share-type'].join(',') : '');\n      attachment.setParameter(parameterFileName);\n      attachment.setParameter(xNcFileId);\n      attachment.setParameter(xNcHasPreview);\n      attachment.setParameter(xNcSharedTypes);\n      attachment.isNew = true;\n      attachment.shareTypes = sharedData['share-types']['share-type'] ? sharedData['share-types']['share-type'].join(',') : '';\n      attachment.fileName = fileName;\n      attachment.xNcFileId = sharedData.fileid;\n      attachment.xNcHasPreview = sharedData['has-preview'];\n      attachment.formatType = sharedData.getcontenttype;\n      attachment.uri = sharedData.url ? sharedData.url : generateUrl(`/f/${sharedData.fileid}`);\n      calendarObjectInstance.eventComponent.addProperty(attachment);\n      calendarObjectInstance.attachments.push(attachment);\n    },\n    /**\n     *\n     * @param calendarObjectInstance.calendarObjectInstance\n     * @param calendarObjectInstance\n     * @param sharedData\n     * @param calendarObjectInstance.sharedData\n     */\n    addAttachmentWithProperty(_ref48) {\n      let {\n        calendarObjectInstance,\n        sharedData\n      } = _ref48;\n      const attachment = {};\n      const fileName = sharedData.fileName;\n      attachment.isNew = true;\n      attachment.shareTypes = (typeof sharedData?.['share-types']?.['share-type'] === 'number' ? sharedData?.['share-types']?.['share-type']?.toString() : sharedData?.['share-types']?.['share-type']?.join(',')) ?? null;\n      attachment.fileName = fileName;\n      attachment.xNcFileId = sharedData.fileid;\n      attachment.xNcHasPreview = sharedData['has-preview'];\n      attachment.formatType = sharedData.getcontenttype;\n      attachment.uri = sharedData.url ? sharedData.url : generateUrl(`/f/${sharedData.fileid}`);\n      const attachmentProperty = AttachmentProperty.fromLink(attachment.uri, attachment.formatType);\n      const parameterFileName = new Parameter('FILENAME', fileName);\n      const xNcHasPreview = new Parameter('X-NC-HAS-PREVIEW', attachment.xNcHasPreview.toString());\n      const xNcFileId = new Parameter('X-NC-FILE-ID', attachment.xNcFileId.toString());\n      // ADD X-NC-SHARED-TYPES only if sharet-type not empty\n      if (attachment.shareTypes !== null) {\n        const xNcSharedTypes = new Parameter('X-NC-SHARED-TYPES', attachment.shareTypes);\n        attachmentProperty.setParameter(xNcSharedTypes);\n      }\n      attachmentProperty.setParameter(parameterFileName);\n      attachmentProperty.setParameter(xNcFileId);\n      attachmentProperty.setParameter(xNcHasPreview);\n      attachmentProperty.uri = attachment.uri;\n      attachment.attachmentProperty = attachmentProperty;\n      calendarObjectInstance.eventComponent.addProperty(attachmentProperty);\n      calendarObjectInstance.attachments.push(attachment);\n    },\n    /**\n     *\n     * @param {object} data The destructuring object\n     * @param {object} data.calendarObjectInstance The calendarObjectInstance object\n     * @param {object} data.attachment The attachment object\n     */\n    deleteAttachment(_ref49) {\n      let {\n        calendarObjectInstance,\n        attachment\n      } = _ref49;\n      try {\n        const index = calendarObjectInstance.attachments.indexOf(attachment);\n        if (index !== -1) {\n          calendarObjectInstance.attachments.splice(index, 1);\n        }\n        calendarObjectInstance.eventComponent.removeAttachment(attachment.attachmentProperty);\n      } catch {}\n    },\n    // start of actions\n    /**\n     * Returns the closest existing recurrence-id of a calendar-object\n     * close to the given date.\n     * This is either the next occurrence in the future or\n     * in case there are no more future occurrences the closest\n     * occurrence in the past\n     *\n     * @param {object} data The destructuring object\n     * @param {string} data.objectId The objectId of the calendar-object to edit\n     * @param {Date} data.closeToDate The date to get a close occurrence to\n     * @return {Promise<number>}\n     */\n    async resolveClosestRecurrenceIdForCalendarObject(_ref50) {\n      let {\n        objectId,\n        closeToDate\n      } = _ref50;\n      const calendarsStore = useCalendarsStore();\n      const calendarObject = await calendarsStore.getEventByObjectId({\n        objectId\n      });\n      const iterator = calendarObject.calendarComponent.getVObjectIterator();\n      const firstVObject = iterator.next().value;\n      const d = DateTimeValue.fromJSDate(closeToDate, true);\n      return firstVObject.recurrenceManager.getClosestOccurrence(d).getReferenceRecurrenceId().unixTime;\n    },\n    /**\n     * Gets the calendar-object and calendar-object-instance\n     * for a given objectId and recurrenceId.\n     *\n     * If the recurrenceId does not represent a valid instance,\n     * an error will be thrown.\n     *\n     * @param {object} data The destructuring object\n     * @param {string} data.objectId The objectId of the calendar-object to edit\n     * @param {number} data.recurrenceId The recurrence-id to edit\n     * @return {Promise<{calendarObject: object, calendarObjectInstance: object}>}\n     */\n    async getCalendarObjectInstanceByObjectIdAndRecurrenceId(_ref51) {\n      let {\n        objectId,\n        recurrenceId\n      } = _ref51;\n      const calendarsStore = useCalendarsStore();\n      if (this.existingEvent.objectId === objectId && this.existingEvent.recurrenceId === recurrenceId) {\n        return Promise.resolve({\n          calendarObject: this.calendarObject,\n          calendarObjectInstance: this.calendarObjectInstance\n        });\n      }\n      const recurrenceIdDate = new Date(recurrenceId * 1000);\n      const calendarObject = await calendarsStore.getEventByObjectId({\n        objectId\n      });\n      const eventComponent = getObjectAtRecurrenceId(calendarObject, recurrenceIdDate);\n      if (eventComponent === null) {\n        throw new Error('Not a valid recurrence-id');\n      }\n      const calendarObjectInstance = mapEventComponentToEventObject(eventComponent);\n      this.setCalendarObjectInstanceForExistingEvent({\n        calendarObject,\n        calendarObjectInstance,\n        objectId,\n        recurrenceId\n      });\n      return {\n        calendarObject,\n        calendarObjectInstance\n      };\n    },\n    /**\n     * Gets the new calendar-object-instance.\n     *\n     * @param {object} data The destructuring object\n     * @param {boolean} data.isAllDay Whether or not the new event is supposed to be all-day\n     * @param {number} data.start The start of the new event (unixtime)\n     * @param {number} data.end The end of the new event (unixtime)\n     * @param {string} data.timezoneId The timezoneId of the new event\n     * @return {Promise<{calendarObject: object, calendarObjectInstance: object}>}\n     */\n    async getCalendarObjectInstanceForNewEvent(_ref52) {\n      let {\n        isAllDay,\n        start,\n        end,\n        timezoneId\n      } = _ref52;\n      const calendarObjectsStore = useCalendarObjectsStore();\n      const settingsStore = useSettingsStore();\n      if (this.isNew === true) {\n        return Promise.resolve({\n          calendarObject: this.calendarObject,\n          calendarObjectInstance: this.calendarObjectInstance\n        });\n      }\n      const calendarObject = await calendarObjectsStore.createNewEvent({\n        start,\n        end,\n        isAllDay,\n        timezoneId\n      });\n      const startDate = new Date(start * 1000);\n      const eventComponent = getObjectAtRecurrenceId(calendarObject, startDate);\n      const calendarObjectInstance = mapEventComponentToEventObject(eventComponent);\n\n      // Add an alarm if the user set a default one in the settings. If\n      // not, defaultReminder will not be a number (rather the string \"none\").\n      const defaultReminder = parseInt(settingsStore.defaultReminder);\n      if (!isNaN(defaultReminder)) {\n        this.addAlarmToCalendarObjectInstance({\n          calendarObjectInstance,\n          type: 'DISPLAY',\n          totalSeconds: defaultReminder\n        });\n        logger.debug(`Added defaultReminder (${defaultReminder}s) to newly created event`);\n      }\n\n      // Add default status\n      const rfcProps = getRFCProperties();\n      const status = rfcProps.status.defaultValue;\n      calendarObjectInstance.eventComponent.status = status;\n      calendarObjectInstance.status = status;\n      this.setCalendarObjectInstanceForNewEvent({\n        calendarObject,\n        calendarObjectInstance\n      });\n      return {\n        calendarObject,\n        calendarObjectInstance\n      };\n    },\n    /**\n     * Updates the existing calendar-object-instance.\n     *\n     * @param {object} data The destructuring object\n     * @param {boolean} data.isAllDay Whether or not the new event is supposed to be all-day\n     * @param {number} data.start The start of the new event (unixtime)\n     * @param {number} data.end The end of the new event (unixtime)\n     * @param {string} data.timezoneId The timezoneId of the new event\n     * @return {Promise<{calendarObject: object, calendarObjectInstance: object}>}\n     */\n    async updateCalendarObjectInstanceForNewEvent(_ref53) {\n      let {\n        isAllDay,\n        start,\n        end,\n        timezoneId\n      } = _ref53;\n      const calendarObjectsStore = useCalendarObjectsStore();\n      await calendarObjectsStore.updateTimeOfNewEvent({\n        calendarObjectInstance: this.calendarObjectInstance,\n        start,\n        end,\n        isAllDay,\n        timezoneId\n      });\n      this.setCalendarObjectInstanceForNewEvent({\n        calendarObject: this.calendarObject,\n        calendarObjectInstance: this.calendarObjectInstance\n      });\n      return {\n        calendarObject: this.calendarObject,\n        calendarObjectInstance: this.calendarObjectInstance\n      };\n    },\n    /**\n     * Saves changes made to a single calendar-object-instance\n     *\n     * @param {object} data The destructuring object\n     * @param {boolean} data.thisAndAllFuture Whether or not to save changes for all future occurrences or just this one\n     * @param {string} data.calendarId The new calendar-id to store it in\n     * @return {Promise<void>}\n     */\n    async saveCalendarObjectInstance(_ref54) {\n      let {\n        thisAndAllFuture,\n        calendarId\n      } = _ref54;\n      const calendarObjectsStore = useCalendarObjectsStore();\n      const eventComponent = this.calendarObjectInstance.eventComponent;\n      const calendarObject = this.calendarObject;\n      updateAlarms(eventComponent);\n      await updateTalkParticipants(eventComponent);\n      if (eventComponent.isDirty()) {\n        const isForkedItem = eventComponent.primaryItem !== null;\n        let original = null;\n        let fork = null;\n\n        // We check if two things apply:\n        // - primaryItem !== null -> Is this a fork or not?\n        // - eventComponent.canCreateRecurrenceExceptions() - Can we create a recurrence-exception for this item\n        if (isForkedItem && eventComponent.canCreateRecurrenceExceptions()) {\n          [original, fork] = eventComponent.createRecurrenceException(thisAndAllFuture);\n        }\n        await calendarObjectsStore.updateCalendarObject({\n          calendarObject\n        });\n        if (original !== null && fork !== null && original.root !== fork.root) {\n          await calendarObjectsStore.createCalendarObjectFromFork({\n            eventComponent: fork,\n            calendarId\n          });\n        }\n      }\n      if (calendarId !== this.calendarObject.calendarId) {\n        await calendarObjectsStore.moveCalendarObject({\n          calendarObject,\n          newCalendarId: calendarId\n        });\n      }\n    },\n    /**\n     * Duplicate calendar-object-instance\n     *\n     * @return {Promise<void>}\n     */\n    async duplicateCalendarObjectInstance() {\n      const calendarObjectsStore = useCalendarObjectsStore();\n      const oldCalendarObjectInstance = this.calendarObjectInstance;\n      const oldEventComponent = oldCalendarObjectInstance.eventComponent;\n      const startDate = oldEventComponent.startDate.getInUTC();\n      const endDate = oldEventComponent.endDate.getInUTC();\n      const calendarObject = await calendarObjectsStore.createNewEvent({\n        start: startDate.unixTime,\n        end: endDate.unixTime,\n        timezoneId: oldEventComponent.startDate.timezoneId,\n        isAllDay: oldEventComponent.isAllDay()\n      });\n      const eventComponent = getObjectAtRecurrenceId(calendarObject, startDate.jsDate);\n      copyCalendarObjectInstanceIntoEventComponent(oldCalendarObjectInstance, eventComponent, true);\n      const calendarObjectInstance = mapEventComponentToEventObject(eventComponent);\n      await this.setCalendarObjectInstanceForNewEvent({\n        calendarObject,\n        calendarObjectInstance\n      });\n    },\n    /**\n     * Deletes a calendar-object-instance\n     *\n     * @param {object} data The destructuring object\n     * @param {boolean} data.thisAndAllFuture Whether or not to delete all future occurrences or just this one\n     * @return {Promise<void>}\n     */\n    async deleteCalendarObjectInstance(_ref55) {\n      let {\n        thisAndAllFuture\n      } = _ref55;\n      const calendarObjectsStore = useCalendarObjectsStore();\n      const eventComponent = this.calendarObjectInstance.eventComponent;\n      const isRecurrenceSetEmpty = eventComponent.removeThisOccurrence(thisAndAllFuture);\n      const calendarObject = this.calendarObject;\n      if (isRecurrenceSetEmpty) {\n        await calendarObjectsStore.deleteCalendarObject({\n          calendarObject\n        });\n      } else {\n        await calendarObjectsStore.updateCalendarObject({\n          calendarObject\n        });\n      }\n    },\n    /**\n     *\n     * @param {object} data The destructuring object for data\n     * @param {object} data.calendarObjectInstance The calendarObjectInstance object\n     * @param {Date} data.startDate The new start-date\n     * @param {boolean} data.onlyTime Only update time\n     * @param data.changeEndDate\n     */\n    changeStartDate(_ref56) {\n      let {\n        calendarObjectInstance,\n        startDate,\n        onlyTime = false,\n        changeEndDate = true\n      } = _ref56;\n      if (onlyTime) {\n        startDate.setFullYear(calendarObjectInstance.startDate.getFullYear(), calendarObjectInstance.startDate.getMonth(), calendarObjectInstance.startDate.getDate());\n      }\n      const difference = startDate.getTime() - calendarObjectInstance.startDate.getTime();\n      const endDate = new Date(calendarObjectInstance.endDate.getTime() + difference);\n      this.changeStartDateMutation({\n        calendarObjectInstance,\n        startDate\n      });\n      if (changeEndDate) {\n        this.changeEndDateMutation({\n          calendarObjectInstance,\n          endDate\n        });\n      }\n    },\n    /**\n     * Change the timezone of the event's start\n     *\n     * @param {object} data The destructuring object for data\n     * @param {object} data.calendarObjectInstance The calendarObjectInstance object\n     * @param {string} data.startTimezone New timezone to set for start\n     */\n    changeStartTimezone(_ref57) {\n      let {\n        calendarObjectInstance,\n        startTimezone\n      } = _ref57;\n      this.changeStartTimezoneMutation({\n        calendarObjectInstance,\n        startTimezone\n      });\n\n      // Simulate a change of the start time to trigger the comparison\n      // of start and end and trigger an update of end if necessary\n      this.changeStartDateMutation({\n        calendarObjectInstance,\n        startDate: calendarObjectInstance.startDate\n      });\n    },\n    /**\n     *\n     * @param {object} data The destructuring object for data\n     * @param {object} data.calendarObjectInstance The calendarObjectInstance object\n     * @param {Date} data.endDate The new end-date\n     * @param {boolean} data.onlyTime Only update time\n     */\n    changeEndDate(_ref58) {\n      let {\n        calendarObjectInstance,\n        endDate,\n        onlyTime = false\n      } = _ref58;\n      if (onlyTime) {\n        endDate.setFullYear(calendarObjectInstance.endDate.getFullYear(), calendarObjectInstance.endDate.getMonth(), calendarObjectInstance.endDate.getDate());\n      }\n      this.changeEndDateMutation({\n        calendarObjectInstance,\n        endDate\n      });\n    },\n    /**\n     * Change the timezone of the event's end\n     *\n     * @param {object} data The destructuring object for data\n     * @param {object} data.calendarObjectInstance The calendarObjectInstance object\n     * @param {string} data.endTimezone New timezone to set for end\n     */\n    changeEndTimezone(_ref59) {\n      let {\n        calendarObjectInstance,\n        endTimezone\n      } = _ref59;\n      this.changeEndTimezoneMutation({\n        calendarObjectInstance,\n        endTimezone\n      });\n\n      // Simulate a change of the end time to trigger the comparison\n      // of start and end and trigger an update of start if necessary\n      this.changeEndDateMutation({\n        calendarObjectInstance,\n        endDate: calendarObjectInstance.endDate\n      });\n    },\n    /**\n     *\n     * @param {object} data The destructuring object for data\n     * @param {object} data.calendarObjectInstance The calendarObjectInstance object\n     * @param {object} data.recurrenceRule The recurrenceRule object to modify\n     * @param {string} data.frequency The new frequency to set\n     */\n    changeRecurrenceFrequency(_ref60) {\n      let {\n        calendarObjectInstance,\n        recurrenceRule,\n        frequency\n      } = _ref60;\n      console.debug(calendarObjectInstance);\n      console.debug(recurrenceRule);\n      console.debug(frequency);\n      if (recurrenceRule.frequency === 'NONE' && frequency !== 'NONE') {\n        // Add a new recurrence-rule\n        const recurrenceValue = RecurValue.fromData({});\n        const recurrenceProperty = new Property('RRULE', recurrenceValue);\n        calendarObjectInstance.eventComponent.addProperty(recurrenceProperty);\n        calendarObjectInstance.recurrenceRule.recurrenceRuleValue = recurrenceValue;\n        this.resetRecurrenceByParts({\n          recurrenceRule\n        });\n        this.changeRecurrenceFrequencyMutation({\n          calendarObjectInstance,\n          recurrenceRule: calendarObjectInstance.recurrenceRule,\n          frequency\n        });\n        this.changeRecurrenceInterval({\n          calendarObjectInstance,\n          recurrenceRule: calendarObjectInstance.recurrenceRule,\n          interval: 1\n        });\n        this.changeRecurrenceToInfinite({\n          recurrenceRule: calendarObjectInstance.recurrenceRule\n        });\n        this.setDefaultRecurrenceByParts({\n          calendarObjectInstance,\n          recurrenceRule,\n          frequency\n        });\n        console.debug(`changed from none to ${frequency}`);\n      } else if (recurrenceRule.frequency !== 'NONE' && frequency === 'NONE') {\n        console.debug('calling removeRecurrenceRuleFromCalendarObjectInstance');\n        // Remove the recurrence-rule\n        if (recurrenceRule.recurrenceRuleValue) {\n          calendarObjectInstance.eventComponent.deleteAllProperties('RRULE');\n          /// TODO calendarObjectInstance.recurrenceRule = getDefaultEventObject().recurrenceRule\n          Vue.set(calendarObjectInstance, 'recurrenceRule', getDefaultEventObject().recurrenceRule);\n          console.debug(calendarObjectInstance);\n          console.debug(recurrenceRule);\n        }\n      } else {\n        // Change frequency of existing recurrence-rule\n        this.resetRecurrenceByParts({\n          recurrenceRule\n        });\n        this.changeRecurrenceFrequencyMutation({\n          calendarObjectInstance,\n          recurrenceRule: calendarObjectInstance.recurrenceRule,\n          frequency\n        });\n        this.setDefaultRecurrenceByParts({\n          calendarObjectInstance,\n          recurrenceRule,\n          frequency\n        });\n      }\n    },\n    /**\n     *\n     * @param {object} data The destructuring object for data\n     * @param {object} data.calendarObjectInstance The calendarObjectInstance object\n     * @param {object} data.recurrenceRule The recurrenceRule object to modify\n     * @param {string} data.frequency The new frequency to set\n     */\n    setDefaultRecurrenceByParts(_ref61) {\n      let {\n        calendarObjectInstance,\n        recurrenceRule,\n        frequency\n      } = _ref61;\n      switch (frequency) {\n        case 'WEEKLY':\n          if (recurrenceRule.recurrenceRuleValue) {\n            const byDay = getWeekDayFromDate(calendarObjectInstance.startDate);\n            recurrenceRule.recurrenceRuleValue.setComponent('BYDAY', [byDay]);\n            recurrenceRule.byDay.push(byDay);\n            console.debug(recurrenceRule.recurrenceRuleValue._innerValue.toString());\n          }\n          break;\n        case 'MONTHLY':\n          if (recurrenceRule.recurrenceRuleValue) {\n            const byMonthDay = calendarObjectInstance.startDate.getDate().toString();\n            recurrenceRule.recurrenceRuleValue.setComponent('BYMONTHDAY', [byMonthDay]);\n            recurrenceRule.byMonthDay.push(byMonthDay);\n            console.debug(recurrenceRule.recurrenceRuleValue._innerValue.toString());\n          }\n          break;\n        case 'YEARLY':\n          if (recurrenceRule.recurrenceRuleValue) {\n            const byMonth = calendarObjectInstance.startDate.getMonth() + 1; // Javascript months are zero-based\n            recurrenceRule.recurrenceRuleValue.setComponent('BYMONTH', [byMonth]);\n            recurrenceRule.byMonth.push(byMonth);\n            console.debug(recurrenceRule.recurrenceRuleValue._innerValue.toString());\n          }\n          break;\n      }\n    },\n    /**\n     *\n     * @param {object} data The destructuring object for data\n     * @param {object} data.calendarObjectInstance The calendarObjectInstance object\n     * @param {object} data.recurrenceRule The recurrenceRule object to modify\n     */\n    changeMonthlyRecurrenceFromByDayToBySetPosition(_ref62) {\n      let {\n        calendarObjectInstance,\n        recurrenceRule\n      } = _ref62;\n      console.debug('changeMonthlyRecurrenceFromByDayToBySetPosition');\n      this.resetRecurrenceByParts({\n        recurrenceRule\n      });\n      this.setDefaultRecurrenceByPartsForMonthlyBySetPosition({\n        calendarObjectInstance,\n        recurrenceRule\n      });\n    },\n    /**\n     *\n     * @param {object} data The destructuring object for data\n     * @param {object} data.calendarObjectInstance The calendarObjectInstance object\n     * @param {object} data.recurrenceRule The recurrenceRule object to modify\n     */\n    changeMonthlyRecurrenceFromBySetPositionToByDay(_ref63) {\n      let {\n        calendarObjectInstance,\n        recurrenceRule\n      } = _ref63;\n      console.debug('changeMonthlyRecurrenceFromBySetPositionToByDay');\n      this.resetRecurrenceByParts({\n        recurrenceRule\n      });\n      if (recurrenceRule.recurrenceRuleValue) {\n        const byMonthDay = calendarObjectInstance.startDate.getDate().toString();\n        recurrenceRule.recurrenceRuleValue.setComponent('BYMONTHDAY', [byMonthDay]);\n        recurrenceRule.byMonthDay.push(byMonthDay);\n        console.debug(recurrenceRule.recurrenceRuleValue._innerValue.toString());\n      }\n    },\n    /**\n     *\n     * @param {object} data The destructuring object for data\n     * @param {object} data.calendarObjectInstance The calendarObjectInstance object\n     * @param {object} data.recurrenceRule The recurrenceRule object to modify\n     */\n    enableYearlyRecurrenceBySetPosition(_ref64) {\n      let {\n        calendarObjectInstance,\n        recurrenceRule\n      } = _ref64;\n      this.setDefaultRecurrenceByPartsForMonthlyBySetPosition({\n        calendarObjectInstance,\n        recurrenceRule\n      });\n    },\n    /**\n     *\n     * @param {object} data The destructuring object for data\n     * @param {object} data.recurrenceRule The recurrenceRule object to modify\n     */\n    disableYearlyRecurrenceBySetPosition(_ref65) {\n      let {\n        recurrenceRule\n      } = _ref65;\n      this.changeRecurrenceByDay({\n        recurrenceRule,\n        byDay: []\n      });\n      if (recurrenceRule.recurrenceRuleValue) {\n        recurrenceRule.recurrenceRuleValue.setComponent('BYSETPOS', []);\n        /// TODO recurrenceRule.bySetPosition = null\n        Vue.set(recurrenceRule, 'bySetPosition', null);\n        console.debug(recurrenceRule.recurrenceRuleValue._innerValue.toString());\n      }\n    },\n    /**\n     *\n     * @param {object} data The destructuring object for data\n     * @param {object} data.calendarObjectInstance The calendarObjectInstance object\n     * @param {object} data.recurrenceRule The recurrenceRule object to modify\n     */\n    enableRecurrenceLimitByUntil(_ref66) {\n      let {\n        calendarObjectInstance,\n        recurrenceRule\n      } = _ref66;\n      let until;\n      switch (recurrenceRule.frequency) {\n        // Defaults to 7 days\n        case 'DAILY':\n          until = new Date(calendarObjectInstance.startDate.getTime() + 7 * 24 * 60 * 60 * 1000);\n          break;\n\n        // Defaults to 4 weeks\n        case 'WEEKLY':\n          until = new Date(calendarObjectInstance.startDate.getTime() + 4 * 7 * 24 * 60 * 60 * 1000);\n          break;\n\n        // Defaults to 10 year\n        case 'YEARLY':\n          until = new Date(calendarObjectInstance.startDate.getFullYear() + 10, calendarObjectInstance.startDate.getMonth(), calendarObjectInstance.startDate.getDate(), 23, 59, 59);\n          break;\n\n        // Defaults to 12 months\n        case 'MONTHLY':\n        default:\n          until = new Date(calendarObjectInstance.startDate.getFullYear() + 1, calendarObjectInstance.startDate.getMonth(), calendarObjectInstance.startDate.getDate(), 23, 59, 59);\n          break;\n      }\n      this.changeRecurrenceToInfinite({\n        recurrenceRule\n      });\n      this.changeRecurrenceUntil({\n        calendarObjectInstance,\n        recurrenceRule,\n        until\n      });\n    },\n    /**\n     *\n     * @param {object} data The destructuring object for data\n     * @param {object} data.recurrenceRule The recurrenceRule object to modify\n     */\n    enableRecurrenceLimitByCount(_ref67) {\n      let {\n        recurrenceRule\n      } = _ref67;\n      this.changeRecurrenceToInfinite({\n        recurrenceRule\n      });\n      this.changeRecurrenceCount({\n        recurrenceRule,\n        count: 2 // Default value is two\n      });\n    },\n    changeAlarmAmountTimed(_ref68) {\n      let {\n        alarm,\n        amount\n      } = _ref68;\n      if (alarm.alarmComponent) {\n        alarm.alarmComponent.trigger.value.totalSeconds = getTotalSecondsFromAmountAndUnitForTimedEvents(amount, alarm.relativeUnitTimed, alarm.relativeIsBefore);\n        alarm.relativeAmountTimed = amount;\n        alarm.relativeTrigger = alarm.alarmComponent.trigger.value.totalSeconds;\n        console.debug(alarm.alarmComponent.toICALJs().toString());\n      }\n      this.updateAlarmAllDayParts({\n        alarm\n      });\n    },\n    changeAlarmUnitTimed(_ref69) {\n      let {\n        alarm,\n        unit\n      } = _ref69;\n      if (alarm.alarmComponent) {\n        alarm.alarmComponent.trigger.value.totalSeconds = getTotalSecondsFromAmountAndUnitForTimedEvents(alarm.relativeAmountTimed, unit, alarm.relativeIsBefore);\n        alarm.relativeUnitTimed = unit;\n        alarm.relativeTrigger = alarm.alarmComponent.trigger.value.totalSeconds;\n        console.debug(alarm.alarmComponent.toICALJs().toString());\n      }\n      this.updateAlarmAllDayParts({\n        alarm\n      });\n    },\n    changeAlarmAmountAllDay(_ref70) {\n      let {\n        alarm,\n        amount\n      } = _ref70;\n      if (alarm.alarmComponent) {\n        alarm.alarmComponent.trigger.value.totalSeconds = getTotalSecondsFromAmountHourMinutesAndUnitForAllDayEvents(amount, alarm.relativeHoursAllDay, alarm.relativeMinutesAllDay, alarm.relativeUnitAllDay);\n        alarm.relativeAmountAllDay = amount;\n        alarm.relativeTrigger = alarm.alarmComponent.trigger.value.totalSeconds;\n        console.debug(alarm.alarmComponent.toICALJs().toString());\n      }\n      this.updateAlarmTimedParts({\n        alarm\n      });\n    },\n    changeAlarmUnitAllDay(_ref71) {\n      let {\n        alarm,\n        unit\n      } = _ref71;\n      if (alarm.alarmComponent) {\n        alarm.alarmComponent.trigger.value.totalSeconds = getTotalSecondsFromAmountHourMinutesAndUnitForAllDayEvents(alarm.relativeAmountAllDay, alarm.relativeHoursAllDay, alarm.relativeMinutesAllDay, unit);\n        alarm.relativeUnitAllDay = unit;\n        alarm.relativeTrigger = alarm.alarmComponent.trigger.value.totalSeconds;\n        console.debug(alarm.alarmComponent.toICALJs().toString());\n      }\n      this.updateAlarmTimedParts({\n        alarm\n      });\n    },\n    changeAlarmHoursMinutesAllDay(_ref72) {\n      let {\n        alarm,\n        hours,\n        minutes\n      } = _ref72;\n      if (alarm.alarmComponent) {\n        alarm.alarmComponent.trigger.value.totalSeconds = getTotalSecondsFromAmountHourMinutesAndUnitForAllDayEvents(alarm.relativeAmountAllDay, hours, minutes, alarm.relativeUnitAllDay);\n        alarm.relativeHoursAllDay = hours;\n        alarm.relativeMinutesAllDay = minutes;\n        alarm.relativeTrigger = alarm.alarmComponent.trigger.value.totalSeconds;\n        console.debug(alarm.alarmComponent.toICALJs().toString());\n      }\n      this.updateAlarmTimedParts({\n        alarm\n      });\n    },\n    changeAlarmFromRelativeToAbsolute(_ref73) {\n      let {\n        calendarObjectInstance,\n        alarm\n      } = _ref73;\n      if (alarm.alarmComponent) {\n        const triggerDateTime = calendarObjectInstance.eventComponent.startDate.clone();\n        // The trigger of an alarm must be DATE-TIME, startDate can be either.\n        triggerDateTime.isDate = false;\n        triggerDateTime.addDuration(alarm.alarmComponent.trigger.value);\n        alarm.alarmComponent.setTriggerFromAbsolute(triggerDateTime);\n        alarm.absoluteDate = getDateFromDateTimeValue(alarm.alarmComponent.trigger.value);\n        alarm.absoluteTimezoneId = alarm.alarmComponent.trigger.value.timezoneId;\n        console.debug(alarm.alarmComponent.toICALJs().toString());\n      }\n      alarm.relativeIsBefore = null;\n      alarm.relativeIsRelatedToStart = null;\n      alarm.relativeUnitTimed = null;\n      alarm.relativeAmountTimed = null;\n      alarm.relativeUnitAllDay = null;\n      alarm.relativeAmountAllDay = null;\n      alarm.relativeHoursAllDay = null;\n      alarm.relativeMinutesAllDay = null;\n      alarm.relativeTrigger = null;\n    },\n    changeAlarmFromAbsoluteToRelative(_ref74) {\n      let {\n        calendarObjectInstance,\n        alarm\n      } = _ref74;\n      if (alarm.alarmComponent) {\n        const duration = alarm.alarmComponent.trigger.value.subtractDateWithTimezone(calendarObjectInstance.eventComponent.startDate);\n        alarm.alarmComponent.setTriggerFromRelative(duration);\n        alarm.relativeIsBefore = alarm.alarmComponent.trigger.value.isNegative;\n        alarm.relativeIsRelatedToStart = true;\n        alarm.relativeTrigger = duration.totalSeconds;\n      }\n      this.updateAlarmAllDayParts({\n        alarm\n      });\n      this.updateAlarmTimedParts({\n        alarm\n      });\n      alarm.absoluteDate = null;\n      alarm.absoluteTimezoneId = null;\n    },\n    toggleAllDay(_ref75) {\n      let {\n        calendarObjectInstance\n      } = _ref75;\n      const settingsStore = useSettingsStore();\n      this.toggleAllDayMutation({\n        calendarObjectInstance\n      });\n      if (!calendarObjectInstance.isAllDay) {\n        if (calendarObjectInstance.startTimezoneId === 'floating') {\n          const startTimezone = settingsStore.getResolvedTimezone;\n          this.changeStartTimezoneMutation({\n            calendarObjectInstance,\n            startTimezone\n          });\n        }\n        this.changeTimeToDefaultForTimedEvents({\n          calendarObjectInstance\n        });\n      }\n    }\n  }\n});","/**\n * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\nimport { mapCalendarJsToCalendarObject } from '../models/calendarObject.js';\nimport logger from '../utils/logger.js';\nimport { createEvent, getParserManager, DateTimeValue } from '@nextcloud/calendar-js';\nimport useFetchedTimeRangesStore from './fetchedTimeRanges.js';\nimport useCalendarsStore from './calendars.js';\nimport { defineStore } from 'pinia';\nimport useCalendarObjectInstanceStore from './calendarObjectInstance.js';\nimport Vue from 'vue';\nimport { getTimezoneManager } from '@nextcloud/timezones';\nexport default defineStore('calendarObjects', {\n  state: () => {\n    return {\n      calendarObjects: {},\n      modificationCount: 0\n    };\n  },\n  getters: {\n    /**\n     * Gets a calendar-object based on its id\n     *\n     * @param {object} state The store data\n     * @return {function({String}): CalendarObject}\n     */\n    getCalendarObjectById: state => id => state.calendarObjects[id]\n  },\n  actions: {\n    /**\n     * Moves a calendar-object to a different calendar\n     *\n     * @param {object} data destructuring object\n     * @param {CalendarObject} data.calendarObject Calendar-object to delete\n     * @param {string} data.newCalendarId Calendar-Id of calendar to move this calendar-object to\n     * @return {Promise<void>}\n     */\n    async moveCalendarObject(_ref) {\n      let {\n        calendarObject,\n        newCalendarId\n      } = _ref;\n      if (!calendarObject.existsOnServer) {\n        return;\n      }\n      const fetchedTimeRangesStore = useFetchedTimeRangesStore();\n      const calendarsStore = useCalendarsStore();\n      const oldCalendarObjectId = calendarObject.id;\n      const oldCalendarId = calendarObject.calendarId;\n      if (oldCalendarId === newCalendarId) {\n        logger.error('Old calendar Id and new calendar Id are the same, nothing to move …');\n        return;\n      }\n      const newCalendar = calendarsStore.getCalendarById(newCalendarId);\n      if (!newCalendar) {\n        logger.error('Calendar to move to not found, aborting …');\n        return;\n      }\n      await calendarObject.dav.move(newCalendar.dav);\n      // Update calendarId in calendarObject manually as it is not stored in dav\n      this.calendarObjects[calendarObject.id].calendarId = newCalendarId;\n      calendarsStore.addCalendarObjectToCalendarMutation({\n        calendar: {\n          id: newCalendarId\n        },\n        calendarObjectId: calendarObject.id\n      });\n      fetchedTimeRangesStore.addCalendarObjectIdToAllTimeRangesOfCalendar({\n        calendarId: newCalendarId,\n        calendarObjectId: calendarObject.id\n      });\n      calendarsStore.deleteCalendarObjectFromCalendarMutation({\n        calendar: {\n          id: oldCalendarId\n        },\n        calendarObjectId: oldCalendarObjectId\n      });\n      fetchedTimeRangesStore.removeCalendarObjectIdFromAllTimeRangesOfCalendar({\n        calendarId: oldCalendarId,\n        calendarObjectId: oldCalendarObjectId\n      });\n      this.modificationCount++;\n    },\n    /**\n     * Updates a calendar-object\n     *\n     * @param {object} data destructuring object\n     * @param {CalendarObject} data.calendarObject Calendar-object to delete\n     * @return {Promise<void>}\n     */\n    async updateCalendarObject(_ref2) {\n      let {\n        calendarObject\n      } = _ref2;\n      const fetchedTimeRangesStore = useFetchedTimeRangesStore();\n      const calendarsStore = useCalendarsStore();\n      if (calendarObject.existsOnServer) {\n        calendarObject.dav.data = calendarObject.calendarComponent.toICS();\n        await calendarObject.dav.update();\n        fetchedTimeRangesStore.addCalendarObjectIdToAllTimeRangesOfCalendar({\n          calendarId: calendarObject.calendarId,\n          calendarObjectId: calendarObject.id\n        });\n        this.modificationCount++;\n        return;\n\n        // TODO - catch conflicts\n      }\n      const calendar = calendarsStore.getCalendarById(calendarObject.calendarId);\n      calendarObject.dav = await calendar.dav.createVObject(calendarObject.calendarComponent.toICS());\n      calendarObject.existsOnServer = true;\n      this.updateCalendarObjectIdMutation({\n        calendarObject\n      });\n      this.appendCalendarObjectMutation({\n        calendarObject\n      });\n      calendarsStore.addCalendarObjectToCalendarMutation({\n        calendar: {\n          id: calendarObject.calendarId\n        },\n        calendarObjectId: calendarObject.id\n      });\n      fetchedTimeRangesStore.addCalendarObjectIdToAllTimeRangesOfCalendar({\n        calendarId: calendarObject.calendarId,\n        calendarObjectId: calendarObject.id\n      });\n      this.resetCalendarObjectToDavMutation({\n        calendarObject\n      });\n      this.modificationCount++;\n    },\n    /**\n     * Creates a new calendar-object from an recurrence-exception fork\n     *\n     * @param {object} data destructuring object\n     * @param {EventComponent} data.eventComponent EventComponent to store\n     * @param {string} data.calendarId The calendar-id to store it in\n     * @return {Promise<void>}\n     */\n    async createCalendarObjectFromFork(_ref3) {\n      let {\n        eventComponent,\n        calendarId\n      } = _ref3;\n      const calendarsStore = useCalendarsStore();\n      const fetchedTimeRangesStore = useFetchedTimeRangesStore();\n      const calendar = calendarsStore.getCalendarById(calendarId);\n      const calendarObject = mapCalendarJsToCalendarObject(eventComponent.root, calendar.id);\n      calendarObject.dav = await calendar.dav.createVObject(calendarObject.calendarComponent.toICS());\n      calendarObject.existsOnServer = true;\n      this.updateCalendarObjectIdMutation({\n        calendarObject\n      });\n      this.appendCalendarObjectMutation({\n        calendarObject\n      });\n      calendarsStore.addCalendarObjectToCalendarMutation({\n        calendar: {\n          id: calendarObject.calendarId\n        },\n        calendarObjectId: calendarObject.id\n      });\n      fetchedTimeRangesStore.addCalendarObjectIdToAllTimeRangesOfCalendar({\n        calendarId: calendar.id,\n        calendarObjectId: calendarObject.id\n      });\n      this.modificationCount++;\n    },\n    /**\n     * Deletes a calendar-object\n     *\n     * @param {object} data destructuring object\n     * @param {CalendarObject} data.calendarObject Calendar-object to delete\n     * @return {Promise<void>}\n     */\n    async deleteCalendarObject(_ref4) {\n      let {\n        calendarObject\n      } = _ref4;\n      const calendarsStore = useCalendarsStore();\n      const fetchedTimeRangesStore = useFetchedTimeRangesStore();\n\n      // If this calendar-object was not created on the server yet,\n      // no need to send requests to the server\n      if (calendarObject.existsOnServer) {\n        await calendarObject.dav.delete();\n      }\n\n      /// TODO: delete this.calendarObjects[calendarObject.id]\n      Vue.delete(this.calendarObjects, calendarObject.id);\n      calendarsStore.deleteCalendarObjectFromCalendarMutation({\n        calendar: {\n          id: calendarObject.calendarId\n        },\n        calendarObjectId: calendarObject.id\n      });\n      fetchedTimeRangesStore.removeCalendarObjectIdFromAnyTimeRange({\n        calendarObjectId: calendarObject.id\n      });\n      this.modificationCount++;\n    },\n    /**\n     * Creates a new calendar object based on start, end, timezone and isAllDay\n     *\n     * @param {object} data destructuring object\n     * @param {number} data.start Timestamp for start of new event\n     * @param {number} data.end Timestamp for end of new event\n     * @param {string} data.timezoneId asd\n     * @param {boolean} data.isAllDay foo\n     * @return {Promise<CalendarObject>}\n     */\n    createNewEvent(_ref5) {\n      let {\n        start,\n        end,\n        timezoneId,\n        isAllDay\n      } = _ref5;\n      const calendarsStore = useCalendarsStore();\n      const timezoneManager = getTimezoneManager();\n      const timezone = timezoneManager.getTimezoneForId(timezoneId);\n      const startDate = new Date(start * 1000);\n      const endDate = new Date(end * 1000);\n      const startDateTime = DateTimeValue.fromJSDate(startDate, true).getInTimezone(timezone);\n      const endDateTime = DateTimeValue.fromJSDate(endDate, true).getInTimezone(timezone);\n      if (isAllDay) {\n        startDateTime.isDate = true;\n        endDateTime.isDate = true;\n      }\n      const calendar = createEvent(startDateTime, endDateTime);\n      for (const vObject of calendar.getVObjectIterator()) {\n        vObject.undirtify();\n      }\n      const firstCalendar = calendarsStore.sortedCalendars[0].id;\n      return Promise.resolve(mapCalendarJsToCalendarObject(calendar, firstCalendar));\n    },\n    /**\n     * Updates the time of the new calendar object\n     *\n     * @param {object} data destructuring object\n     * @param {CalendarObject} data.calendarObjectInstance Calendar-object to\n     * @param {number} data.start Timestamp for start of new event\n     * @param {number} data.end Timestamp for end of new event\n     * @param {string} data.timezoneId asd\n     * @param {boolean} data.isAllDay foo\n     */\n    updateTimeOfNewEvent(_ref6) {\n      let {\n        calendarObjectInstance,\n        start,\n        end,\n        timezoneId,\n        isAllDay\n      } = _ref6;\n      const calendarObjectInstanceStore = useCalendarObjectInstanceStore();\n      const isDirty = calendarObjectInstanceStore.calendarObjectInstance.eventComponent.isDirty();\n      const startDate = new Date(start * 1000);\n      const endDate = new Date(end * 1000);\n      if (calendarObjectInstance.isAllDay !== isAllDay) {\n        calendarObjectInstanceStore.toggleAllDayMutation({\n          calendarObjectInstance\n        });\n      }\n      calendarObjectInstanceStore.changeStartTimezone({\n        calendarObjectInstance,\n        startTimezone: timezoneId\n      });\n      calendarObjectInstanceStore.changeEndTimezone({\n        calendarObjectInstance,\n        endTimezone: timezoneId\n      });\n      calendarObjectInstanceStore.changeStartDateMutation({\n        calendarObjectInstance,\n        startDate\n      });\n      if (isAllDay) {\n        // The full-calendar end date is exclusive, but the end-date\n        // that changeEndDate expects is inclusive, so we have to deduct one day.\n        calendarObjectInstanceStore.changeEndDateMutation({\n          calendarObjectInstance,\n          endDate: new Date(endDate.getTime() - 24 * 60 * 60 * 1000)\n        });\n      } else {\n        calendarObjectInstanceStore.changeEndDateMutation({\n          calendarObjectInstance,\n          endDate\n        });\n      }\n      if (!isDirty) {\n        calendarObjectInstance.eventComponent.undirtify();\n      }\n    },\n    /**\n     * Adds an array of calendar-objects to the store or update them if they already exist\n     *\n     * @param {object} data The destructuring object\n     * @param {object[]} data.calendarObjects Calendar-objects to add\n     */\n    appendOrUpdateCalendarObjectsMutation(_ref7) {\n      let {\n        calendarObjects = []\n      } = _ref7;\n      for (const calendarObject of calendarObjects) {\n        /// TODO this.calendarObjects[calendarObject.id] = calendarObject\n        Vue.set(this.calendarObjects, calendarObject.id, calendarObject);\n      }\n    },\n    /**\n     * Adds one calendar-object to the store\n     *\n     * @param {object} data The destructuring object\n     * @param {object} data.calendarObject Calendar-object to add\n     */\n    appendCalendarObjectMutation(_ref8) {\n      let {\n        calendarObject\n      } = _ref8;\n      if (!this.calendarObjects[calendarObject.id]) {\n        /// TODO this.calendarObjects[calendarObject.id] = calendarObject\n        Vue.set(this.calendarObjects, calendarObject.id, calendarObject);\n      }\n    },\n    /**\n     * Updates a calendar-object id\n     *\n     * @param {object} data The destructuring object\n     * @param {object} data.calendarObject Calendar-object to update\n     */\n    updateCalendarObjectIdMutation(_ref9) {\n      let {\n        calendarObject\n      } = _ref9;\n      if (calendarObject.dav === null) {\n        calendarObject.id = null;\n      } else {\n        calendarObject.id = btoa(calendarObject.dav.url);\n      }\n    },\n    /**\n     * Resets a calendar-object to its original server state\n     *\n     * @param {object} data The destructuring object\n     * @param {object} data.calendarObject Calendar-object to reset\n     */\n    resetCalendarObjectToDavMutation(_ref10) {\n      let {\n        calendarObject\n      } = _ref10;\n      calendarObject = this.calendarObjects[calendarObject.id];\n\n      // If this object does not exist on the server yet, there is nothing to do\n      if (!calendarObject || !calendarObject.existsOnServer) {\n        return;\n      }\n      const parserManager = getParserManager();\n      const parser = parserManager.getParserForFileType('text/calendar');\n      parser.parse(calendarObject.dav.data);\n      const itemIterator = parser.getItemIterator();\n      const firstVCalendar = itemIterator.next().value;\n      if (firstVCalendar) {\n        calendarObject.calendarComponent = firstVCalendar;\n      }\n    }\n  }\n});","/**\n * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\nimport { createCalendar, createSubscription, findAll, findAllDeletedCalendars, findPublicCalendarsByTokens } from '../services/caldavService.js';\nimport { mapCDavObjectToCalendarObject } from '../models/calendarObject.js';\nimport { dateFactory, getUnixTimestampFromDate } from '../utils/date.js';\nimport { getDefaultCalendarObject, mapDavCollectionToCalendar } from '../models/calendar.js';\nimport pLimit from 'p-limit';\nimport { uidToHexColor } from '../utils/color.js';\nimport { translate as t } from '@nextcloud/l10n';\nimport getTimezoneManager from '../services/timezoneDataProviderService.js';\nimport { CalendarComponent, TimezoneComponent } from '@nextcloud/calendar-js';\nimport { Timezone } from '@nextcloud/timezones';\nimport { CALDAV_BIRTHDAY_CALENDAR, IMPORT_STAGE_IMPORTING, IMPORT_STAGE_PROCESSING } from '../models/consts.js';\nimport { showError } from '@nextcloud/dialogs';\nimport useImportStateStore from './importState.js';\nimport useImportFilesStore from './importFiles.js';\nimport useSettingsStore from './settings.js';\nimport useFetchedTimeRangesStore from './fetchedTimeRanges.js';\nimport usePrincipalsStore from './principals.js';\nimport useCalendarObjectsStore from './calendarObjects.js';\nimport { defineStore } from 'pinia';\nimport Vue from 'vue';\nexport default defineStore('calendars', {\n  state: () => {\n    return {\n      calendars: [],\n      trashBin: undefined,\n      scheduleInbox: undefined,\n      deletedCalendars: [],\n      deletedCalendarObjects: [],\n      calendarsById: {},\n      initialCalendarsLoaded: false,\n      editCalendarModal: undefined,\n      syncTokens: new Map()\n    };\n  },\n  getters: {\n    /**\n     * List of sorted calendars and subscriptions\n     *\n     * @param {object} state the store data\n     * @param {object} store the store\n     * @return {Array}\n     */\n    sortedCalendarsSubscriptions(state) {\n      const settingsStore = useSettingsStore();\n      return state.calendars.filter(calendar => calendar.supportsEvents || settingsStore.showTasks && calendar.supportsTasks).sort((a, b) => a.order - b.order);\n    },\n    /**\n     * List of sorted calendars\n     *\n     * @param {object} state the store data\n     * @return {Array}\n     */\n    sortedCalendars(state) {\n      return state.calendars.filter(calendar => calendar.supportsEvents).filter(calendar => !calendar.readOnly).sort((a, b) => a.order - b.order);\n    },\n    /**\n     * List of sorted calendars owned by the principal\n     *\n     * @param {object} state the store data\n     * @return {Array}\n     */\n    ownSortedCalendars(state) {\n      return state.calendars.filter(calendar => calendar.supportsEvents).filter(calendar => !calendar.readOnly).filter(calendar => !calendar.isSharedWithMe).sort((a, b) => a.order - b.order);\n    },\n    hasTrashBin(state) {\n      return state.trashBin !== undefined && state.trashBin.retentionDuration !== 0;\n    },\n    /**\n     * List of deleted sorted calendars\n     *\n     * @param {object} state the store data\n     * @return {Array}\n     */\n    sortedDeletedCalendars(state) {\n      return state.deletedCalendars.sort((a, b) => a.deletedAt - b.deletedAt);\n    },\n    /**\n     * List of deleted calendars objects\n     *\n     * @param {object} state the store data\n     * @return {Array}\n     */\n    allDeletedCalendarObjects(state) {\n      const calendarUriMap = {};\n      state.calendars.forEach(calendar => {\n        const withoutTrail = calendar.url.replace(/\\/$/, '');\n        const uri = withoutTrail.slice(withoutTrail.lastIndexOf('/') + 1);\n        calendarUriMap[uri] = calendar;\n      });\n      return state.deletedCalendarObjects.map(obj => ({\n        calendar: calendarUriMap[obj.dav._props['{http://nextcloud.com/ns}calendar-uri']],\n        ...obj\n      }));\n    },\n    /**\n     * List of sorted subscriptions\n     *\n     * @param {object} state the store data\n     * @return {Array}\n     */\n    sortedSubscriptions(state) {\n      return state.calendars.filter(calendar => calendar.supportsEvents).filter(calendar => calendar.readOnly).sort((a, b) => a.order - b.order);\n    },\n    /**\n     * List of enabled calendars and subscriptions\n     *\n     * @param {object} state the store data\n     * @return {Array}\n     */\n    enabledCalendars(state) {\n      const settingsStore = useSettingsStore();\n      return state.calendars.filter(calendar => calendar.supportsEvents || settingsStore.showTasks && calendar.supportsTasks).filter(calendar => calendar.enabled);\n    },\n    /**\n     * Gets a calendar by its Id\n     *\n     * @param {object} state the store data\n     * @return {function({String}): {Object}}\n     */\n    getCalendarById: state => calendarId => state.calendarsById[calendarId],\n    /**\n     * Gets a calendar by its url\n     *\n     * @param {object} state the store data\n     * @return {function({String}): {Object}}\n     */\n    getCalendarByUrl: state => url => state.calendars.find(calendar => calendar.url === url),\n    /**\n     * Gets the contact's birthday calendar or null\n     *\n     * @param {object} state the store data\n     * @return {object | null}\n     */\n    getBirthdayCalendar: state => {\n      for (const calendar of state.calendars) {\n        const url = calendar.url.slice(0, -1);\n        const lastSlash = url.lastIndexOf('/');\n        const uri = url.slice(lastSlash + 1);\n        if (uri === CALDAV_BIRTHDAY_CALENDAR) {\n          return calendar;\n        }\n      }\n      return null;\n    },\n    /**\n     * @return {function({Boolean}, {Boolean}, {Boolean}): {Object}[]}\n     */\n    sortedCalendarFilteredByComponents() {\n      return (vevent, vjournal, vtodo) => {\n        return this.sortedCalendars.filter(calendar => {\n          if (vevent && !calendar.supportsEvents) {\n            return false;\n          }\n          if (vjournal && !calendar.supportsJournals) {\n            return false;\n          }\n          if (vtodo && !calendar.supportsTasks) {\n            return false;\n          }\n          return true;\n        });\n      };\n    },\n    /**\n     * Get the current sync token of a calendar or undefined it the calendar is not present\n     *\n     * @param {object} state The pinia state object\n     * @return {function({id: string}): string | undefined}\n     */\n    getCalendarSyncToken: state => calendar => {\n      const existingCalendar = state.calendarsById[calendar.id];\n      if (!existingCalendar) {\n        return undefined;\n      }\n      return state.syncTokens.get(calendar.id) ?? existingCalendar.dav.syncToken;\n    }\n  },\n  actions: {\n    /**\n     * Retrieve and commit calendars and other collections\n     *\n     * @return {Promise<object>} the results\n     */\n    async loadCollections() {\n      const principalsStore = usePrincipalsStore();\n      const {\n        calendars,\n        trashBins,\n        scheduleInboxes,\n        subscriptions\n      } = await findAll();\n      console.info('calendar home scanned', calendars, trashBins, subscriptions);\n      calendars.map(calendar => mapDavCollectionToCalendar(calendar, principalsStore.getCurrentUserPrincipal)).forEach(calendar => {\n        this.addCalendarMutation({\n          calendar\n        });\n      });\n      if (trashBins.length) {\n        this.trashBin = trashBins[0];\n      }\n      if (scheduleInboxes.length) {\n        this.scheduleInbox = scheduleInboxes[0];\n      }\n      this.initialCalendarsLoaded = true;\n      return {\n        calendars: this.calendars,\n        trashBin: this.trashBin\n      };\n    },\n    /**\n     * Retrieve and commit deleted calendars\n     *\n     * @return {Promise<Array>} the calendars\n     */\n    async loadDeletedCalendars() {\n      const calendars = await findAllDeletedCalendars();\n      calendars.forEach(calendar => {\n        if (this.deletedCalendars.some(c => c.url === calendar.url)) {\n          // This calendar is already known\n          return;\n        }\n        this.deletedCalendars.push(calendar);\n      });\n    },\n    /**\n     * Retrieve and commit deleted calendar objects\n     */\n    async loadDeletedCalendarObjects() {\n      const vobjects = await this.trashBin.findDeletedObjects(); /// TODO what is this?\n      console.info('vobjects loaded', {\n        vobjects\n      });\n      vobjects.forEach(vobject => {\n        try {\n          const calendarObject = mapCDavObjectToCalendarObject(vobject, undefined);\n          if (this.deletedCalendarObjects.some(c => c.uri === calendarObject.uri)) {\n            // This vobject is already known\n            return;\n          }\n          this.deletedCalendarObjects.push(calendarObject);\n        } catch (error) {\n          console.error('could not convert calendar object', vobject, error);\n        }\n      });\n    },\n    /**\n     * Retrieve and commit public calendars\n     *\n     * @param {object} data The data destructuring object\n     * @param {string[]} data.tokens The tokens to load\n     * @return {Promise<object[]>}\n     */\n    async getPublicCalendars(_ref) {\n      let {\n        tokens\n      } = _ref;\n      const calendars = await findPublicCalendarsByTokens(tokens);\n      const calendarObjects = [];\n      for (const davCalendar of calendars) {\n        const calendar = mapDavCollectionToCalendar(davCalendar);\n        this.addCalendarMutation({\n          calendar\n        });\n        calendarObjects.push(calendar);\n      }\n      this.initialCalendarsLoaded = true;\n      return calendarObjects;\n    },\n    /**\n     * Append a new calendar to array of existing calendars\n     *\n     * @param {object} data destructuring object\n     * @param {object} data.displayName The name of the new calendar\n     * @param {object} data.color The color of the new calendar\n     * @param {object} data.order The order of the new calendar\n     * @param {string[]} data.components The supported components of the calendar\n     * @param {string=} data.timezone The timezoneId\n     * @return {Promise}\n     */\n    async appendCalendar(_ref2) {\n      let {\n        displayName,\n        color,\n        order,\n        components = ['VEVENT'],\n        timezone = null\n      } = _ref2;\n      const principalsStore = usePrincipalsStore();\n      const settingsStore = useSettingsStore();\n      if (timezone === null) {\n        timezone = settingsStore.getResolvedTimezone;\n      }\n      let timezoneIcs = null;\n      const timezoneObject = getTimezoneManager().getTimezoneForId(timezone);\n      if (timezoneObject !== Timezone.utc && timezoneObject !== Timezone.floating) {\n        const calendar = CalendarComponent.fromEmpty();\n        calendar.addComponent(TimezoneComponent.fromICALJs(timezoneObject.toICALJs()));\n        timezoneIcs = calendar.toICS(false);\n      }\n      const response = await createCalendar(displayName, color, components, order, timezoneIcs);\n      const calendar = mapDavCollectionToCalendar(response, principalsStore.getCurrentUserPrincipal);\n      this.addCalendarMutation({\n        calendar\n      });\n    },\n    /**\n     * Append a new subscription to array of existing calendars\n     *\n     * @param {object} data destructuring object\n     * @param {string} data.displayName Name of new subscription\n     * @param {string} data.color Color of new subscription\n     * @param {string} data.order Order of new subscription\n     * @param {string} data.source Source of new subscription\n     * @return {Promise}\n     */\n    async appendSubscription(_ref3) {\n      let {\n        displayName,\n        color,\n        order,\n        source\n      } = _ref3;\n      const principalsStore = usePrincipalsStore();\n      const response = await createSubscription(displayName, color, source, order);\n      const calendar = mapDavCollectionToCalendar(response, principalsStore.getCurrentUserPrincipal);\n      this.addCalendarMutation({\n        calendar\n      });\n    },\n    /**\n     * Delete a calendar\n     *\n     * @param {object} data destructuring object\n     * @param {object} data.calendar the calendar to delete\n     * @return {Promise}\n     */\n    async deleteCalendar(_ref4) {\n      let {\n        calendar\n      } = _ref4;\n      await calendar.dav.delete();\n      this.calendars.splice(this.calendars.indexOf(calendar), 1);\n      /// TODO this.calendarsById.delete(calendar.id)\n      Vue.delete(this.calendarsById, calendar.id);\n      this.syncTokens.delete(calendar.id);\n    },\n    /**\n     * Delete a calendar in the trash bin\n     *\n     * @param {object} data destructuring object\n     * @param {object} data.calendar the calendar to delete\n     * @return {Promise}\n     */\n    async deleteCalendarPermanently(_ref5) {\n      let {\n        calendar\n      } = _ref5;\n      await calendar.delete({\n        'X-NC-CalDAV-No-Trashbin': 1\n      });\n      this.deletedCalendars = this.deletedCalendars.filter(c => c !== calendar);\n    },\n    deleteCalendarAfterTimeout(_ref6) {\n      let {\n        calendar,\n        countdown = 7\n      } = _ref6;\n      /// TODO this.calendarsById[calendar.id].countdown = countdown\n      Vue.set(this.calendarsById[calendar.id], 'countdown', countdown);\n      const deleteInterval = setInterval(() => {\n        countdown--;\n        if (countdown < 0) {\n          countdown = 0;\n        }\n\n        /// TODO this.calendarsById[calendar.id].countdown = countdown\n        Vue.set(this.calendarsById[calendar.id], 'countdown', countdown);\n      }, 1000);\n      const deleteTimeout = setTimeout(async () => {\n        try {\n          await this.deleteCalendar({\n            calendar\n          });\n        } catch (error) {\n          showError(t('calendar', 'An error occurred, unable to delete the calendar.'));\n          console.error(error);\n        } finally {\n          clearInterval(deleteInterval);\n        }\n      }, 7000);\n      /// TODO this.calendarsById[calendar.id].deleteInterval = deleteInterval\n      /// TODO this.calendarsById[calendar.id].deleteTimeout = deleteTimeout\n      Vue.set(this.calendarsById[calendar.id], 'deleteInterval', deleteInterval);\n      Vue.set(this.calendarsById[calendar.id], 'deleteTimeout', deleteTimeout);\n    },\n    cancelCalendarDeletion(_ref7) {\n      let {\n        calendar\n      } = _ref7;\n      if (calendar.deleteInterval) clearInterval(calendar.deleteInterval);\n      if (calendar.deleteTimeout) clearTimeout(calendar.deleteTimeout);\n      this.calendarsById[calendar.id].deleteInterval = undefined;\n      this.calendarsById[calendar.id].deleteTimeout = undefined;\n    },\n    async restoreCalendar(_ref8) {\n      let {\n        calendar\n      } = _ref8;\n      await this.trashBin.restore(calendar.url);\n      this.deletedCalendars = this.deletedCalendars.filter(c => c !== calendar);\n    },\n    async restoreCalendarObject(_ref9) {\n      let {\n        vobject\n      } = _ref9;\n      const fetchedTimeRangesStore = useFetchedTimeRangesStore();\n      const calendarObjectsStore = useCalendarObjectsStore();\n      await this.trashBin.restore(vobject.uri);\n\n      // Clean up the data locally\n      this.deletedCalendarObjects = this.deletedCalendarObjects.filter(vo => vo.id !== vobject.id);\n\n      // Delete cached time range that includes the restored event\n      const calendarObject = mapCDavObjectToCalendarObject(vobject.dav, undefined);\n      const component = calendarObject.calendarComponent.getFirstComponent(vobject.objectType);\n      const timeRange = fetchedTimeRangesStore.getTimeRangeForCalendarCoveringRange(vobject.calendar.id, component.startDate?.unixTime, component.endDate?.unixTime);\n      if (timeRange) {\n        this.deleteFetchedTimeRangeFromCalendarMutation({\n          calendar: vobject.calendar,\n          fetchedTimeRangeId: timeRange.id\n        });\n        fetchedTimeRangesStore.removeTimeRange({\n          timeRangeId: timeRange.id\n        });\n      }\n\n      // Trigger calendar refresh\n      calendarObjectsStore.modificationCount++;\n    },\n    /**\n     * Deletes a calendar-object permanently\n     *\n     * @param {object} data destructuring object\n     * @param {vobject} data.vobject Calendar-object to delete\n     * @return {Promise<void>}\n     */\n    async deleteCalendarObjectPermanently(_ref10) {\n      let {\n        vobject\n      } = _ref10;\n      await vobject.dav.delete({\n        'X-NC-CalDAV-No-Trashbin': 1\n      });\n      this.deletedCalendarObjects = this.deletedCalendarObjects.filter(vo => vo.id !== vobject.id);\n    },\n    /**\n     * Toggle whether a calendar is enabled\n     *\n     * @param {object} data destructuring object\n     * @param {object} data.calendar the calendar to modify\n     * @param {boolean} data.updateDav whether to persist changes to the CalDAV backend (default: true)\n     * @return {Promise}\n     */\n    async toggleCalendarEnabled(_ref11) {\n      let {\n        calendar,\n        updateDav = true\n      } = _ref11;\n      this.calendarsById[calendar.id].loading = true;\n      calendar.dav.enabled = !calendar.dav.enabled;\n      try {\n        if (updateDav) {\n          await calendar.dav.update();\n        }\n        this.calendarsById[calendar.id].loading = false;\n        this.calendarsById[calendar.id].enabled = !this.calendarsById[calendar.id].enabled;\n      } catch (error) {\n        this.calendarsById[calendar.id].loading = false;\n        throw error;\n      }\n    },\n    /**\n     * Rename a calendar\n     *\n     * @param {object} data destructuring object\n     * @param {object} data.calendar the calendar to modify\n     * @param {string} data.newName the new name of the calendar\n     * @return {Promise}\n     */\n    async renameCalendar(_ref12) {\n      let {\n        calendar,\n        newName\n      } = _ref12;\n      calendar.dav.displayname = newName;\n      await calendar.dav.update();\n      this.calendarsById[calendar.id].displayName = newName;\n    },\n    /**\n     * Change a calendar's color\n     *\n     * @param {object} data destructuring object\n     * @param {object} data.calendar the calendar to modify\n     * @param {string} data.newColor the new color of the calendar\n     * @return {Promise}\n     */\n    async changeCalendarColor(_ref13) {\n      let {\n        calendar,\n        newColor\n      } = _ref13;\n      calendar.dav.color = newColor;\n      await calendar.dav.update();\n      this.calendarsById[calendar.id].color = newColor;\n    },\n    /**\n     * Change a calendars transparency\n     *\n     * @param {object} data destructuring object\n     * @param {object} data.calendar the calendar to modify\n     * @param {string} data.transparency the new transparency\n     * @return {Promise}\n     */\n    async changeCalendarTransparency(_ref14) {\n      let {\n        calendar,\n        transparency\n      } = _ref14;\n      if (calendar.dav.transparency === transparency) {\n        return;\n      }\n      calendar.dav.transparency = transparency;\n      await calendar.dav.update();\n      this.calendarsById[calendar.id].transparency = transparency;\n    },\n    /**\n     * Share calendar with User or Group\n     *\n     * @param {object} data destructuring object\n     * @param {object} data.calendar the calendar to share\n     * @param {string} data.user the userId\n     * @param {string} data.displayName the displayName\n     * @param {string} data.uri the sharing principalScheme uri\n     * @param {boolean} data.isGroup is this a group?\n     * @param {boolean} data.isCircle is this a circle?\n     */\n    async shareCalendar(_ref15) {\n      let {\n        calendar,\n        user,\n        displayName,\n        uri,\n        isGroup,\n        isCircle\n      } = _ref15;\n      // Share calendar with entered group or user\n      await calendar.dav.share(uri);\n      const newSharee = {\n        displayName,\n        id: user,\n        writeable: false,\n        isGroup,\n        isCircle,\n        uri\n      };\n      this.calendarsById[calendar.id].shares.push(newSharee);\n    },\n    /**\n     * Toggle permissions of calendar Sharees writeable rights\n     *\n     * @param {object} data destructuring object\n     * @param {object} data.calendar the calendar to change\n     * @param {string} data.uri the sharing principalScheme uri\n     */\n    async toggleCalendarShareWritable(_ref16) {\n      let {\n        calendar,\n        uri\n      } = _ref16;\n      const sharee = calendar.shares.find(sharee => sharee.uri === uri);\n      await calendar.dav.share(uri, !sharee.writeable);\n      /// TODO test this not sure what it does\n      calendar = this.calendars.find(search => search.id === calendar.id);\n      sharee.writeable = !sharee.writeable;\n    },\n    /**\n     * Remove sharee from calendar\n     *\n     * @param {object} data destructuring object\n     * @param {object} data.calendar the calendar to change\n     * @param {string} data.uri the sharing principalScheme uri\n     */\n    async unshareCalendar(_ref17) {\n      let {\n        calendar,\n        uri\n      } = _ref17;\n      await calendar.dav.unshare(uri);\n      calendar = this.calendars.find(search => search.id === calendar.id);\n      const shareIndex = calendar.shares.findIndex(sharee => sharee.uri === uri);\n      calendar.shares.splice(shareIndex, 1);\n    },\n    /**\n     * Publish a calendar\n     *\n     * @param {object} data destructuring object\n     * @param {object} data.calendar the calendar to change\n     * @return {Promise<void>}\n     */\n    async publishCalendar(_ref18) {\n      let {\n        calendar\n      } = _ref18;\n      await calendar.dav.publish();\n      const publishURL = calendar.dav.publishURL;\n      calendar = this.calendars.find(search => search.id === calendar.id);\n      calendar.publishURL = publishURL;\n    },\n    /**\n     * Unpublish a calendar\n     *\n     * @param {object} data destructuring object\n     * @param {object} data.calendar the calendar to change\n     * @return {Promise<void>}\n     */\n    async unpublishCalendar(_ref19) {\n      let {\n        calendar\n      } = _ref19;\n      await calendar.dav.unpublish();\n      calendar = this.calendars.find(search => search.id === calendar.id);\n      calendar.publishURL = null;\n    },\n    /**\n     * Retrieve the events of the specified calendar\n     * and commit the results\n     *\n     * @param {object} data destructuring object\n     * @param {object} data.calendar the calendar to get events from\n     * @param {Date} data.from the date to start querying events from\n     * @param {Date} data.to the last date to query events from\n     * @return {Promise<void>}\n     */\n    async getEventsFromCalendarInTimeRange(_ref20) {\n      let {\n        calendar,\n        from,\n        to\n      } = _ref20;\n      const fetchedTimeRangesStore = useFetchedTimeRangesStore();\n      const settingsStore = useSettingsStore();\n      const calendarObjectsStore = useCalendarObjectsStore();\n      this.calendarsById[calendar.id].loading = true;\n      const response = await calendar.dav.findByTypeInTimeRange('VEVENT', from, to);\n      let responseTodo = [];\n      if (settingsStore.showTasks) {\n        responseTodo = await calendar.dav.findByTypeInTimeRange('VTODO', from, to);\n      }\n      fetchedTimeRangesStore.addTimeRange({\n        calendarId: calendar.id,\n        from: getUnixTimestampFromDate(from),\n        to: getUnixTimestampFromDate(to),\n        lastFetched: getUnixTimestampFromDate(dateFactory()),\n        calendarObjectIds: []\n      });\n      const insertId = fetchedTimeRangesStore.lastTimeRangeInsertId;\n      this.calendarsById[calendar.id].fetchedTimeRanges.push(insertId);\n      const calendarObjects = [];\n      const calendarObjectIds = [];\n      for (const r of response.concat(responseTodo)) {\n        try {\n          const calendarObject = mapCDavObjectToCalendarObject(r, calendar.id);\n          calendarObjects.push(calendarObject);\n          calendarObjectIds.push(calendarObject.id);\n        } catch (e) {\n          console.error(`could not convert calendar object of calendar ${calendar.id}`, e, {\n            response: r\n          });\n        }\n      }\n      calendarObjectsStore.appendOrUpdateCalendarObjectsMutation({\n        calendarObjects\n      });\n      for (const calendarObjectId of calendarObjectIds) {\n        if (this.calendarsById[calendar.id].calendarObjects.indexOf(calendarObjectId) === -1) {\n          this.calendarsById[calendar.id].calendarObjects.push(calendarObjectId);\n        }\n      }\n      fetchedTimeRangesStore.appendCalendarObjectIdsToTimeFrame({\n        timeRangeId: insertId,\n        calendarObjectIds\n      });\n      this.calendarsById[calendar.id].loading = false;\n      return fetchedTimeRangesStore.lastTimeRangeInsertId;\n    },\n    /**\n     * Retrieve one object\n     *\n     * @param {object} data destructuring object\n     * @param {string} data.objectId Id of the object to fetch\n     * @return {Promise<CalendarObject>}\n     */\n    async getEventByObjectId(_ref21) {\n      let {\n        objectId\n      } = _ref21;\n      const calendarObjectsStore = useCalendarObjectsStore();\n      // TODO - we should still check if the calendar-object is up to date\n      //  - Just send head and compare etags\n      if (calendarObjectsStore.getCalendarObjectById(objectId)) {\n        return Promise.resolve(calendarObjectsStore.getCalendarObjectById(objectId));\n      }\n\n      // This might throw an exception, but we will leave it up to the methods\n      // calling this action to properly handle it\n      const objectPath = atob(objectId);\n      const lastSlashIndex = objectPath.lastIndexOf('/');\n      const calendarPath = objectPath.slice(0, lastSlashIndex + 1);\n      const objectFileName = objectPath.slice(lastSlashIndex + 1);\n      const calendarId = btoa(calendarPath);\n      if (!this.calendarsById[calendarId]) {\n        return Promise.reject(new Error(''));\n      }\n      const calendar = this.calendarsById[calendarId];\n      const vObject = await calendar.dav.find(objectFileName);\n      const calendarObject = mapCDavObjectToCalendarObject(vObject, calendar.id);\n      calendarObjectsStore.appendCalendarObjectMutation({\n        calendarObject\n      });\n      this.addCalendarObjectToCalendarMutation({\n        calendar: {\n          id: calendarId\n        },\n        calendarObjectId: calendarObject.id\n      });\n      return calendarObject;\n    },\n    /**\n     * Import events into calendar\n     *\n     */\n    async importEventsIntoCalendar() {\n      const importStateStore = useImportStateStore();\n      const importFilesStore = useImportFilesStore();\n      const principalsStore = usePrincipalsStore();\n      const fetchedTimeRangesStore = useFetchedTimeRangesStore();\n      const calendarObjectsStore = useCalendarObjectsStore();\n      importStateStore.stage = IMPORT_STAGE_IMPORTING;\n\n      // Create a copy\n      const files = importFilesStore.importFiles.slice();\n      let totalCount = 0;\n      for (const file of files) {\n        totalCount += file.parser.getItemCount();\n        const calendarId = importFilesStore.importCalendarRelation[file.id];\n        if (calendarId === 'new') {\n          const displayName = file.parser.getName() || t('calendar', 'Imported {filename}', {\n            filename: file.name\n          });\n          const color = file.parser.getColor() || uidToHexColor(displayName);\n          const components = [];\n          if (file.parser.containsVEvents()) {\n            components.push('VEVENT');\n          }\n          if (file.parser.containsVJournals()) {\n            components.push('VJOURNAL');\n          }\n          if (file.parser.containsVTodos()) {\n            components.push('VTODO');\n          }\n          const response = await createCalendar(displayName, color, components, 0);\n          const calendar = mapDavCollectionToCalendar(response, principalsStore.getCurrentUserPrincipal);\n          this.addCalendarMutation({\n            calendar\n          });\n          importFilesStore.setCalendarForFileId({\n            fileId: file.id,\n            calendarId: calendar.id\n          });\n        }\n      }\n      importStateStore.total = totalCount;\n      const limit = pLimit(3);\n      const requests = [];\n      for (const file of files) {\n        const calendarId = importFilesStore.importCalendarRelation[file.id];\n        const calendar = this.getCalendarById(calendarId);\n        for (const item of file.parser.getItemIterator()) {\n          requests.push(limit(async () => {\n            const ics = item.toICS();\n            let davObject;\n            try {\n              davObject = await calendar.dav.createVObject(ics);\n            } catch (error) {\n              importStateStore.denied++;\n              console.error(error);\n              return;\n            }\n            const calendarObject = mapCDavObjectToCalendarObject(davObject, calendarId);\n            calendarObjectsStore.appendCalendarObjectMutation({\n              calendarObject\n            });\n            this.addCalendarObjectToCalendarMutation({\n              calendar,\n              calendarObjectId: calendarObject.id\n            });\n            fetchedTimeRangesStore.addCalendarObjectIdToAllTimeRangesOfCalendar({\n              calendarId: calendar.id,\n              calendarObjectId: calendarObject.id\n            });\n            importStateStore.accepted++;\n          }));\n        }\n      }\n      await Promise.all(requests);\n      importStateStore.stage = IMPORT_STAGE_PROCESSING;\n    },\n    /**\n     *\n     * @param {object} data The data destructuring object\n     * @param {object} data.newOrder The object containing String => Number with the new order\n     * @return {Promise<void>}\n     */\n    async updateCalendarListOrder(_ref22) {\n      let {\n        newOrder\n      } = _ref22;\n      // keep a record of the original order in case we need to do a rollback\n\n      const limit = pLimit(3);\n      const requests = [];\n      const calendarsToUpdate = [];\n      for (const key in newOrder) {\n        requests.push(limit(async () => {\n          const calendar = this.calendarsById[key];\n\n          // Do not update unless necessary\n          if (calendar.dav.order === newOrder[key]) {\n            return;\n          }\n          calendar.dav.order = newOrder[key];\n          await calendar.dav.update();\n          calendarsToUpdate.push({\n            calendar,\n            newOrder: newOrder[key]\n          });\n        }));\n      }\n      await Promise.all(requests);\n      for (const {\n        calendar,\n        newOrder\n      } of calendarsToUpdate) {\n        console.debug(calendar, newOrder);\n        this.calendarsById[calendar.id].order = newOrder;\n      }\n    },\n    /**\n     * Adds calendar into state\n     *\n     * @param {object} data destructuring object\n     * @param {object} data.calendar the calendar to add\n     */\n    addCalendarMutation(_ref23) {\n      let {\n        calendar\n      } = _ref23;\n      const object = getDefaultCalendarObject(calendar);\n      if (!this.calendars.some(existing => existing.id === object.id)) {\n        this.calendars.push(object);\n        Vue.set(this.calendars, 0, this.calendars[0]); /// TODO remove with vue 3\n      }\n      /// TODO this.calendarsById[object.id] = object\n      Vue.set(this.calendarsById, object.id, object);\n    },\n    /**\n     * Removes fetched time-range from calendar\n     *\n     * @param {object} data destructuring object\n     * @param {object} data.calendar The calendar to remove a time-range from\n     * @param {number} data.fetchedTimeRangeId The time-range-id to remove\n     */\n    deleteFetchedTimeRangeFromCalendarMutation(_ref24) {\n      let {\n        calendar,\n        fetchedTimeRangeId\n      } = _ref24;\n      const index = this.calendarsById[calendar.id]?.fetchedTimeRanges.indexOf(fetchedTimeRangeId);\n      if (index !== -1) {\n        this.calendarsById[calendar.id].fetchedTimeRanges.splice(index, 1);\n      }\n    },\n    /**\n     * Adds calendar-object to calendar\n     *\n     * @param {object} data destructuring object\n     * @param {object} data.calendar The calendar to append objects to\n     * @param {string} data.calendarObjectId The calendar object id to append\n     */\n    addCalendarObjectToCalendarMutation(_ref25) {\n      let {\n        calendar,\n        calendarObjectId\n      } = _ref25;\n      if (this.calendarsById[calendar.id].calendarObjects.indexOf(calendarObjectId) === -1) {\n        this.calendarsById[calendar.id].calendarObjects.push(calendarObjectId);\n      }\n    },\n    /**\n     * Removes calendar-object from calendar\n     *\n     * @param {object} data destructuring object\n     * @param {object} data.calendar The calendar to delete objects from\n     * @param {string} data.calendarObjectId The calendar object ids to delete\n     */\n    deleteCalendarObjectFromCalendarMutation(_ref26) {\n      let {\n        calendar,\n        calendarObjectId\n      } = _ref26;\n      const index = this.calendarsById[calendar.id].calendarObjects.indexOf(calendarObjectId);\n      if (index !== -1) {\n        this.calendarsById[calendar.id].calendarObjects.slice(index, 1);\n      }\n    },\n    /**\n     * Update the sync token of a given calendar locally\n     *\n     * @param {object} data destructuring object\n     * @param {{id: string}} data.calendar Calendar from the store\n     * @param {string} data.syncToken New sync token value\n     */\n    updateCalendarSyncToken(_ref27) {\n      let {\n        calendar,\n        syncToken\n      } = _ref27;\n      if (!this.getCalendarById(calendar.id)) {\n        return;\n      }\n      this.syncTokens.set(calendar.id, syncToken);\n    }\n  }\n});","/**\n * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\nimport { defineStore } from 'pinia';\nimport useCalendarObjectsStore from './calendarObjects.js';\nimport Vue from 'vue';\nexport default defineStore('fetchedTimeRanges', {\n  state: () => {\n    return {\n      lastTimeRangeInsertId: -1,\n      fetchedTimeRanges: [],\n      fetchedTimeRangesById: {}\n    };\n  },\n  getters: {\n    /**\n     * Get all time-ranges for a calendar\n     *\n     * @param {object} state The Pinia state\n     * @return {function({String}): {Object}[]}\n     */\n    getAllTimeRangesForCalendar: state => calendarId => state.fetchedTimeRanges.filter(f => f.calendarId === calendarId),\n    /**\n     * Get time-range covering\n     *\n     * @param {object} state The Pinia state\n     * @return {function({Number}, {Number}, {Number}): {Object}|false}\n     */\n    getTimeRangeForCalendarCoveringRange: state => (calendarId, requestedFrom, requestedTo) => {\n      return state.fetchedTimeRanges.find(f => {\n        return f.calendarId === calendarId && f.from <= requestedFrom && f.to >= requestedTo;\n      });\n    },\n    /**\n     * Get all time-ranges that have been last fetched before a given time\n     *\n     * @param {object} state The Pinia state\n     * @return {function({Number}): {Object}[]}\n     */\n    getAllTimeRangesOlderThan: state => olderThan => state.fetchedTimeRanges.filter(f => f.lastFetched <= olderThan),\n    /**\n     *\n     * @param {object} state The Pinia state\n     * @return {function({Number}): {CalendarObject}[]}\n     */\n    getCalendarObjectsByTimeRangeId: state => timeRangeId => {\n      const calendarObjecstsStore = useCalendarObjectsStore();\n      if (!state.fetchedTimeRangesById[timeRangeId]) {\n        return [];\n      }\n      return state.fetchedTimeRangesById[timeRangeId].calendarObjectIds.map(calendarObjectId => {\n        return calendarObjecstsStore.getCalendarObjectById(calendarObjectId);\n      });\n    }\n  },\n  actions: {\n    /**\n     * Adds a fetched time-range to the state\n     *\n     * @param {object} data The destructuring object\n     * @param {string} data.calendarId Calendar-id which objects have been fetched\n     * @param {number} data.from timestamp of start\n     * @param {number} data.to timestamp of end\n     * @param {number} data.lastFetched timestamp of last-fetched\n     * @param {string[]} data.calendarObjectIds array of calendarObjectIds\n     */\n    addTimeRange(_ref) {\n      let {\n        calendarId,\n        from,\n        to,\n        lastFetched,\n        calendarObjectIds\n      } = _ref;\n      const fetchedTimeRange = {\n        id: ++this.lastTimeRangeInsertId,\n        calendarId,\n        from,\n        to,\n        lastFetched,\n        calendarObjectIds\n      };\n      this.fetchedTimeRanges.push(fetchedTimeRange);\n      /// TODO this.fetchedTimeRangesById[fetchedTimeRange.id] = fetchedTimeRange\n      Vue.set(this.fetchedTimeRangesById, fetchedTimeRange.id, fetchedTimeRange);\n    },\n    /**\n     * Removes a fetched time-range from the state\n     *\n     * @param {object} data The destructuring object\n     * @param {number} data.timeRangeId Id of time-range to remove\n     */\n    removeTimeRange(_ref2) {\n      let {\n        timeRangeId\n      } = _ref2;\n      Vue.delete(this.fetchedTimeRangesById, timeRangeId);\n      this.fetchedTimeRanges = this.fetchedTimeRanges.filter(timeRange => timeRange.id !== timeRangeId);\n    },\n    /**\n     * Adds a calendar-object-id to an already fetched time-range\n     *\n     * @param {object} data The destructuring object\n     * @param {number} data.timeRangeId The id of the time-range\n     * @param {string[]} data.calendarObjectIds The array of ids of the calendar-object to add\n     */\n    appendCalendarObjectIdsToTimeFrame(_ref3) {\n      let {\n        timeRangeId,\n        calendarObjectIds\n      } = _ref3;\n      for (const calendarObjectId of calendarObjectIds) {\n        if (this.fetchedTimeRangesById[timeRangeId].calendarObjectIds.indexOf(calendarObjectId) === -1) {\n          this.fetchedTimeRangesById[timeRangeId].calendarObjectIds.push(calendarObjectId);\n        }\n      }\n    },\n    /**\n     * Adds a calendar-object-id to an already fetched time-range\n     *\n     * @param {object} data The destructuring object\n     * @param {number} data.timeRangeId The id of the time-range\n     * @param {string} data.calendarObjectId The id of the calendar-object to add\n     */\n    appendCalendarObjectIdToTimeRange(_ref4) {\n      let {\n        timeRangeId,\n        calendarObjectId\n      } = _ref4;\n      this.fetchedTimeRangesById[timeRangeId].calendarObjectIds.push(calendarObjectId);\n    },\n    /**\n     * Removes a calendar-object-id from an already fetched time-range\n     *\n     * @param {object} data The destructuring object\n     * @param {number} data.timeRangeId The id of the timerange\n     * @param {string} data.calendarObjectId The id of the calendar-object to remove\n     */\n    removeCalendarObjectIdFromTimeRange(_ref5) {\n      let {\n        timeRangeId,\n        calendarObjectId\n      } = _ref5;\n      const index = this.fetchedTimeRangesById[timeRangeId].calendarObjectIds.indexOf(calendarObjectId);\n      if (index !== -1) {\n        this.fetchedTimeRangesById[timeRangeId].calendarObjectIds.splice(index, 1);\n      }\n    },\n    /**\n     * Removes a calendar-object-id from any time-range it may occur in\n     *\n     * @param {object} data The destructuring object\n     * @param {string} data.calendarObjectId The id of the calendar-object to remove\n     */\n    removeCalendarObjectIdFromAnyTimeRange(_ref6) {\n      let {\n        calendarObjectId\n      } = _ref6;\n      for (const timeRange of this.fetchedTimeRanges) {\n        const index = timeRange.calendarObjectIds.indexOf(calendarObjectId);\n        if (index !== -1) {\n          timeRange.calendarObjectIds.splice(index, 1);\n        }\n      }\n    },\n    /**\n     * Adds a calendar-object-id to all time-ranges of a given caloendar\n     *\n     * @param {object} data The destructuring object\n     * @param {string} data.calendarObjectId The id of the calendar-object\n     * @param {string} data.calendarId The id of the calendar\n     */\n    addCalendarObjectIdToAllTimeRangesOfCalendar(_ref7) {\n      let {\n        calendarObjectId,\n        calendarId\n      } = _ref7;\n      for (const timeRange of this.fetchedTimeRanges) {\n        if (timeRange.calendarId !== calendarId) {\n          continue;\n        }\n        if (timeRange.calendarObjectIds.indexOf(calendarObjectId) === -1) {\n          timeRange.calendarObjectIds.push(calendarObjectId);\n        }\n      }\n    },\n    /**\n     * Removes a calendar-object-id to all time-ranges of a given calendar\n     *\n     * @param {object} data The destructuring object\n     * @param {string} data.calendarObjectId The id of the calendar-object\n     * @param {string} data.calendarId The id of the calendar\n     */\n    removeCalendarObjectIdFromAllTimeRangesOfCalendar(_ref8) {\n      let {\n        calendarObjectId,\n        calendarId\n      } = _ref8;\n      for (const timeRange of this.fetchedTimeRanges) {\n        if (timeRange.calendarId !== calendarId) {\n          continue;\n        }\n        const index = timeRange.calendarObjectIds.indexOf(calendarObjectId);\n        if (index !== -1) {\n          timeRange.calendarObjectIds.splice(index, 1);\n        }\n      }\n    },\n    /**\n     * clear FetchedTimeRanges Store\n     */\n    clearFetchedTimeRanges() {\n      this.lastTimeRangeInsertId = -1;\n      this.fetchedTimeRanges = [];\n      this.fetchedTimeRangesById = {};\n    }\n  }\n});","/**\n * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\nimport { defineStore } from 'pinia';\nimport Vue from 'vue';\nexport default defineStore('importFiles', {\n  state: () => {\n    return {\n      lastFileInsertId: -1,\n      importFiles: [],\n      importFilesById: {},\n      importCalendarRelation: {}\n    };\n  },\n  actions: {\n    /**\n     * Adds a file to the state\n     *\n     * @param {object} data The destructuring object\n     * @param {string} data.contents Contents of file\n     * @param {number} data.lastModified Timestamp of last modification\n     * @param {string} data.name Name of file\n     * @param {AbstractParser} data.parser The parser\n     * @param {number} data.size Size of file\n     * @param {string} data.type mime-type of file\n     */\n    addFile(_ref) {\n      let {\n        contents,\n        lastModified,\n        name,\n        parser,\n        size,\n        type\n      } = _ref;\n      const file = {\n        id: ++this.lastFileInsertId,\n        contents,\n        lastModified,\n        name,\n        parser,\n        size,\n        type\n      };\n\n      // TODO: use this.importFiles.push(file) directly in Vue 3 (reactive by default)\n      this.importFiles = [...this.importFiles, file];\n      /// TODO this.importFilesById[file.id] = file\n      Vue.set(this.importFilesById, file.id, file);\n    },\n    /**\n     * Sets a calendar for the file\n     *\n     * @param {object} data The destructuring object\n     * @param {number} data.fileId Id of file to select calendar for\n     * @param {string} data.calendarId Id of calendar to import file into\n     */\n    setCalendarForFileId(_ref2) {\n      let {\n        fileId,\n        calendarId\n      } = _ref2;\n      // TODO: remove Vue.set when migrating to Vue 3 (reactive by default)\n      Vue.set(this.importCalendarRelation, fileId, calendarId);\n    },\n    /**\n     * Removes all files from state\n     */\n    removeAllFiles() {\n      /// TODO this.importFiles = []\n      /// TODO this.importFilesById = {}\n      /// TODO this.importCalendarRelation = {}\n\n      Vue.set(this, 'importFiles', []);\n      Vue.set(this, 'importFilesById', {});\n      Vue.set(this, 'importCalendarRelation', {});\n    }\n  }\n});","/**\n * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\nimport { IMPORT_STAGE_DEFAULT } from '../models/consts.js';\nimport { defineStore } from 'pinia';\nexport default defineStore('importState', {\n  state: () => {\n    return {\n      total: 0,\n      accepted: 0,\n      denied: 0,\n      stage: IMPORT_STAGE_DEFAULT\n    };\n  },\n  actions: {\n    /**\n     * Reset to the default state\n     */\n    resetState() {\n      this.total = 0;\n      this.accepted = 0;\n      this.denied = 0;\n      this.stage = IMPORT_STAGE_DEFAULT;\n    }\n  }\n});","/**\n * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\nimport { findPrincipalByUrl, getCurrentUserPrincipal, findPrincipalsInCollection } from '../services/caldavService.js';\nimport logger from '../utils/logger.js';\nimport { getDefaultPrincipalObject, mapDavToPrincipal } from '../models/principal.js';\nimport { defineStore } from 'pinia';\nimport Vue from 'vue';\nimport { generateRemoteUrl } from '@nextcloud/router';\nexport default defineStore('principals', {\n  state: () => {\n    return {\n      principals: [],\n      principalsById: {},\n      currentUserPrincipal: null\n    };\n  },\n  getters: {\n    /**\n     * Gets a principal object by its url\n     *\n     * @param {object} state the store data\n     * @return {function({String}): {Object}}\n     */\n    getPrincipalByUrl: state => url => state.principals.find(principal => principal.url === url),\n    /**\n     * Gets a principal object by its id\n     *\n     * @param {object} state the store data\n     * @return {function({String}): {Object}}\n     */\n    getPrincipalById: state => id => state.principalsById[id],\n    /**\n     * Gets the principal object of the current-user-principal\n     *\n     * @param {object} state the store data\n     * @return {{Object}}\n     */\n    getCurrentUserPrincipal: state => state.principalsById[state.currentUserPrincipal],\n    /**\n     * Gets the email-address of the current-user-principal\n     *\n     * @param {object} state the store data\n     * @return {string|undefined}\n     */\n    getCurrentUserPrincipalEmail: state => state.principalsById[state.currentUserPrincipal]?.emailAddress,\n    /**\n     * Gets all room principals\n     *\n     * @param {object} state the store data\n     * @return {object[]}\n     */\n    getRoomPrincipals: state => state.principals.filter(principal => principal.isCalendarRoom),\n    /**\n     * Gets all resource principals\n     *\n     * @param {object} state the store data\n     * @return {object[]}\n     */\n    getResourcePrincipals: state => state.principals.filter(principal => principal.isCalendarResource)\n  },\n  actions: {\n    /**\n     * Fetches a principal from the DAV server and commits it to the state\n     *\n     * @param {string} url The URL of the principal\n     * @return {Promise<void>}\n     */\n    async fetchPrincipalByUrl(_ref) {\n      let {\n        url\n      } = _ref;\n      // Don't refetch principals we already have\n      if (this.getPrincipalByUrl(url)) {\n        return;\n      }\n      const principal = await findPrincipalByUrl(url);\n      if (!principal) {\n        // TODO - handle error\n        return;\n      }\n      this.addPrincipalMutation({\n        principal: mapDavToPrincipal(principal)\n      });\n    },\n    /**\n     * Fetches all principals of all rooms and resources from the DAV server and commits it to the state\n     *\n     * @return {Promise<void>}\n     */\n    async fetchRoomAndResourcePrincipals() {\n      const options = {\n        enableCalDAVResourceBooking: true\n      };\n      const principalCollections = await Promise.all([findPrincipalsInCollection(generateRemoteUrl('dav/principals/calendar-rooms/'), options), findPrincipalsInCollection(generateRemoteUrl('dav/principals/calendar-resources/'), options)]);\n      for (const principals of principalCollections) {\n        if (!principals) {\n          // TODO - handle error\n          continue;\n        }\n        logger.debug('Fetched principals', {\n          principals\n        });\n        for (const principal of principals) {\n          this.addPrincipalMutation({\n            principal: mapDavToPrincipal(principal)\n          });\n        }\n      }\n    },\n    /**\n     * Fetches the current-user-principal\n     *\n     * @return {Promise<void>}\n     */\n    async fetchCurrentUserPrincipal() {\n      const currentUserPrincipal = getCurrentUserPrincipal();\n      if (!currentUserPrincipal) {\n        // TODO - handle error\n        return;\n      }\n      const principal = mapDavToPrincipal(currentUserPrincipal);\n      this.addPrincipalMutation({\n        principal\n      });\n      this.currentUserPrincipal = principal.id;\n      logger.debug(`Current user principal is ${principal.url}`);\n    },\n    /**\n     * Adds a principal to the state\n     *\n     * @param {object} data The destructuring object\n     * @param {object} data.principal The principal to add\n     */\n    addPrincipalMutation(_ref2) {\n      let {\n        principal\n      } = _ref2;\n      const object = getDefaultPrincipalObject(principal);\n      if (this.principalsById[object.id]) {\n        return;\n      }\n      this.principals.push(object);\n      /// TODO this.principalsById[object.id] = object\n      Vue.set(this.principalsById, object.id, object);\n    },\n    /**\n     * Changes the schedule-default-calendar-URL of a principal\n     *\n     * @param {object} data The destructuring object\n     * @param {object} data.principal The principal to modify\n     * @param {string} data.scheduleDefaultCalendarUrl The new schedule-default-calendar-URL\n     * @return {Promise<void>}\n     */\n    async changePrincipalScheduleDefaultCalendarUrl(_ref3) {\n      let {\n        principal,\n        scheduleDefaultCalendarUrl\n      } = _ref3;\n      principal.dav.scheduleDefaultCalendarUrl = scheduleDefaultCalendarUrl;\n      await principal.dav.update();\n      Vue.set(this.principalsById[principal.id], 'scheduleDefaultCalendarUrl', scheduleDefaultCalendarUrl);\n    }\n  }\n});","/**\n * SPDX-FileCopyrightText: 2020 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\nimport { enableBirthdayCalendar } from '../services/caldavService.js';\nimport { mapDavCollectionToCalendar } from '../models/calendar.js';\nimport { detectTimezone } from '../services/timezoneDetectionService.js';\nimport { setConfig as setCalendarJsConfig } from '@nextcloud/calendar-js';\nimport { setConfig } from '../services/settings.js';\nimport { logInfo } from '../utils/logger.js';\nimport { defineStore } from 'pinia';\nimport getTimezoneManager from '../services/timezoneDataProviderService.js';\nimport * as AttachmentService from '../services/attachmentService.js';\nimport usePrincipalsStore from './principals.js';\nimport useFetchedTimeRangesStore from './fetchedTimeRanges.js';\nimport useCalendarsStore from './calendars.js';\nimport useCalendarObjectsStore from './calendarObjects.js';\nexport default defineStore('settings', {\n  state: () => {\n    return {\n      // env\n      appVersion: null,\n      firstRun: null,\n      talkEnabled: false,\n      disableAppointments: false,\n      publicCalendars: null,\n      // user-defined calendar settings\n      eventLimit: null,\n      showTasks: null,\n      showWeekends: null,\n      showWeekNumbers: null,\n      skipPopover: null,\n      slotDuration: null,\n      defaultReminder: null,\n      tasksEnabled: false,\n      timezone: 'automatic',\n      hideEventExport: false,\n      forceEventAlarmType: false,\n      canSubscribeLink: true,\n      showResources: true,\n      // user-defined Nextcloud settings\n      momentLocale: 'en',\n      attachmentsFolder: '/Calendar',\n      attachmentsFolderCreated: false\n    };\n  },\n  getters: {\n    /**\n     * Gets the resolved timezone.\n     * If the timezone is set to automatic, it returns the user's current timezone\n     * Otherwise, it returns the Olsen timezone stored\n     *\n     * @param {object} state The pinia state\n     * @return {string}\n     */\n    getResolvedTimezone: state => state.timezone === 'automatic' ? detectTimezone() : state.timezone,\n    /**\n     * Gets the resolved timezone object.\n     * Falls back to UTC if timezone is invalid.\n     *\n     * @return {object} The calendar-js timezone object\n     */\n    getResolvedTimezoneObject() {\n      const timezone = this.getResolvedTimezone;\n      let timezoneObject = getTimezoneManager().getTimezoneForId(timezone);\n      if (!timezoneObject) {\n        timezoneObject = getTimezoneManager().getTimezoneForId('UTC');\n      }\n      return timezoneObject;\n    }\n  },\n  actions: {\n    /**\n     * Updates the user's setting for visibility of birthday calendar\n     *\n     * @return {Promise<void>}\n     */\n    async toggleBirthdayCalendarEnabled() {\n      const calendarsStore = useCalendarsStore();\n      const hasBirthdayCalendar = !!calendarsStore.getBirthdayCalendar;\n      if (hasBirthdayCalendar) {\n        const calendar = calendarsStore.getBirthdayCalendar;\n        await calendarsStore.deleteCalendar({\n          calendar\n        });\n      } else {\n        const davCalendar = await enableBirthdayCalendar();\n        const calendar = mapDavCollectionToCalendar(davCalendar);\n        calendarsStore.addCalendarMutation({\n          calendar\n        });\n      }\n    },\n    /**\n     * Updates the user's setting for event limit\n     *\n     * @return {Promise<void>}\n     */\n    async toggleEventLimitEnabled() {\n      const newState = !this.eventLimit;\n      const value = newState ? 'yes' : 'no';\n      await setConfig('eventLimit', value);\n      this.eventLimit = !this.eventLimit;\n    },\n    /**\n     * Updates the user's setting for visibility of event popover\n     *\n     * @return {Promise<void>}\n     */\n    async togglePopoverEnabled() {\n      const newState = !this.skipPopover;\n      const value = newState ? 'yes' : 'no';\n      await setConfig('skipPopover', value);\n      this.skipPopover = !this.skipPopover;\n    },\n    /**\n     * Updates the user's setting for visibility of weekends\n     *\n     * @return {Promise<void>}\n     */\n    async toggleWeekendsEnabled() {\n      const newState = !this.showWeekends;\n      const value = newState ? 'yes' : 'no';\n      await setConfig('showWeekends', value);\n      this.showWeekends = !this.showWeekends;\n    },\n    /**\n     * Updates the user's setting for visibility of tasks\n     *\n     * @return {Promise<void>}\n     */\n    async toggleTasksEnabled() {\n      const fetchedTimeRangesStore = useFetchedTimeRangesStore();\n      const calendarObjectsStore = useCalendarObjectsStore();\n      const newState = !this.showTasks;\n      const value = newState ? 'yes' : 'no';\n      await setConfig('showTasks', value);\n      this.showTasks = !this.showTasks;\n      fetchedTimeRangesStore.clearFetchedTimeRanges();\n      calendarObjectsStore.modificationCount++;\n    },\n    /**\n     * Updates the user's setting for visibility of week numbers\n     *\n     * @return {Promise<void>}\n     */\n    async toggleWeekNumberEnabled() {\n      const newState = !this.showWeekNumbers;\n      const value = newState ? 'yes' : 'no';\n      await setConfig('showWeekNr', value);\n      this.showWeekNumbers = !this.showWeekNumbers;\n    },\n    /**\n     * Updates the view to be used as initial view when opening\n     * the calendar app again\n     *\n     * @param {object} data The destructuring object\n     * @param {string} data.initialView New view to be used as initial view\n     * @return {Promise<void>}\n     */\n    async setInitialView(_ref) {\n      let {\n        initialView\n      } = _ref;\n      await setConfig('view', initialView);\n    },\n    /**\n     * Updates the user's preferred slotDuration\n     *\n     * @param {object} data The destructuring object\n     * @param {string} data.slotDuration The new slot duration\n     */\n    async setSlotDuration(_ref2) {\n      let {\n        slotDuration\n      } = _ref2;\n      if (this.slotDuration === slotDuration) {\n        return;\n      }\n      await setConfig('slotDuration', slotDuration);\n      this.slotDuration = slotDuration;\n    },\n    /**\n     * Updates the user's preferred defaultReminder\n     *\n     * @param {object} data The destructuring object\n     * @param {string} data.defaultReminder The new default reminder\n     */\n    async setDefaultReminder(_ref3) {\n      let {\n        defaultReminder\n      } = _ref3;\n      if (this.defaultReminder === defaultReminder) {\n        return;\n      }\n      await setConfig('defaultReminder', defaultReminder);\n      this.defaultReminder = defaultReminder;\n    },\n    /**\n     * Updates the user's timezone\n     *\n     * @param {object} data The destructuring object\n     * @param {string} data.timezoneId The new timezone\n     * @return {Promise<void>}\n     */\n    async setTimezone(_ref4) {\n      let {\n        timezoneId\n      } = _ref4;\n      if (this.timezone === timezoneId) {\n        return;\n      }\n      await setConfig('timezone', timezoneId);\n      this.timezone = timezoneId;\n    },\n    /**\n     * Updates the user's attachments folder\n     *\n     * @param {object} data The destructuring object\n     * @param {string} data.attachmentsFolder The new attachments folder\n     * @return {Promise<void>}\n     */\n    async setAttachmentsFolder(_ref5) {\n      let {\n        attachmentsFolder\n      } = _ref5;\n      if (this.attachmentsFolder === attachmentsFolder) {\n        return;\n      }\n      await setConfig('attachmentsFolder', attachmentsFolder);\n      this.attachmentsFolder = attachmentsFolder;\n      this.attachmentsFolderCreated = false;\n    },\n    /**\n     * Create the user's attachment folder if it doesn't exist and return its path\n     *\n     * @return {Promise<string>} The path of the user's attachments folder\n     */\n    async createAttachmentsFolder() {\n      const principalsStore = usePrincipalsStore();\n      if (this.attachmentsFolderCreated) {\n        return this.attachmentsFolder;\n      }\n      const userId = principalsStore.getCurrentUserPrincipal.dav.userId; /// TODO make work with new eventual principals.js\n      const path = await AttachmentService.createFolder(this.attachmentsFolder, userId);\n      if (path !== this.attachmentsFolder) {\n        await this.setAttachmentsFolder({\n          attachmentsFolder: path\n        });\n      }\n      this.attachmentsFolderCreated = true;\n      return path;\n    },\n    /**\n     * Initializes the calendar-js configuration\n     */\n    initializeCalendarJsConfig() {\n      setCalendarJsConfig('PRODID', `-//IDN nextcloud.com//Calendar app ${this.appVersion}//EN`);\n      setCalendarJsConfig('property-list-significant-change', ['SUMMARY', 'LOCATION', 'DESCRIPTION']);\n    },\n    /**\n     * Initialize settings\n     *\n     * @param {object} data The destructuring object\n     * @param {string} data.appVersion The version of the Nextcloud app\n     * @param {boolean} data.eventLimit Whether or not to limit number of visible events in grid view\n     * @param {boolean} data.firstRun Whether or not this is the first run\n     * @param {boolean} data.showWeekNumbers Whether or not to show week numbers\n     * @param {boolean} data.showTasks Whether or not to display tasks with a due-date\n     * @param {boolean} data.showWeekends Whether or not to display weekends\n     * @param {boolean} data.skipPopover Whether or not to skip the simple event popover\n     * @param {string} data.slotDuration The duration of one slot in the agendaView\n     * @param {string} data.defaultReminder The default reminder to set on newly created events\n     * @param {boolean} data.talkEnabled Whether or not the talk app is enabled\n     * @param {boolean} data.tasksEnabled Whether ot not the tasks app is enabled\n     * @param {string} data.timezone The timezone to view the calendar in. Either an Olsen timezone or \"automatic\"\n     * @param {boolean} data.hideEventExport\n     * @param {string} data.forceEventAlarmType\n     * @param {boolean} data.disableAppointments Allow to disable the appointments feature\n     * @param {boolean} data.canSubscribeLink\n     * @param {string} data.attachmentsFolder Default user's attachments folder\n     * @param {boolean} data.showResources Show or hide the resources tab\n     * @param {string} data.publicCalendars\n     */\n    loadSettingsFromServer(_ref6) {\n      let {\n        appVersion,\n        eventLimit,\n        firstRun,\n        showWeekNumbers,\n        showTasks,\n        showWeekends,\n        skipPopover,\n        slotDuration,\n        defaultReminder,\n        talkEnabled,\n        tasksEnabled,\n        timezone,\n        hideEventExport,\n        forceEventAlarmType,\n        disableAppointments,\n        canSubscribeLink,\n        attachmentsFolder,\n        showResources,\n        publicCalendars\n      } = _ref6;\n      logInfo(`\nInitial settings:\n\t- AppVersion: ${appVersion}\n\t- EventLimit: ${eventLimit}\n\t- FirstRun: ${firstRun}\n\t- ShowWeekNumbers: ${showWeekNumbers}\n\t- ShowTasks: ${showTasks}\n\t- ShowWeekends: ${showWeekends}\n\t- SkipPopover: ${skipPopover}\n\t- SlotDuration: ${slotDuration}\n\t- DefaultReminder: ${defaultReminder}\n\t- TalkEnabled: ${talkEnabled}\n\t- TasksEnabled: ${tasksEnabled}\n\t- Timezone: ${timezone}\n\t- HideEventExport: ${hideEventExport}\n\t- ForceEventAlarmType: ${forceEventAlarmType}\n\t- disableAppointments: ${disableAppointments}\n\t- CanSubscribeLink: ${canSubscribeLink}\n\t- attachmentsFolder: ${attachmentsFolder}\n\t- ShowResources: ${showResources}\n\t- PublicCalendars: ${publicCalendars}\n`);\n      this.appVersion = appVersion;\n      this.eventLimit = eventLimit;\n      this.firstRun = firstRun;\n      this.showWeekNumbers = showWeekNumbers;\n      this.showTasks = showTasks;\n      this.showWeekends = showWeekends;\n      this.skipPopover = skipPopover;\n      this.slotDuration = slotDuration;\n      this.defaultReminder = defaultReminder;\n      this.talkEnabled = talkEnabled;\n      this.tasksEnabled = tasksEnabled;\n      this.timezone = timezone;\n      this.hideEventExport = hideEventExport;\n      this.forceEventAlarmType = forceEventAlarmType;\n      this.disableAppointments = disableAppointments;\n      this.canSubscribeLink = canSubscribeLink;\n      this.attachmentsFolder = attachmentsFolder;\n      this.showResources = showResources;\n      this.publicCalendars = publicCalendars;\n    },\n    /**\n     * Sets the name of the moment.js locale to be used\n     *\n     * @param {object} data The destructuring object\n     * @param {string} data.locale The moment.js locale to be used\n     */\n    setMomentLocale(_ref7) {\n      let {\n        locale\n      } = _ref7;\n      logInfo(`Updated moment locale: ${locale}`);\n      this.momentLocale = locale;\n    }\n  }\n});","/**\n * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\nimport { AttendeeProperty, Property } from '@nextcloud/calendar-js';\nimport { translate as t } from '@nextcloud/l10n';\n\n/**\n * Get the factor for a given unit\n *\n * @param {string} unit The name of the unit to get the factor of\n * @return {number}\n */\nexport function getFactorForAlarmUnit(unit) {\n  switch (unit) {\n    case 'seconds':\n      return 1;\n    case 'minutes':\n      return 60;\n    case 'hours':\n      return 60 * 60;\n    case 'days':\n      return 24 * 60 * 60;\n    case 'weeks':\n      return 7 * 24 * 60 * 60;\n    default:\n      return 1;\n  }\n}\n\n/**\n * Gets the amount of days / weeks, unit from total seconds\n *\n * @param {number} totalSeconds Total amount of seconds\n * @return {{amount: number, unit: string}}\n */\nexport function getAmountAndUnitForTimedEvents(totalSeconds) {\n  // Before or after the event is handled somewhere else,\n  // so make sure totalSeconds is positive\n  totalSeconds = Math.abs(totalSeconds);\n\n  // Handle the special case of 0, so we don't show 0 weeks\n  if (totalSeconds === 0) {\n    return {\n      amount: 0,\n      unit: 'minutes'\n    };\n  }\n  if (totalSeconds % (7 * 24 * 60 * 60) === 0) {\n    return {\n      amount: totalSeconds / (7 * 24 * 60 * 60),\n      unit: 'weeks'\n    };\n  }\n  if (totalSeconds % (24 * 60 * 60) === 0) {\n    return {\n      amount: totalSeconds / (24 * 60 * 60),\n      unit: 'days'\n    };\n  }\n  if (totalSeconds % (60 * 60) === 0) {\n    return {\n      amount: totalSeconds / (60 * 60),\n      unit: 'hours'\n    };\n  }\n  if (totalSeconds % 60 === 0) {\n    return {\n      amount: totalSeconds / 60,\n      unit: 'minutes'\n    };\n  }\n  return {\n    amount: totalSeconds,\n    unit: 'seconds'\n  };\n}\n\n/**\n * Get the total amount of seconds based on amount and unit for timed events\n *\n * @param {number} amount Amount of unit\n * @param {string} unit Minutes/Hours/Days/Weeks\n * @param {boolean=} isBefore Whether the reminder is before or after the event\n * @return {number}\n */\nexport function getTotalSecondsFromAmountAndUnitForTimedEvents(amount, unit) {\n  let isBefore = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  return amount * getFactorForAlarmUnit(unit) * (isBefore ? -1 : 1);\n}\n\n/**\n * Gets the amount of days / weeks, unit, hours and minutes from total seconds\n *\n * @param {number} totalSeconds Total amount of seconds\n * @return {{amount: *, unit: *, hours: *, minutes: *}}\n */\nexport function getAmountHoursMinutesAndUnitForAllDayEvents(totalSeconds) {\n  const dayFactor = getFactorForAlarmUnit('days');\n  const hourFactor = getFactorForAlarmUnit('hours');\n  const minuteFactor = getFactorForAlarmUnit('minutes');\n  const isNegative = totalSeconds < 0;\n  totalSeconds = Math.abs(totalSeconds);\n  let dayPart = Math.floor(totalSeconds / dayFactor);\n  const hourPart = totalSeconds % dayFactor;\n  if (hourPart !== 0) {\n    if (isNegative) {\n      dayPart++;\n    }\n  }\n  let amount = 0;\n  let unit = null;\n  if (dayPart === 0) {\n    unit = 'days';\n  } else if (dayPart % 7 === 0) {\n    amount = dayPart / 7;\n    unit = 'weeks';\n  } else {\n    amount = dayPart;\n    unit = 'days';\n  }\n  let hours = Math.floor(hourPart / hourFactor);\n  const minutePart = hourPart % hourFactor;\n  let minutes = Math.floor(minutePart / minuteFactor);\n  if (isNegative) {\n    hours = 24 - hours;\n    if (minutes !== 0) {\n      hours--;\n      minutes = 60 - minutes;\n    }\n  }\n  return {\n    amount,\n    unit,\n    hours,\n    minutes\n  };\n}\n\n/**\n * Get the total amount of seconds for all-day events\n *\n * @param {number} amount amount of unit\n * @param {number} hours Time of reminder\n * @param {number} minutes Time of reminder\n * @param {string} unit days/weeks\n * @return {number}\n */\nexport function getTotalSecondsFromAmountHourMinutesAndUnitForAllDayEvents(amount, hours, minutes, unit) {\n  if (unit === 'weeks') {\n    amount *= 7;\n    unit = 'days';\n  }\n\n  // 0 is on the same day of the all-day event => positive\n  // 1 ... n before the event is negative\n  const isNegative = amount > 0;\n  if (isNegative) {\n    // If it's negative, we need to subtract one day\n    amount--;\n    // Convert days to seconds\n    amount *= getFactorForAlarmUnit(unit);\n    let invertedHours = 24 - hours;\n    let invertedMinutes = 0;\n    if (minutes !== 0) {\n      invertedHours--;\n      invertedMinutes = 60 - minutes;\n    }\n    amount += invertedHours * getFactorForAlarmUnit('hours');\n    amount += invertedMinutes * getFactorForAlarmUnit('minutes');\n    amount *= -1;\n  } else {\n    // Convert days to seconds\n    amount *= getFactorForAlarmUnit('days');\n    amount += hours * getFactorForAlarmUnit('hours');\n    amount += minutes * getFactorForAlarmUnit('minutes');\n  }\n  return amount;\n}\n\n/**\n * Propagate data from an event component to all EMAIL alarm components.\n * An alarm component must contain a description, summary and all attendees to be notified.\n * We don't have a separate UI for maintaining attendees of an alarm, so we just copy them from the event.\n *\n * https://www.rfc-editor.org/rfc/rfc5545#section-3.6.6\n *\n * @param {AbstractRecurringComponent} eventComponent\n */\nexport function updateAlarms(eventComponent) {\n  for (const alarmComponent of eventComponent.getAlarmIterator()) {\n    if (alarmComponent.action !== 'EMAIL' && alarmComponent.action !== 'DISPLAY') {\n      continue;\n    }\n    alarmComponent.deleteAllProperties('SUMMARY');\n    const summaryProperty = eventComponent.getFirstProperty('SUMMARY');\n    if (summaryProperty) {\n      alarmComponent.addProperty(summaryProperty.clone());\n    } else {\n      const defaultSummary = t('calendar', 'Untitled event');\n      alarmComponent.addProperty(new Property('SUMMARY', defaultSummary));\n    }\n    if (!alarmComponent.hasProperty('DESCRIPTION')) {\n      const defaultDescription = t('calendar', 'This is an event reminder.');\n      alarmComponent.addProperty(new Property('DESCRIPTION', defaultDescription));\n    }\n    alarmComponent.deleteAllProperties('ATTENDEE');\n    for (const attendee of eventComponent.getAttendeeIterator()) {\n      if (['RESOURCE', 'ROOM'].includes(attendee.userType)) {\n        continue;\n      }\n\n      // Only copy the email address (value) of the attendee\n      alarmComponent.addProperty(new AttendeeProperty('ATTENDEE', attendee.value));\n    }\n  }\n}","/**\n * SPDX-FileCopyrightText: 2021 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\n/**\n * Remove the mailto prefix from a URI and return it\n *\n * @param {string} uri URI to remove the prefix from\n * @return {string} URI without a mailto prefix\n */\nexport function removeMailtoPrefix(uri) {\n  if (typeof uri !== 'string') {\n    return '';\n  }\n  if (uri.startsWith('mailto:')) {\n    return uri.slice(7);\n  }\n  return uri;\n}\n\n/**\n * Add the mailto prefix to a URI if it doesn't have one yet and return it\n *\n * @param {string} uri URI to add the prefix to\n * @return {string} URI with a mailto prefix\n */\nexport function addMailtoPrefix(uri) {\n  if (typeof uri !== 'string') {\n    return 'mailto:';\n  }\n  if (uri.startsWith('mailto:')) {\n    return uri;\n  }\n  return `mailto:${uri}`;\n}\n\n/**\n * Get the display name of an organizer\n *\n * @param {?object} organizer Organizer object to extract a display name from\n * @return {string} Display name of given organizer\n */\nexport function organizerDisplayName(organizer) {\n  if (!organizer) {\n    return '';\n  }\n  if (organizer.commonName) {\n    return organizer.commonName;\n  }\n  return removeMailtoPrefix(organizer.uri);\n}\n\n/**\n * Check if the current user is an attendee\n *\n * @param {string} currentUserPrincipalEmail Email address of the current user\n * @param {string} organizer Email address of the organizer with prefix\n * @return {boolean} True if the current user is an attendee\n */\nexport function isOrganizer(currentUserPrincipalEmail, organizer) {\n  if (!organizer || !currentUserPrincipalEmail) {\n    return true;\n  }\n  return removeMailtoPrefix(organizer) === currentUserPrincipalEmail;\n}","/**\n * SPDX-FileCopyrightText: 2020 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\nimport { DateTimeValue } from '@nextcloud/calendar-js';\n\n/**\n * Get all recurrence-items in given range\n *\n * @param {object} calendarObject Calendar-object model\n * @param {Date} start Begin of time-range\n * @param {Date} end End of time-range\n * @return {Array}\n */\nconst getAllObjectsInTimeRange = (calendarObject, start, end) => {\n  const iterator = calendarObject.calendarComponent.getVObjectIterator();\n  const firstVObject = iterator.next().value;\n  if (!firstVObject) {\n    return [];\n  }\n  const s = DateTimeValue.fromJSDate(start, true);\n  const e = DateTimeValue.fromJSDate(end, true);\n  return firstVObject.recurrenceManager.getAllOccurrencesBetween(s, e);\n};\n\n/**\n * Get recurrence-item at exactly a given recurrence-Id\n *\n * @param {object} calendarObject Calendar-object model\n * @param {Date} recurrenceId RecurrenceId to retrieve\n * @return {AbstractRecurringComponent|null}\n */\nconst getObjectAtRecurrenceId = (calendarObject, recurrenceId) => {\n  const iterator = calendarObject.calendarComponent.getVObjectIterator();\n  const firstVObject = iterator.next().value;\n  if (!firstVObject) {\n    return null;\n  }\n  const d = DateTimeValue.fromJSDate(recurrenceId, true);\n  return firstVObject.recurrenceManager.getOccurrenceAtExactly(d);\n};\nexport { getAllObjectsInTimeRange, getObjectAtRecurrenceId };","/**\n * SPDX-FileCopyrightText: 2023 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\n// Code was taken from:\n//   - https://github.com/juliuste/closest-css-color\n//   - https://github.com/gausie/colour-proximity\n//   - https://github.com/gausie/colour-proximity/pull/3\n\nimport cssColors from 'css-color-names';\nimport sortBy from 'lodash/sortBy.js';\nimport pick from 'lodash/pick.js';\nimport uniqBy from 'lodash/uniqBy.js';\nimport colorString from 'color-string';\nconst uniqColorKeys = uniqBy(Object.keys(cssColors), c => cssColors[c]);\nconst filteredColors = pick(cssColors, uniqColorKeys);\nconst colors = sortBy(Object.keys(filteredColors).map(name => ({\n  name,\n  hex: filteredColors[name]\n})), c => c.hex);\nconst defaults = {\n  detailed: false\n};\n\n/**\n * Find the closest CSS color to a given hex color.\n *\n * Adapted from https://github.com/juliuste/closest-css-color\n *\n * Copyright (c) 2021, Julius Tens\n *\n * Permission to use, copy, modify, and/or distribute this software for any purpose with or without\n * fee is hereby granted, provided that the above copyright notice and this permission notice\n * appear in all copies.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS\n * SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE\n * AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\n * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT,\n * NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE\n * OF THIS SOFTWARE.\n *\n * @param {string} hex Hex color string\n * @param {object} opt Options\n * @param {boolean=} opt.detailed Return color object instead of just the name\n * @return {string|{name: string, hex: string}} Closest color name or object\n */\nexport default function closestColor(hex) {\n  let opt = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const options = {\n    ...defaults,\n    ...opt\n  };\n  const sortedColors = sortBy(colors, c => proximity(hex, c.hex));\n  if (options.detailed) {\n    return sortedColors[0];\n  }\n  return sortedColors[0].name;\n}\n\n/**\n * Calculate the proximity between two colors.\n *\n * Adapted from https://github.com/gausie/colour-proximity\n *\n * Copyright (c) 2013, Samuel Gaus\n *\n * @param {string} s1 Hex color string 1\n * @param {string} s2 Hex color string 2\n * @return {number}\n */\nfunction proximity(s1, s2) {\n  const c1 = rgb2lab(colorString.get.rgb(s1));\n  const c2 = rgb2lab(colorString.get.rgb(s2));\n  return Math.sqrt(Math.pow(c1[0] - c2[0], 2) + Math.pow(c1[1] - c2[1], 2) + Math.pow(c1[2] - c2[2], 2));\n}\n\n/**\n * Adapted from https://github.com/gausie/colour-proximity\n *\n * Copyright (c) 2013, Samuel Gaus\n *\n * @param {number[]} input RGB array\n */\nfunction rgb2lab(input) {\n  // This code is adapted from various functions at http://www.easyrgb.com/index.php?X=MATH\n\n  const rgb = [0, 0, 0];\n  const xyz = [0, 0, 0];\n  const Lab = [0, 0, 0];\n  for (let i = 0; i < input.length; i++) {\n    let value = input[i] / 255;\n    if (value > 0.04045) {\n      value = Math.pow((value + 0.055) / 1.055, 2.4);\n    } else {\n      value = value / 12.92;\n    }\n    rgb[i] = value * 100;\n  }\n  xyz[0] = (rgb[0] * 0.4124 + rgb[1] * 0.3576 + rgb[2] * 0.1805) / 95.047; // ref_X =  95.047   Observer= 2°, Illuminant= D65\n  xyz[1] = (rgb[0] * 0.2126 + rgb[1] * 0.7152 + rgb[2] * 0.0722) / 100.0; // ref_Y = 100.000\n  xyz[2] = (rgb[0] * 0.0193 + rgb[1] * 0.1192 + rgb[2] * 0.9505) / 108.883; // ref_Z = 108.883\n\n  for (let i = 0; i < 3; i++) {\n    let value = xyz[i];\n    if (value > 0.008856) {\n      value = Math.pow(value, 1 / 3);\n    } else {\n      value = 7.787 * value + 16 / 116;\n    }\n    xyz[i] = value;\n  }\n  Lab[0] = parseFloat((116 * xyz[1] - 16).toFixed(3));\n  Lab[1] = parseFloat((500 * (xyz[0] - xyz[1])).toFixed(3));\n  Lab[2] = parseFloat((200 * (xyz[1] - xyz[2])).toFixed(3));\n  return Lab;\n}","/**\n * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\nimport convert from 'color-convert';\nimport { uidToColor } from './uidToColor.js';\nimport css3Colors from 'css-color-names';\nimport closestColor from './closestColor.js';\n\n/**\n * Detect if a color is light or dark\n *\n * @param {object} data The destructuring object\n * @param {number} data.red Red part of the RGB\n * @param {number} data.green Green part of the RGB\n * @param {number} data.blue Blue part of the RGB\n * @return {boolean} true if color is light, false if color is dark\n */\nexport function isLight(_ref) {\n  let {\n    red,\n    green,\n    blue\n  } = _ref;\n  const brightness = (red * 299 + green * 587 + blue * 114) / 1000;\n  return brightness > 130;\n}\n\n/**\n * Get a text-color that's readable on a given background color\n *\n * @param {string} hexColor The hex color to get a text color for\n * @return {string} the matching text color\n */\nexport function generateTextColorForHex(hexColor) {\n  return generateTextColorForRGB(hexToRGB(hexColor));\n}\n\n/**\n * Get a text-color that's readable on a given background color\n *\n * @param {object} data The destructuring object\n * @param {number} data.red Red part of the RGB\n * @param {number} data.green Green part of the RGB\n * @param {number} data.blue Blue part of the RGB\n * @return {string}\n */\nexport function generateTextColorForRGB(_ref2) {\n  let {\n    red,\n    green,\n    blue\n  } = _ref2;\n  return isLight({\n    red,\n    green,\n    blue\n  }) ? '#000000' : '#FAFAFA';\n}\n\n/**\n * Convert hex string to RGB\n *\n * @param {string} hexColor The hex color to convert\n * @return {string} the RGB result\n */\nexport function hexToRGB(hexColor) {\n  if (hexColor == null) {\n    return {\n      red: 0,\n      green: 0,\n      blue: 0\n    };\n  }\n  const [red, green, blue] = convert.hex.rgb(hexColor.slice(1));\n  return {\n    red,\n    green,\n    blue\n  };\n}\n\n/**\n * Generates a hex color based on RGB string\n *\n * @param {string} uid The string to generate a color from\n * @return {string} The hex color\n */\nexport function uidToHexColor(uid) {\n  const color = uidToColor(uid);\n  return '#' + convert.rgb.hex(color.r, color.g, color.b);\n}\n\n/**\n * Detects a color from a given string\n *\n * @param {string} color The color to get the real RGB hex string from\n * @return {string|boolean|*} String if color detected, boolean if not\n */\nexport function detectColor(color) {\n  if (/^(#)((?:[A-Fa-f0-9]{3}){1,2})$/.test(color)) {\n    // #ff00ff and #f0f\n    return color;\n  } else if (/^((?:[A-Fa-f0-9]{3}){1,2})$/.test(color)) {\n    // ff00ff and f0f\n    return '#' + color;\n  } else if (/^(#)((?:[A-Fa-f0-9]{8}))$/.test(color)) {\n    // #ff00ffff and #f0ff\n    return color.slice(0, 7);\n  } else if (/^((?:[A-Fa-f0-9]{8}))$/.test(color)) {\n    // ff00ffff and f0ff\n    return '#' + color.slice(0, 6);\n  }\n  return false;\n}\n\n/**\n * Gets the HEX code for a css3 color name\n *\n * @param {string} colorName The name of the css3 color\n * @return {string | null} string of HEX if valid color, null if not\n */\nexport function getHexForColorName(colorName) {\n  return css3Colors[colorName] || null;\n}\n\n/**\n * Gets the closest css3 color name for a given HEX code\n *\n * @param {string} hex The HEX code to get a css3 color name for\n * @return {string}\n */\nexport function getClosestCSS3ColorNameForHex(hex) {\n  return closestColor(hex);\n}","/**\n * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\nimport logger from './logger.js';\n\n/**\n * returns a new Date object\n *\n * @return {Date}\n */\nexport function dateFactory() {\n  return new Date();\n}\n\n/**\n * formats a Date object as YYYYMMDD\n *\n * @param {Date} date Date to format\n * @return {string}\n */\nexport function getYYYYMMDDFromDate(date) {\n  return new Date(date.getTime() - date.getTimezoneOffset() * 60000).toISOString().split('T')[0];\n}\n\n/**\n * get unix time from date object\n *\n * @param {Date} date Date to format\n * @return {number}\n */\nexport function getUnixTimestampFromDate(date) {\n  return Math.floor(date.getTime() / 1000);\n}\n\n/**\n * Gets a Date-object based on the firstday param used in routes\n *\n * @param {string} firstDayParam The firstday param from the router\n * @return {Date}\n */\nexport function getDateFromFirstdayParam(firstDayParam) {\n  if (firstDayParam === 'now') {\n    return dateFactory();\n  }\n  const [year, month, date] = firstDayParam.split('-').map(str => parseInt(str, 10));\n  if (Number.isNaN(year) || Number.isNaN(month) || Number.isNaN(date)) {\n    logger.error('First day parameter contains non-numerical components, falling back to today');\n    return dateFactory();\n  }\n  const dateObject = dateFactory();\n  dateObject.setFullYear(year, month - 1, date);\n  dateObject.setHours(0, 0, 0, 0);\n  return dateObject;\n}\n\n/**\n * formats firstday param as YYYYMMDD\n *\n * @param {string} firstDayParam The firstday param from the router\n * @return {string}\n */\nexport function getYYYYMMDDFromFirstdayParam(firstDayParam) {\n  if (firstDayParam === 'now') {\n    return getYYYYMMDDFromDate(dateFactory());\n  }\n  return firstDayParam;\n}\n\n/**\n * Gets a date object based on the given DateTimeValue\n * Ignores given timezone-information\n *\n * @param {DateTimeValue} dateTimeValue Value to get date from\n * @return {Date}\n */\nexport function getDateFromDateTimeValue(dateTimeValue) {\n  return new Date(dateTimeValue.year, dateTimeValue.month - 1, dateTimeValue.day, dateTimeValue.hour, dateTimeValue.minute, 0, 0);\n}\n\n/**\n * modifies a date\n *\n * @param {Date} date Date object to modify\n * @param {object} data The destructuring object\n * @param {number} data.day Number of days to add\n * @param {number} data.week Number of weeks to add\n * @param {number} data.month Number of months to add\n * @param data.year\n * @return {Date}\n */\nexport function modifyDate(date, _ref) {\n  let {\n    day = 0,\n    week = 0,\n    month = 0,\n    year = 0\n  } = _ref;\n  date = new Date(date.getTime());\n  date.setDate(date.getDate() + day);\n  date.setDate(date.getDate() + week * 7);\n  date.setMonth(date.getMonth() + month);\n  date.setFullYear(date.getFullYear() + year);\n  return date;\n}","/**\n * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\nimport { createFreeBusyRequest, getParserManager } from '@nextcloud/calendar-js';\nimport { findSchedulingOutbox } from '../services/caldavService.js';\n\n/**\n * Gets the corresponding color for a given Free/Busy type\n *\n * @param {string} type The type of the FreeBusy property\n * @return {string}\n */\nexport function getColorForFBType() {\n  let type = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'BUSY';\n  switch (type) {\n    case 'FREE':\n      return 'rgba(255,255,255,0)';\n    case 'BUSY-TENTATIVE':\n      return 'rgba(184,129,0,0.3)';\n    case 'BUSY':\n      return 'rgba(217,24,18,0.3)';\n    case 'BUSY-UNAVAILABLE':\n      return 'rgba(219,219,219)';\n    default:\n      return 'rgba(0,113,173,0.3)';\n  }\n}\n\n// TODO: Tuple types (mixed array) will be added in jsdoc 4\n/* eslint-disable jsdoc/valid-types */\n/**\n * Generator that yields tuples of an attendee property and the corresponding free busy property\n * Only yields tuples where the attendee is actually blocked\n *\n * @generator\n * @param {DateTimeValue} start Start date\n * @param {DateTimeValue} end End date\n * @param {AttendeeProperty} organizer The organizer whose scheduling outbox to use\n * @param {AttendeeProperty[]} attendees Attendees to request the free busy times from\n * @yields {[AttendeeProperty, FreeBusyProperty]} Tuples of attendee property and free busy property where the attendee is blocked\n * @return {AsyncGenerator<[AttendeeProperty, FreeBusyProperty], void, void>} Generator that yields tuples of attendee property and free busy property where the attendee is blocked\n */\nexport async function* doFreeBusyRequest(start, end, organizer, attendees) {\n  const freeBusyComponent = createFreeBusyRequest(start, end, organizer, attendees);\n  const freeBusyICS = freeBusyComponent.toICS();\n  const outbox = await findSchedulingOutbox();\n  const freeBusyData = await outbox.freeBusyRequest(freeBusyICS);\n  for (const [, data] of Object.entries(freeBusyData)) {\n    if (!data.success) {\n      continue;\n    }\n    const parserManager = getParserManager();\n    const parser = parserManager.getParserForFileType('text/calendar');\n    parser.parse(data.calendarData);\n\n    // TODO: fix me upstream, parser only exports VEVENT, VJOURNAL and VTODO at the moment\n    const calendarComponent = parser._calendarComponent;\n    const freeBusyComponent = calendarComponent.getFirstComponent('VFREEBUSY');\n    if (!freeBusyComponent) {\n      continue;\n    }\n    for (const attendeeProperty of freeBusyComponent.getPropertyIterator('ATTENDEE')) {\n      for (const freeBusyProperty of freeBusyComponent.getPropertyIterator('FREEBUSY')) {\n        if (freeBusyProperty.type === 'FREE') {\n          // We care about anything BUT free slots\n          continue;\n        }\n        yield [attendeeProperty, freeBusyProperty];\n      }\n    }\n  }\n}\n/* eslint-disable jsdoc/valid-types */","/**\n * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\nimport { getLoggerBuilder } from '@nextcloud/logger';\nconst logger = getLoggerBuilder().setApp('calendar').detectUser().build();\n\n/**\n * Logs a debug message\n *\n * @param {string} message The message to log\n * @param {object=} context Additional context if needed\n */\nconst logDebug = function (message) {\n  let context = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  logger.debug(message, context);\n};\n\n/**\n * Logs an error message\n *\n * @param {string} message The message to log\n * @param {object=} context Additional context if needed\n */\nconst logError = function (message) {\n  let context = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  logger.error(message, context);\n};\n\n/**\n * Logs a fatal message\n *\n * @param {string} message The message to log\n * @param {object=} context Additional context if needed\n */\nconst logFatal = function (message) {\n  let context = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  logger.fatal(message, context);\n};\n\n/**\n * Logs an info message\n *\n * @param {string} message The message to log\n * @param {object=} context Additional context if needed\n */\nconst logInfo = function (message) {\n  let context = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  logger.info(message, context);\n};\n\n/**\n * Logs a warn message\n *\n * @param {string} message The message to log\n * @param {object=} context Additional context if needed\n */\nconst logWarn = function (message) {\n  let context = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  logger.warn(message, context);\n};\nexport default logger;\nexport { logDebug, logError, logFatal, logInfo, logWarn };","/**\n * SPDX-FileCopyrightText: 2018 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\nimport { getFirstDay, getLanguage, getLocale } from '@nextcloud/l10n';\nimport moment from '@nextcloud/moment';\n\n/**\n *\n * @return {Promise<string>}\n */\nexport default async function loadMomentLocalization() {\n  const locale = getLocale().replace('_', '-').toLowerCase();\n  const language = getLanguage().replace('_', '-').toLowerCase();\n  if (locale === language) {\n    return getLocaleFor(locale);\n  }\n  const [realLocale, realLanguage] = await Promise.all([getLocaleFor(locale), getLocaleFor(language)]);\n  if (realLocale === realLanguage) {\n    return realLocale;\n  }\n  const name = `nextcloud-calendar-fake-locale-${realLocale}-${realLanguage}`;\n  moment.defineLocale(name, {\n    parentLocale: realLanguage,\n    longDateFormat: {\n      LT: moment.localeData(realLocale).longDateFormat('LT'),\n      LTS: moment.localeData(realLocale).longDateFormat('LTS'),\n      L: moment.localeData(realLocale).longDateFormat('L'),\n      LL: moment.localeData(realLocale).longDateFormat('LL'),\n      LLL: moment.localeData(realLocale).longDateFormat('LLL'),\n      LLLL: moment.localeData(realLocale).longDateFormat('LLLL'),\n      l: moment.localeData(realLocale).longDateFormat('l'),\n      ll: moment.localeData(realLocale).longDateFormat('ll'),\n      lll: moment.localeData(realLocale).longDateFormat('lll'),\n      llll: moment.localeData(realLocale).longDateFormat('llll')\n    },\n    week: {\n      dow: getFirstDay(),\n      doy: moment.localeData(realLocale).firstDayOfYear()\n    }\n  });\n  return name;\n}\n\n/**\n * Dynamically loads the requested locale and returns the actually loaded locale\n *\n * @param {string} locale Name of locale to load\n * @return {Promise<string>}\n */\nasync function getLocaleFor(locale) {\n  // IMPORTANT: Keep each '/moment/local/...' string as is. Otherwise, webpack might not bundle\n  //            locale data because the contentRegExp fails to detect any files.\n  try {\n    // default load e.g. en-de\n    await import(`moment/locale/${locale}.js`);\n    return locale;\n  } catch (error) {\n    const splitLocale = locale.split('-');\n    try {\n      // failure: fallback to first part of locale, which\n      // should be language\n      locale = splitLocale[0];\n      await import(`moment/locale/${locale}.js`);\n      return locale;\n    } catch (e) {\n      // failure, fallback to english\n      console.debug('Fallback to locale', 'en');\n      // English is the default locale and doesn't need to imported.\n      // It is already included in moment.js.\n    }\n  }\n  return 'en';\n}","/**\n * SPDX-FileCopyrightText: 2024 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\nimport { t } from '@nextcloud/l10n';\n\n/**\n * Parse PROPFIND error when uploading a file and return a readable message.\n *\n * @param exception the error object\n */\nasync function parseUploadError(exception) {\n  try {\n    const responseText = await exception.response.data;\n    const parser = new DOMParser();\n    const xmlDoc = parser.parseFromString(responseText, 'application/xml');\n    const messageElement = xmlDoc.getElementsByTagName('s:message')[0];\n    return messageElement?.textContent;\n  } catch (parseError) {\n    console.error(t('calendar', 'Error while parsing a PROPFIND error'), parseError);\n  }\n}\nexport { parseUploadError };","/**\n * SPDX-FileCopyrightText: 2021 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\n/**\n * Generate a random hex id to use with vue components.\n *\n * WARNING: This method does not use a secure random generator and isn't suited for\n * cryptographic purposes.\n *\n * @return {string} A random hex id\n */\nexport function randomId() {\n  return Math.random().toString(16).slice(2);\n}","/**\n * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\n/**\n * Gets the ByDay and BySetPosition\n *\n * @param {Date} jsDate The date to get the weekday of\n * @return {object}\n */\nexport function getBySetPositionAndBySetFromDate(jsDate) {\n  const byDay = getWeekDayFromDate(jsDate);\n  let bySetPosition = 1;\n  let dayOfMonth = jsDate.getDate();\n  for (; dayOfMonth > 7; dayOfMonth -= 7) {\n    bySetPosition++;\n  }\n  return {\n    byDay,\n    bySetPosition\n  };\n}\n\n/**\n * Gets the string-representation of the weekday of a given date\n *\n * @param {Date} jsDate The date to get the weekday of\n * @return {string}\n */\nexport function getWeekDayFromDate(jsDate) {\n  switch (jsDate.getDay()) {\n    case 0:\n      return 'SU';\n    case 1:\n      return 'MO';\n    case 2:\n      return 'TU';\n    case 3:\n      return 'WE';\n    case 4:\n      return 'TH';\n    case 5:\n      return 'FR';\n    case 6:\n      return 'SA';\n    default:\n      throw TypeError('Invalid date-object given');\n  }\n}","/**\n * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\nimport { linkTo } from '@nextcloud/router';\n\n/**\n * Get URL to modify config-key\n *\n * @param {string} key URL of config-key to modify\n * @return {string}\n */\nexport function getLinkToConfig(key) {\n  return [linkTo('calendar', 'index.php'), 'v1/config', key].join('/');\n}","/**\n * SPDX-FileCopyrightText: 2018 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\nimport md5 from 'md5';\n\n/**\n * This is copied from nextcloud-vue for now, until it is exposed upstream.\n */\n\nexport const uidToColor = uid => {\n  // Normalize hash\n  let hash = uid.toLowerCase();\n\n  // Already a md5 hash?\n  if (hash.match(/^([0-9a-f]{4}-?){8}$/) === null) {\n    hash = md5(hash);\n  }\n  hash = hash.replace(/[^0-9a-f]/g, '');\n  const steps = 6;\n  const finalPalette = GenColors(steps);\n\n  /**\n   * Convert a string to an integer evenly\n   *\n   * @param {string} hash The string to convert\n   * @param {number} maximum The maximum value\n   * @return {number} The integer calculated\n   */\n  function hashToInt(hash, maximum) {\n    let finalInt = 0;\n    const result = [];\n\n    // Splitting evenly the string\n    for (let i = 0; i < hash.length; i++) {\n      // chars in md5 goes up to f, hex:16\n      result.push(parseInt(hash.charAt(i), 16) % 16);\n    }\n\n    // Adds up all results\n    for (const j in result) {\n      finalInt += result[j];\n    }\n\n    // chars in md5 goes up to f, hex:16\n    // make sure we're always using int in our operation\n    return parseInt(parseInt(finalInt, 10) % maximum, 10);\n  }\n  return finalPalette[hashToInt(hash, steps * 3)];\n};\n\n/**\n * Color object\n *\n * @param {number} r The red value\n * @param {number} g The green value\n * @param {number} b The blue value\n */\nfunction Color(r, g, b) {\n  this.r = r;\n  this.g = g;\n  this.b = b;\n}\n\n/**\n * Calculate the number of steps\n *\n * @param {number} steps The number of steps\n * @param {Array} ends The ends\n * @return {Array} Array containing the number of steps per color\n */\nfunction stepCalc(steps, ends) {\n  const step = new Array(3);\n  step[0] = (ends[1].r - ends[0].r) / steps;\n  step[1] = (ends[1].g - ends[0].g) / steps;\n  step[2] = (ends[1].b - ends[0].b) / steps;\n  return step;\n}\n\n/**\n * Create a color palette from two colors\n *\n * @param {number} steps The number of steps the palette has\n * @param {string} color1 The first color\n * @param {string} color2 The second color\n * @return {Array} The created palette array\n */\nfunction mixPalette(steps, color1, color2) {\n  const palette = [];\n  palette.push(color1);\n  const step = stepCalc(steps, [color1, color2]);\n  for (let i = 1; i < steps; i++) {\n    const r = parseInt(color1.r + step[0] * i, 10);\n    const g = parseInt(color1.g + step[1] * i, 10);\n    const b = parseInt(color1.b + step[2] * i, 10);\n    palette.push(new Color(r, g, b));\n  }\n  return palette;\n}\n\n/**\n * Generate colors from the official nextcloud color\n * You can provide how many colors you want (multiplied by 3)\n * if step = 6\n * 3 colors * 6 will result in 18 generated colors\n *\n * @param {number} [steps] Number of steps to go from a color to another\n * @return {object[]}\n */\nfunction GenColors(steps) {\n  if (!steps) {\n    steps = 6;\n  }\n  const red = new Color(182, 70, 157);\n  const yellow = new Color(221, 203, 85);\n  const blue = new Color(0, 130, 201); // Nextcloud blue\n\n  const palette1 = mixPalette(steps, red, yellow);\n  const palette2 = mixPalette(steps, yellow, blue);\n  const palette3 = mixPalette(steps, blue, red);\n  return palette1.concat(palette2).concat(palette3);\n}\nexport default uidToColor;","// Imports\nimport ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/noSourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.icon-close[data-v-a60f3f46] {\n  display: block;\n  height: 100%;\n}\n.modal__content[data-v-a60f3f46] {\n  padding: 50px;\n  margin-bottom: 95px;\n}\n.modal__content__actions[data-v-a60f3f46] {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n}\n.modal__content__actions__select[data-v-a60f3f46] {\n  width: 260px;\n}\n.modal__content__actions__date[data-v-a60f3f46] {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n.modal__content__actions__date > *[data-v-a60f3f46] {\n  margin-left: 5px;\n}\n.modal__content__header[data-v-a60f3f46] {\n  margin-bottom: 20px;\n}\n.modal__content__header h3[data-v-a60f3f46] {\n  font-weight: 500;\n}\n.modal__content__header__attendees__user-bubble[data-v-a60f3f46] {\n  margin-right: 5px;\n}\n.modal__content__footer[data-v-a60f3f46] {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-top: 20px;\n}\n.modal__content__footer__title h3[data-v-a60f3f46] {\n  font-weight: 500;\n}\n.modal__content__footer__title__timezone[data-v-a60f3f46] {\n  color: var(--color-text-lighter);\n}\n[data-v-a60f3f46] .vs__search {\n  text-overflow: ellipsis;\n}\n[data-v-a60f3f46] .mx-input {\n  height: 38px !important;\n}`, \"\"]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/noSourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.blocking-event-free-busy {\n  z-index: 3 !important;\n}\n.free-busy-block {\n  opacity: 0.7 !important;\n}`, \"\"]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/noSourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `\n[data-v-d74a293a] .avatardiv {\n\toverflow: visible !important;\n}\n`, \"\"]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","var map = {\n\t\"./af.js\": [\n\t\t\"./node_modules/moment/locale/af.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./ar-dz.js\": [\n\t\t\"./node_modules/moment/locale/ar-dz.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./ar-kw.js\": [\n\t\t\"./node_modules/moment/locale/ar-kw.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./ar-ly.js\": [\n\t\t\"./node_modules/moment/locale/ar-ly.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./ar-ma.js\": [\n\t\t\"./node_modules/moment/locale/ar-ma.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./ar-ps.js\": [\n\t\t\"./node_modules/moment/locale/ar-ps.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./ar-sa.js\": [\n\t\t\"./node_modules/moment/locale/ar-sa.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./ar-tn.js\": [\n\t\t\"./node_modules/moment/locale/ar-tn.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./ar.js\": [\n\t\t\"./node_modules/moment/locale/ar.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./az.js\": [\n\t\t\"./node_modules/moment/locale/az.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./be.js\": [\n\t\t\"./node_modules/moment/locale/be.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./bg.js\": [\n\t\t\"./node_modules/moment/locale/bg.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./bm.js\": [\n\t\t\"./node_modules/moment/locale/bm.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./bn-bd.js\": [\n\t\t\"./node_modules/moment/locale/bn-bd.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./bn.js\": [\n\t\t\"./node_modules/moment/locale/bn.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./bo.js\": [\n\t\t\"./node_modules/moment/locale/bo.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./br.js\": [\n\t\t\"./node_modules/moment/locale/br.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./bs.js\": [\n\t\t\"./node_modules/moment/locale/bs.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./ca.js\": [\n\t\t\"./node_modules/moment/locale/ca.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./cs.js\": [\n\t\t\"./node_modules/moment/locale/cs.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./cv.js\": [\n\t\t\"./node_modules/moment/locale/cv.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./cy.js\": [\n\t\t\"./node_modules/moment/locale/cy.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./da.js\": [\n\t\t\"./node_modules/moment/locale/da.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./de-at.js\": [\n\t\t\"./node_modules/moment/locale/de-at.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./de-ch.js\": [\n\t\t\"./node_modules/moment/locale/de-ch.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./de.js\": [\n\t\t\"./node_modules/moment/locale/de.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./dv.js\": [\n\t\t\"./node_modules/moment/locale/dv.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./el.js\": [\n\t\t\"./node_modules/moment/locale/el.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./en-au.js\": [\n\t\t\"./node_modules/moment/locale/en-au.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./en-ca.js\": [\n\t\t\"./node_modules/moment/locale/en-ca.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./en-gb.js\": [\n\t\t\"./node_modules/moment/locale/en-gb.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./en-ie.js\": [\n\t\t\"./node_modules/moment/locale/en-ie.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./en-il.js\": [\n\t\t\"./node_modules/moment/locale/en-il.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./en-in.js\": [\n\t\t\"./node_modules/moment/locale/en-in.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./en-nz.js\": [\n\t\t\"./node_modules/moment/locale/en-nz.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./en-sg.js\": [\n\t\t\"./node_modules/moment/locale/en-sg.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./eo.js\": [\n\t\t\"./node_modules/moment/locale/eo.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./es-do.js\": [\n\t\t\"./node_modules/moment/locale/es-do.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./es-mx.js\": [\n\t\t\"./node_modules/moment/locale/es-mx.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./es-us.js\": [\n\t\t\"./node_modules/moment/locale/es-us.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./es.js\": [\n\t\t\"./node_modules/moment/locale/es.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./et.js\": [\n\t\t\"./node_modules/moment/locale/et.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./eu.js\": [\n\t\t\"./node_modules/moment/locale/eu.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./fa.js\": [\n\t\t\"./node_modules/moment/locale/fa.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./fi.js\": [\n\t\t\"./node_modules/moment/locale/fi.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./fil.js\": [\n\t\t\"./node_modules/moment/locale/fil.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./fo.js\": [\n\t\t\"./node_modules/moment/locale/fo.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./fr-ca.js\": [\n\t\t\"./node_modules/moment/locale/fr-ca.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./fr-ch.js\": [\n\t\t\"./node_modules/moment/locale/fr-ch.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./fr.js\": [\n\t\t\"./node_modules/moment/locale/fr.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./fy.js\": [\n\t\t\"./node_modules/moment/locale/fy.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./ga.js\": [\n\t\t\"./node_modules/moment/locale/ga.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./gd.js\": [\n\t\t\"./node_modules/moment/locale/gd.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./gl.js\": [\n\t\t\"./node_modules/moment/locale/gl.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./gom-deva.js\": [\n\t\t\"./node_modules/moment/locale/gom-deva.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./gom-latn.js\": [\n\t\t\"./node_modules/moment/locale/gom-latn.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./gu.js\": [\n\t\t\"./node_modules/moment/locale/gu.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./he.js\": [\n\t\t\"./node_modules/moment/locale/he.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./hi.js\": [\n\t\t\"./node_modules/moment/locale/hi.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./hr.js\": [\n\t\t\"./node_modules/moment/locale/hr.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./hu.js\": [\n\t\t\"./node_modules/moment/locale/hu.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./hy-am.js\": [\n\t\t\"./node_modules/moment/locale/hy-am.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./id.js\": [\n\t\t\"./node_modules/moment/locale/id.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./is.js\": [\n\t\t\"./node_modules/moment/locale/is.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./it-ch.js\": [\n\t\t\"./node_modules/moment/locale/it-ch.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./it.js\": [\n\t\t\"./node_modules/moment/locale/it.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./ja.js\": [\n\t\t\"./node_modules/moment/locale/ja.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./jv.js\": [\n\t\t\"./node_modules/moment/locale/jv.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./ka.js\": [\n\t\t\"./node_modules/moment/locale/ka.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./kk.js\": [\n\t\t\"./node_modules/moment/locale/kk.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./km.js\": [\n\t\t\"./node_modules/moment/locale/km.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./kn.js\": [\n\t\t\"./node_modules/moment/locale/kn.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./ko.js\": [\n\t\t\"./node_modules/moment/locale/ko.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./ku-kmr.js\": [\n\t\t\"./node_modules/moment/locale/ku-kmr.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./ku.js\": [\n\t\t\"./node_modules/moment/locale/ku.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./ky.js\": [\n\t\t\"./node_modules/moment/locale/ky.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./lb.js\": [\n\t\t\"./node_modules/moment/locale/lb.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./lo.js\": [\n\t\t\"./node_modules/moment/locale/lo.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./lt.js\": [\n\t\t\"./node_modules/moment/locale/lt.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./lv.js\": [\n\t\t\"./node_modules/moment/locale/lv.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./me.js\": [\n\t\t\"./node_modules/moment/locale/me.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./mi.js\": [\n\t\t\"./node_modules/moment/locale/mi.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./mk.js\": [\n\t\t\"./node_modules/moment/locale/mk.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./ml.js\": [\n\t\t\"./node_modules/moment/locale/ml.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./mn.js\": [\n\t\t\"./node_modules/moment/locale/mn.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./mr.js\": [\n\t\t\"./node_modules/moment/locale/mr.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./ms-my.js\": [\n\t\t\"./node_modules/moment/locale/ms-my.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./ms.js\": [\n\t\t\"./node_modules/moment/locale/ms.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./mt.js\": [\n\t\t\"./node_modules/moment/locale/mt.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./my.js\": [\n\t\t\"./node_modules/moment/locale/my.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./nb.js\": [\n\t\t\"./node_modules/moment/locale/nb.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./ne.js\": [\n\t\t\"./node_modules/moment/locale/ne.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./nl-be.js\": [\n\t\t\"./node_modules/moment/locale/nl-be.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./nl.js\": [\n\t\t\"./node_modules/moment/locale/nl.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./nn.js\": [\n\t\t\"./node_modules/moment/locale/nn.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./oc-lnc.js\": [\n\t\t\"./node_modules/moment/locale/oc-lnc.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./pa-in.js\": [\n\t\t\"./node_modules/moment/locale/pa-in.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./pl.js\": [\n\t\t\"./node_modules/moment/locale/pl.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./pt-br.js\": [\n\t\t\"./node_modules/moment/locale/pt-br.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./pt.js\": [\n\t\t\"./node_modules/moment/locale/pt.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./ro.js\": [\n\t\t\"./node_modules/moment/locale/ro.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./ru.js\": [\n\t\t\"./node_modules/moment/locale/ru.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./sd.js\": [\n\t\t\"./node_modules/moment/locale/sd.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./se.js\": [\n\t\t\"./node_modules/moment/locale/se.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./si.js\": [\n\t\t\"./node_modules/moment/locale/si.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./sk.js\": [\n\t\t\"./node_modules/moment/locale/sk.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./sl.js\": [\n\t\t\"./node_modules/moment/locale/sl.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./sq.js\": [\n\t\t\"./node_modules/moment/locale/sq.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./sr-cyrl.js\": [\n\t\t\"./node_modules/moment/locale/sr-cyrl.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./sr.js\": [\n\t\t\"./node_modules/moment/locale/sr.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./ss.js\": [\n\t\t\"./node_modules/moment/locale/ss.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./sv.js\": [\n\t\t\"./node_modules/moment/locale/sv.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./sw.js\": [\n\t\t\"./node_modules/moment/locale/sw.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./ta.js\": [\n\t\t\"./node_modules/moment/locale/ta.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./te.js\": [\n\t\t\"./node_modules/moment/locale/te.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./tet.js\": [\n\t\t\"./node_modules/moment/locale/tet.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./tg.js\": [\n\t\t\"./node_modules/moment/locale/tg.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./th.js\": [\n\t\t\"./node_modules/moment/locale/th.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./tk.js\": [\n\t\t\"./node_modules/moment/locale/tk.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./tl-ph.js\": [\n\t\t\"./node_modules/moment/locale/tl-ph.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./tlh.js\": [\n\t\t\"./node_modules/moment/locale/tlh.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./tr.js\": [\n\t\t\"./node_modules/moment/locale/tr.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./tzl.js\": [\n\t\t\"./node_modules/moment/locale/tzl.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./tzm-latn.js\": [\n\t\t\"./node_modules/moment/locale/tzm-latn.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./tzm.js\": [\n\t\t\"./node_modules/moment/locale/tzm.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./ug-cn.js\": [\n\t\t\"./node_modules/moment/locale/ug-cn.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./uk.js\": [\n\t\t\"./node_modules/moment/locale/uk.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./ur.js\": [\n\t\t\"./node_modules/moment/locale/ur.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./uz-latn.js\": [\n\t\t\"./node_modules/moment/locale/uz-latn.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./uz.js\": [\n\t\t\"./node_modules/moment/locale/uz.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./vi.js\": [\n\t\t\"./node_modules/moment/locale/vi.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./x-pseudo.js\": [\n\t\t\"./node_modules/moment/locale/x-pseudo.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./yo.js\": [\n\t\t\"./node_modules/moment/locale/yo.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./zh-cn.js\": [\n\t\t\"./node_modules/moment/locale/zh-cn.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./zh-hk.js\": [\n\t\t\"./node_modules/moment/locale/zh-hk.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./zh-mo.js\": [\n\t\t\"./node_modules/moment/locale/zh-mo.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t],\n\t\"./zh-tw.js\": [\n\t\t\"./node_modules/moment/locale/zh-tw.js\",\n\t\t\"vendors-node_modules_moment_locale_af_js-node_modules_moment_locale_ar-dz_js-node_modules_mom-582c96\",\n\t\t\"node_modules_moment_locale_sync_recursive_\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(() => {\n\t\treturn __webpack_require__.t(id, 7 | 16);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = \"./node_modules/moment/locale lazy recursive ^\\\\.\\\\/.*\\\\.js$\";\nmodule.exports = webpackAsyncContext;","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./InviteesListSearch.vue?vue&type=style&index=0&id=d74a293a&scoped=true&lang=css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./InviteesListSearch.vue?vue&type=style&index=0&id=d74a293a&scoped=true&lang=css\";\n       export default content && content.locals ? content.locals : undefined;\n","import { render, staticRenderFns } from \"./FreeBusy.vue?vue&type=template&id=a60f3f46&scoped=true\"\nimport script from \"./FreeBusy.vue?vue&type=script&lang=js\"\nexport * from \"./FreeBusy.vue?vue&type=script&lang=js\"\nimport style0 from \"./FreeBusy.vue?vue&type=style&index=0&id=a60f3f46&lang=scss&scoped=true\"\nimport style1 from \"./FreeBusy.vue?vue&type=style&index=1&id=a60f3f46&lang=scss\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"a60f3f46\",\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/var/www/nextcloud/apps/calendar/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('a60f3f46')) {\n      api.createRecord('a60f3f46', component.options)\n    } else {\n      api.reload('a60f3f46', component.options)\n    }\n    module.hot.accept(\"./FreeBusy.vue?vue&type=template&id=a60f3f46&scoped=true\", function () {\n      api.rerender('a60f3f46', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"src/components/Editor/FreeBusy/FreeBusy.vue\"\nexport default component.exports","import { render, staticRenderFns } from \"./InviteesListSearch.vue?vue&type=template&id=d74a293a&scoped=true\"\nimport script from \"./InviteesListSearch.vue?vue&type=script&lang=js\"\nexport * from \"./InviteesListSearch.vue?vue&type=script&lang=js\"\nimport style0 from \"./InviteesListSearch.vue?vue&type=style&index=0&id=d74a293a&scoped=true&lang=css\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"d74a293a\",\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/var/www/nextcloud/apps/calendar/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('d74a293a')) {\n      api.createRecord('d74a293a', component.options)\n    } else {\n      api.reload('d74a293a', component.options)\n    }\n    module.hot.accept(\"./InviteesListSearch.vue?vue&type=template&id=d74a293a&scoped=true\", function () {\n      api.rerender('d74a293a', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"src/components/Editor/Invitees/InviteesListSearch.vue\"\nexport default component.exports","import mod from \"-!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./FreeBusy.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./FreeBusy.vue?vue&type=script&lang=js\"","import mod from \"-!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./InviteesListSearch.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./InviteesListSearch.vue?vue&type=script&lang=js\"","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/resolve-url-loader/index.js!../../../../node_modules/sass-loader/dist/cjs.js??clonedRuleSet-2.use[3]!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./FreeBusy.vue?vue&type=style&index=0&id=a60f3f46&lang=scss&scoped=true\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"799e1154\", content, false, {});\n// Hot Module Replacement\nif(module.hot) {\n // When the styles change, update the <style> tags\n if(!content.locals) {\n   module.hot.accept(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/resolve-url-loader/index.js!../../../../node_modules/sass-loader/dist/cjs.js??clonedRuleSet-2.use[3]!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./FreeBusy.vue?vue&type=style&index=0&id=a60f3f46&lang=scss&scoped=true\", function() {\n     var newContent = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/resolve-url-loader/index.js!../../../../node_modules/sass-loader/dist/cjs.js??clonedRuleSet-2.use[3]!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./FreeBusy.vue?vue&type=style&index=0&id=a60f3f46&lang=scss&scoped=true\");\n     if(newContent.__esModule) newContent = newContent.default;\n     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n     update(newContent);\n   });\n }\n // When the module is disposed, remove the <style> tags\n module.hot.dispose(function() { update(); });\n}","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/resolve-url-loader/index.js!../../../../node_modules/sass-loader/dist/cjs.js??clonedRuleSet-2.use[3]!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./FreeBusy.vue?vue&type=style&index=1&id=a60f3f46&lang=scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"3855a3c0\", content, false, {});\n// Hot Module Replacement\nif(module.hot) {\n // When the styles change, update the <style> tags\n if(!content.locals) {\n   module.hot.accept(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/resolve-url-loader/index.js!../../../../node_modules/sass-loader/dist/cjs.js??clonedRuleSet-2.use[3]!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./FreeBusy.vue?vue&type=style&index=1&id=a60f3f46&lang=scss\", function() {\n     var newContent = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/resolve-url-loader/index.js!../../../../node_modules/sass-loader/dist/cjs.js??clonedRuleSet-2.use[3]!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./FreeBusy.vue?vue&type=style&index=1&id=a60f3f46&lang=scss\");\n     if(newContent.__esModule) newContent = newContent.default;\n     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n     update(newContent);\n   });\n }\n // When the module is disposed, remove the <style> tags\n module.hot.dispose(function() { update(); });\n}"],"names":[],"sourceRoot":""}