{"version":3,"file":"calendar-src_views_ContactsMenuAvailability_vue.js?v=8cbd75be1dc48ce898d1","mappingsjGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAkBA;AACA;;;;;;;;;;;;;;;ACtCA","sources":["webpack:///calendar/src/views/ContactsMenuAvailability.vue?vue&type=script&lang=js","webpack:///calendar/src/views/ContactsMenuAvailability.vue?vue&type=template&id=516832f2&scoped=true","webpack:///calendar/src/views/ContactsMenuAvailability.vue","webpack://calendar/./src/views/ContactsMenuAvailability.vue?8ddd","webpack://calendar/./src/views/ContactsMenuAvailability.vue?a576"],"sourcesContent":["import { mapStores } from 'pinia';\nimport usePrincipalsStore from '../store/principals.js';\nimport useSettingsStore from '../store/settings.js';\nimport { mapAttendeePropertyToAttendeeObject, mapPrincipalObjectToAttendeeObject } from '../models/attendee.js';\nimport loadMomentLocalization from '../utils/moment.js';\nimport { initializeClientForUserView } from '../services/caldavService.js';\nimport getTimezoneManager from '../services/timezoneDataProviderService.js';\nimport FreeBusy from '../components/Editor/FreeBusy/FreeBusy.vue';\nimport { AttendeeProperty } from '@nextcloud/calendar-js';\nexport default {\n  name: 'ContactsMenuAvailability',\n  components: {\n    FreeBusy\n  },\n  props: {\n    userId: {\n      type: String,\n      required: true\n    },\n    userDisplayName: {\n      type: String,\n      required: true\n    },\n    userEmail: {\n      type: String,\n      required: true\n    }\n  },\n  data() {\n    const initialAttendee = AttendeeProperty.fromNameAndEMail(this.userDisplayName, this.userEmail);\n    const attendees = [mapAttendeePropertyToAttendeeObject(initialAttendee)];\n    return {\n      initialized: false,\n      attendees\n    };\n  },\n  computed: {\n    ...mapStores(usePrincipalsStore, useSettingsStore),\n    dialogName() {\n      return t('calendar', 'Availability of {displayName}', {\n        displayName: this.userDisplayName\n      });\n    },\n    startDate() {\n      return new Date();\n    },\n    endDate() {\n      // Let's assign a slot of one hour as a default for now\n      const date = new Date(this.startDate);\n      date.setHours(date.getHours() + 1);\n      return date;\n    },\n    organizer() {\n      if (!this.principalsStore.getCurrentUserPrincipal) {\n        throw new Error('No principal available for current user');\n      }\n      return mapPrincipalObjectToAttendeeObject(this.principalsStore.getCurrentUserPrincipal, true);\n    }\n  },\n  async created() {\n    this.initSettings();\n    await initializeClientForUserView();\n    await this.principalsStore.fetchCurrentUserPrincipal();\n    getTimezoneManager();\n    await this.loadMomentLocale();\n    this.initialized = true;\n  },\n  methods: {\n    initSettings() {\n      this.settingsStore.loadSettingsFromServer({\n        timezone: 'automatic'\n      });\n      this.settingsStore.initializeCalendarJsConfig();\n    },\n    async loadMomentLocale() {\n      const locale = await loadMomentLocalization();\n      this.settingsStore.setMomentLocale({\n        locale\n      });\n    },\n    addAttendee(_ref) {\n      let {\n        commonName,\n        email\n      } = _ref;\n      this.attendees.push(mapAttendeePropertyToAttendeeObject(AttendeeProperty.fromNameAndEMail(commonName, email)));\n    },\n    removeAttendee(_ref2) {\n      let {\n        email\n      } = _ref2;\n      this.attendees = this.attendees.filter(att => att.uri !== email);\n    },\n    close() {\n      this.$destroy();\n    }\n  }\n};","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _vm.initialized ? _c(\"FreeBusy\", {\n    attrs: {\n      \"dialog-name\": _vm.dialogName,\n      \"start-date\": _vm.startDate,\n      \"end-date\": _vm.endDate,\n      organizer: _vm.organizer,\n      attendees: _vm.attendees,\n      \"disable-find-time\": true\n    },\n    on: {\n      \"add-attendee\": _vm.addAttendee,\n      \"remove-attendee\": _vm.removeAttendee,\n      close: _vm.close\n    }\n  }) : _vm._e();\n};\nvar staticRenderFns = [];\nrender._withStripped = true;\nexport { render, staticRenderFns };","import { render, staticRenderFns } from \"./ContactsMenuAvailability.vue?vue&type=template&id=516832f2&scoped=true\"\nimport script from \"./ContactsMenuAvailability.vue?vue&type=script&lang=js\"\nexport * from \"./ContactsMenuAvailability.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"516832f2\",\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/var/www/nextcloud/apps/calendar/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('516832f2')) {\n      api.createRecord('516832f2', component.options)\n    } else {\n      api.reload('516832f2', component.options)\n    }\n    module.hot.accept(\"./ContactsMenuAvailability.vue?vue&type=template&id=516832f2&scoped=true\", function () {\n      api.rerender('516832f2', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"src/views/ContactsMenuAvailability.vue\"\nexport default component.exports","import mod from \"-!../../node_modules/babel-loader/lib/index.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ContactsMenuAvailability.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../node_modules/babel-loader/lib/index.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ContactsMenuAvailability.vue?vue&type=script&lang=js\"","export * from \"-!../../node_modules/babel-loader/lib/index.js!../../node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[3]!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ContactsMenuAvailability.vue?vue&type=template&id=516832f2&scoped=true\""],"names":[],"sourceRoot":""}