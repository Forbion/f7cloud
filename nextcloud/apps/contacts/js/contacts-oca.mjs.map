{"version":3,"file":"contacts-oca.mjs","sources":["../node_modules/vue-material-design-icons/AccountMultiple.vue","../src/views/ReadOnlyContactDetails.vue","../src/oca/mountContactDetails.js","../src/oca.js"],"sourcesContent":["<template>\n  <span v-bind=\"$attrs\"\n        :aria-hidden=\"title ? null : 'true'\"\n        :aria-label=\"title\"\n        class=\"material-design-icon account-multiple-icon\"\n        role=\"img\"\n        @click=\"$emit('click', $event)\">\n    <svg :fill=\"fillColor\"\n         class=\"material-design-icon__svg\"\n         :width=\"size\"\n         :height=\"size\"\n         viewBox=\"0 0 24 24\">\n      <path d=\"M16 17V19H2V17S2 13 9 13 16 17 16 17M12.5 7.5A3.5 3.5 0 1 0 9 11A3.5 3.5 0 0 0 12.5 7.5M15.94 13A5.32 5.32 0 0 1 18 17V19H22V17S22 13.37 15.94 13M15 4A3.39 3.39 0 0 0 13.07 4.59A5 5 0 0 1 13.07 10.41A3.39 3.39 0 0 0 15 11A3.5 3.5 0 0 0 15 4Z\">\n        <title v-if=\"title\">{{ title }}</title>\n      </path>\n    </svg>\n  </span>\n</template>\n\n<script>\nexport default {\n  name: \"AccountMultipleIcon\",\n  emits: ['click'],\n  props: {\n    title: {\n      type: String,\n    },\n    fillColor: {\n      type: String,\n      default: \"currentColor\"\n    },\n    size: {\n      type: Number,\n      default: 24\n    }\n  }\n}\n</script>","<!--\n  - SPDX-FileCopyrightText: 2024 Nextcloud GmbH and Nextcloud contributors\n  - SPDX-License-Identifier: AGPL-3.0-or-later\n-->\n\n<template>\n\t<div class=\"display-contact-details\">\n\t\t<div v-if=\"loading\" class=\"recipient-details-loading\">\n\t\t\t<NcLoadingIcon />\n\t\t</div>\n\t\t<!-- nothing selected or contact not found -->\n\t\t<NcEmptyContent v-else-if=\"!contact\"\n\t\t\tclass=\"empty-content\"\n\t\t\t:name=\"t('mail', 'No data for this contact')\"\n\t\t\t:description=\"t('mail', 'No data for this contact on their profile')\">\n\t\t\t<template #icon>\n\t\t\t\t<IconContact :size=\"20\" />\n\t\t\t</template>\n\t\t</NcEmptyContent>\n\t\t<div v-else\n\t\t\tclass=\"recipient-details-content\">\n\t\t\t<div class=\"contact-title\">\n\t\t\t\t<h6>{{ contact.fullName }}</h6>\n\t\t\t\t<!-- Subtitle -->\n\t\t\t\t<span v-html=\"formattedSubtitle\" />\n\t\t\t</div>\n\t\t\t<div class=\"contact-details-wrapper\">\n\t\t\t\t<div v-for=\"(properties, name) in groupedProperties\"\n\t\t\t\t\t:key=\"name\">\n\t\t\t\t\t<ContactDetailsProperty v-for=\"(property, index) in properties\"\n\t\t\t\t\t\t:key=\"`${index}-${contact.key}-${property.name}`\"\n\t\t\t\t\t\t:is-first-property=\"index === 0\"\n\t\t\t\t\t\t:is-last-property=\"index === properties.length - 1\"\n\t\t\t\t\t\t:property=\"property\"\n\t\t\t\t\t\t:contact=\"contact\"\n\t\t\t\t\t\t:local-contact=\"localContact\"\n\t\t\t\t\t\t:contacts=\"[contact]\"\n\t\t\t\t\t\t:is-read-only=\"true\"\n\t\t\t\t\t\t:bus=\"bus\" />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nimport escape from 'lodash/fp/escape.js'\nimport { NcEmptyContent, NcLoadingIcon } from '@nextcloud/vue'\nimport IconContact from 'vue-material-design-icons/AccountMultiple.vue'\nimport mitt from 'mitt'\nimport { namespaces as NS } from '@nextcloud/cdav-library'\nimport { loadState } from '@nextcloud/initial-state'\nimport ContactDetailsProperty from '../components/ContactDetails/ContactDetailsProperty.vue'\nimport Contact from '../models/contact.js'\nimport rfcProps from '../models/rfcProps.js'\nimport validate from '../services/validate.js'\nimport client from '../services/cdav.js'\nimport usePrincipalsStore from '../store/principals.js'\nimport IsMobileMixin from '../mixins/IsMobileMixin.ts'\n\nconst { profileEnabled } = loadState('user_status', 'profileEnabled', false)\n\nexport default {\n\tname: 'ReadOnlyContactDetails',\n\n\tcomponents: {\n\t\tContactDetailsProperty,\n\t\tNcEmptyContent,\n\t\tIconContact,\n\t\tNcLoadingIcon,\n\t},\n\n\tmixins: [IsMobileMixin],\n\n\tprops: {\n\t\tcontactEmailAddress: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t},\n\t\tdesc: {\n\t\t\ttype: String,\n\t\t\trequired: false,\n\t\t\tdefault: '',\n\t\t},\n\t},\n\n\tdata() {\n\t\treturn {\n\t\t\tcontactDetailsSelector: '.contact-details',\n\t\t\texcludeFromBirthdayKey: 'x-nc-exclude-from-birthday-calendar',\n\n\t\t\tbus: mitt(),\n\t\t\tshowMenuPopover: false,\n\t\t\tprofileEnabled,\n\t\t\tcontact: undefined,\n\t\t\tlocalContact: undefined,\n\t\t\tloading: true,\n\t\t}\n\t},\n\n\tcomputed: {\n\t\t/**\n\t\t * Read-only representation of the contact title and organization.\n\t\t *\n\t\t * @return {string}\n\t\t */\n\t\tformattedSubtitle() {\n\t\t\tconst title = this.contact.title\n\t\t\tconst organization = this.contact.org\n\n\t\t\tif (title && organization) {\n\t\t\t\treturn t('contacts', '{title} at {organization}', {\n\t\t\t\t\ttitle,\n\t\t\t\t\torganization,\n\t\t\t\t})\n\t\t\t} else if (title) {\n\t\t\t\treturn escape(title)\n\t\t\t} else if (organization) {\n\t\t\t\treturn escape(organization)\n\t\t\t}\n\n\t\t\treturn ''\n\t\t},\n\t\taddressbooks() {\n\t\t\treturn this.$store.getters.getAddressbooks\n\t\t},\n\t\t/**\n\t\t * Contact properties copied and sorted by rfcProps.fieldOrder\n\t\t *\n\t\t * @return {Array}\n\t\t */\n\t\tsortedProperties() {\n\t\t\tif (!this.localContact || !this.localContact.properties) {\n\t\t\t\treturn []\n\t\t\t}\n\t\t\treturn this.localContact.properties\n\t\t\t\t.toSorted((a, b) => {\n\t\t\t\t\tconst nameA = a.name.split('.').pop()\n\t\t\t\t\tconst nameB = b.name.split('.').pop()\n\t\t\t\t\treturn rfcProps.fieldOrder.indexOf(nameA) - rfcProps.fieldOrder.indexOf(nameB)\n\t\t\t\t})\n\t\t},\n\n\t\t/**\n\t\t * Contact properties filtered and grouped by rfcProps.fieldOrder\n\t\t *\n\t\t * @return {object}\n\t\t */\n\t\tgroupedProperties() {\n\t\t\tif (!this.sortedProperties) {\n\t\t\t\treturn {}\n\t\t\t}\n\t\t\treturn this.sortedProperties.reduce((list, property) => {\n\t\t\t\tif (!this.canDisplay(property)) {\n\t\t\t\t\treturn list\n\t\t\t\t}\n\t\t\t\tif (!list[property.name]) {\n\t\t\t\t\tlist[property.name] = []\n\t\t\t\t}\n\t\t\t\tlist[property.name].push(property)\n\t\t\t\treturn list\n\t\t\t}, {})\n\t\t},\n\t\t/**\n\t\t * The address book is read-only (e.g. shared with me).\n\t\t *\n\t\t * @return {boolean}\n\t\t */\n\t\taddressbookIsReadOnly() {\n\t\t\treturn this.contact.addressbook?.readOnly\n\t\t},\n\t\t/**\n\t\t * Usable addressbook object linked to the local contact\n\t\t *\n\t\t * @return {string}\n\t\t */\n\t\taddressbook() {\n\t\t\treturn this.contact.addressbook.id\n\t\t},\n\n\t\t/**\n\t\t * Fake model to use the propertyGroups component\n\t\t *\n\t\t * @return {object}\n\t\t */\n\t\tgroupsModel() {\n\t\t\treturn {\n\t\t\t\treadableName: t('mail', 'Contact groups'),\n\t\t\t\ticon: 'icon-contacts-dark',\n\t\t\t}\n\t\t},\n\t},\n\twatch: {\n\t\tcontact: {\n\t\t\thandler(contact) {\n\t\t\t\tthis.updateLocalContact(contact)\n\t\t\t},\n\t\t\timmediate: true,\n\t\t},\n\t},\n\tasync beforeMount() {\n\t\t// Init client and stores\n\t\tawait client.connect({ enableCardDAV: true })\n\t\tconst principalsStore = usePrincipalsStore()\n\t\tprincipalsStore.setCurrentUserPrincipal(client)\n\t\tawait this.$store.dispatch('getAddressbooks')\n\n\t\t// Fetch contact\n\t\tawait this.fetchContact()\n\t},\n\tmethods: {\n\t\tasync fetchContact() {\n\t\t\ttry {\n\t\t\t\tconst email = this.contactEmailAddress\n\t\t\t\tconst result = await Promise.all(\n\t\t\t\t\tthis.addressbooks.map(async (addressBook) => [\n\t\t\t\t\t\taddressBook.dav,\n\t\t\t\t\t\tawait addressBook.dav.addressbookQuery([\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: [NS.IETF_CARDDAV, 'prop-filter'],\n\t\t\t\t\t\t\t\tattributes: [['name', 'EMAIL']],\n\t\t\t\t\t\t\t\tchildren: [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tname: [NS.IETF_CARDDAV, 'text-match'],\n\t\t\t\t\t\t\t\t\t\tvalue: email,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t]),\n\t\t\t\t\t]),\n\t\t\t\t)\n\n\t\t\t\tconst contacts = result.flatMap(([addressBook, vcards]) =>\n\t\t\t\t\tvcards.map((vcard) => new Contact(vcard.data, addressBook)),\n\t\t\t\t)\n\n\t\t\t\tthis.contact = contacts.find((contact) => contact.email === email)\n\t\t\t} catch (error) {\n\t\t\t\tconsole.error('Error fetching contact:', error)\n\t\t\t} finally {\n\t\t\t\tthis.loading = false\n\t\t\t}\n\t\t},\n\t\tupdateGroups(value) {\n\t\t\tthis.newGroupsValue = value\n\t\t},\n\t\t/**\n\t\t *  Update this.localContact\n\t\t *\n\t\t * @param {Contact} contact the contact to clone\n\t\t */\n\t\tasync updateLocalContact(contact) {\n\t\t\tif (!contact) {\n\t\t\t\tthis.localContact = undefined\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\t// create empty contact and copy inner data\n\t\t\tconst localContact = Object.assign(\n\t\t\t\tObject.create(Object.getPrototypeOf(contact)),\n\t\t\t\tcontact,\n\t\t\t)\n\t\t\tvalidate(localContact)\n\n\t\t\tthis.localContact = localContact\n\t\t\tthis.newGroupsValue = [...this.localContact.groups]\n\t\t},\n\t\t/**\n\t\t * Should display the property\n\t\t *\n\t\t * @param {Property} property the property to check\n\t\t * @return {boolean}\n\t\t */\n\t\tcanDisplay(property) {\n\t\t\t// Make sure we have some model for the property and check for ITEM.PROP custom label format\n\t\t\tconst propModel = rfcProps.properties[property.name.split('.').pop()]\n\n\t\t\tconst propType = propModel && propModel.force\n\t\t\t\t? propModel.force\n\t\t\t\t: property.getDefaultType()\n\n\t\t\treturn propModel && propType !== 'unknown'\n\t\t},\n\n\t},\n}\n</script>\n\n<style lang=\"scss\" scoped>\n\n.empty-content {\n\theight: 100%;\n}\n\n.contact-title {\n\tmargin-inline-start: 100px;\n\tmargin-top: 40px;\n}\n\n:deep(.property__value) {\n\tfont-size: medium !important;\n}\n\n.recipient-details-loading {\n\tmargin-top: 64px;\n}\n</style>\n","/**\n * SPDX-FileCopyrightText: 2024 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\nimport { createApp } from 'vue'\nimport ReadOnlyContactDetails from '../views/ReadOnlyContactDetails.vue'\nimport { createPinia } from 'pinia'\n\nimport store from '../store/index.js'\nimport LegacyGlobalMixin from '../mixins/LegacyGlobalMixin.js'\n\n/**\n * @param {HTMLElement} el\n * @param {string} contactEmailAddress\n * @return {Promise<object>}\n */\nexport function mountContactDetails(el, contactEmailAddress) {\n\tconst app = createApp(ReadOnlyContactDetails, {\n\t\tcontactEmailAddress,\n\t})\n\n\tconst pinia = createPinia()\n\tapp.use(pinia)\n\tapp.use(store)\n\n\tapp.mixin(LegacyGlobalMixin)\n\n\treturn app.mount(el)\n}\n","/**\n * SPDX-FileCopyrightText: 2024 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\n// eslint-disable-next-line import/no-unresolved, n/no-missing-import\nimport 'vite/modulepreload-polyfill'\n\n// Global scss sheets\nimport './css/contacts.scss'\n\n// Dialogs css\nimport '@nextcloud/dialogs/style.css'\n\nimport { mountContactDetails } from './oca/mountContactDetails.js'\n\nwindow.OCA ??= {}\nwindow.OCA.Contacts = {\n\t/**\n\t * @param {HTMLElement} el Html element to mount the component at\n\t * @param {string} contactEmailAddress Email address of the contact whose details to display\n\t * @return {Promise<object>} Mounted Vue instance (vm)\n\t */\n\tasync mountContactDetails(el, contactEmailAddress) {\n\t\treturn mountContactDetails(el, contactEmailAddress)\n\t},\n}\n"],"names":["_sfc_main","_hoisted_3","_createElementBlock","_mergeProps","_ctx","$props","_cache","$event","_createElementVNode","_openBlock","profileEnabled","loadState","ContactDetailsProperty","NcEmptyContent","IconContact","NcLoadingIcon","IsMobileMixin","mitt","title","organization","escape","a","b","nameA","nameB","rfcProps","list","property","contact","client","usePrincipalsStore","email","contacts","addressBook","NS","vcards","vcard","Contact","error","value","localContact","validate","propModel","propType","_hoisted_1","_hoisted_4","_hoisted_6","$data","_hoisted_2","_createVNode","_component_NcLoadingIcon","_toDisplayString","$options","_hoisted_5","_Fragment","_renderList","properties","name","index","_createBlock","_component_ContactDetailsProperty","_component_NcEmptyContent","_component_IconContact","mountContactDetails","el","contactEmailAddress","app","createApp","ReadOnlyContactDetails","pinia","createPinia","store","LegacyGlobalMixin"],"mappings":"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","x_google_ignoreList":[0]}