{"version":3,"file":"index.js","sources":["../src/index.js"],"sourcesContent":["import parseUrl from 'url-parse';\n\nexport function renderMention(tokens, idx) {\n  return `<span class=\"mention\" data-type=\"${tokens[idx].mention.type}\" data-id=\"${tokens[idx].mention.id}\">${tokens[idx].mention.label}</span>`;\n}\n\nexport function parseUri(uri) {\n  const pieces = parseUrl(uri);\n\n  return {\n    type: pieces.host,\n    id: pieces.pathname.slice(1),\n  };\n}\n\nexport function parseMentions(state) {\n  const matcher = /@$/;\n\n  state.tokens.forEach(blockToken => {\n    if (blockToken.type !== 'inline') return;\n\n    const { children } = blockToken;\n\n    children.forEach((token, idx) => {\n      // Back out if we're near the end of the token array\n      if (idx + 3 > children.length) return;\n\n      // Grab the next four tokens that could potentially construct a mention\n      let [matchToken, openToken, textToken, closeToken = {}] = children.slice(idx, idx + 4);\n\n      // Compensate for when the link has no label\n      if (textToken.type === 'link_close') {\n        closeToken = textToken;\n        textToken = null;\n      }\n\n      // Back out if we're not dealing with a mention\n      if (matchToken.type !== 'text') return;\n      if (!matcher.test(matchToken.content)) return;\n      if (openToken.type !== 'link_open') return;\n      if (closeToken.type !== 'link_close') return;\n\n      // Lookup the mention type and ID from the link's href\n      const href = openToken.attrs.reduce((href, attr) => attr[0] === 'href' ? attr[1] : href, '');\n\n      // Remove the @ character from the previous text node\n      matchToken.content = matchToken.content.slice(0, -1);\n\n      // Replace the \"link_open\" with a single \"mention\" token\n      openToken.type = 'mention';\n      openToken.mention = parseUri(href);\n      openToken.mention.label = textToken && textToken.content || '';\n\n      // Remove the \"text\" and \"link_close\" tokens\n      children.splice(idx+2, textToken ? 2 : 1);\n    });\n\n    blockToken.children = children;\n  });\n}\n\nmodule.exports = (md, opts) => {\n  md.renderer.rules.mention = renderMention;\n  md.core.ruler.after('inline', 'mention', parseMentions);\n};\n"],"names":["renderMention","tokens","idx","mention","type","id","label","parseUri","uri","pieces","parseUrl","host","pathname","slice","parseMentions","state","matcher","forEach","blockToken","children","token","length","matchToken","openToken","textToken","closeToken","test","content","href","attrs","reduce","attr","splice","module","exports","md","opts","renderer","rules","core","ruler","after"],"mappings":";;;;;;;;;;AAAA,AAEO,SAASA,aAAT,CAAuBC,MAAvB,EAA+BC,GAA/B,EAAoC;+CACED,OAAOC,GAAP,EAAYC,OAAZ,CAAoBC,IAA/D,mBAAiFH,OAAOC,GAAP,EAAYC,OAAZ,CAAoBE,EAArG,UAA4GJ,OAAOC,GAAP,EAAYC,OAAZ,CAAoBG,KAAhI;;;AAGF,AAAO,SAASC,QAAT,CAAkBC,GAAlB,EAAuB;MACtBC,SAASC,SAASF,GAAT,CAAf;;SAEO;UACCC,OAAOE,IADR;QAEDF,OAAOG,QAAP,CAAgBC,KAAhB,CAAsB,CAAtB;GAFN;;;AAMF,AAAO,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;MAC7BC,UAAU,IAAhB;;QAEMf,MAAN,CAAagB,OAAb,CAAqB,sBAAc;QAC7BC,WAAWd,IAAX,KAAoB,QAAxB,EAAkC;;QAE1Be,QAHyB,GAGZD,UAHY,CAGzBC,QAHyB;;;aAKxBF,OAAT,CAAiB,UAACG,KAAD,EAAQlB,GAAR,EAAgB;;UAE3BA,MAAM,CAAN,GAAUiB,SAASE,MAAvB,EAA+B;;;;4BAG2BF,SAASN,KAAT,CAAeX,GAAf,EAAoBA,MAAM,CAA1B,CAL3B;;UAK1BoB,UAL0B;UAKdC,SALc;UAKHC,SALG;;UAKQC,UALR,qCAKqB,EALrB;;;;;UAQ3BD,UAAUpB,IAAV,KAAmB,YAAvB,EAAqC;qBACtBoB,SAAb;oBACY,IAAZ;;;;UAIEF,WAAWlB,IAAX,KAAoB,MAAxB,EAAgC;UAC5B,CAACY,QAAQU,IAAR,CAAaJ,WAAWK,OAAxB,CAAL,EAAuC;UACnCJ,UAAUnB,IAAV,KAAmB,WAAvB,EAAoC;UAChCqB,WAAWrB,IAAX,KAAoB,YAAxB,EAAsC;;;UAGhCwB,OAAOL,UAAUM,KAAV,CAAgBC,MAAhB,CAAuB,UAACF,IAAD,EAAOG,IAAP;eAAgBA,KAAK,CAAL,MAAY,MAAZ,GAAqBA,KAAK,CAAL,CAArB,GAA+BH,IAA/C;OAAvB,EAA4E,EAA5E,CAAb;;;iBAGWD,OAAX,GAAqBL,WAAWK,OAAX,CAAmBd,KAAnB,CAAyB,CAAzB,EAA4B,CAAC,CAA7B,CAArB;;;gBAGUT,IAAV,GAAiB,SAAjB;gBACUD,OAAV,GAAoBI,SAASqB,IAAT,CAApB;gBACUzB,OAAV,CAAkBG,KAAlB,GAA0BkB,aAAaA,UAAUG,OAAvB,IAAkC,EAA5D;;;eAGSK,MAAT,CAAgB9B,MAAI,CAApB,EAAuBsB,YAAY,CAAZ,GAAgB,CAAvC;KA/BF;;eAkCWL,QAAX,GAAsBA,QAAtB;GAvCF;;;AA2CFc,OAAOC,OAAP,GAAiB,UAACC,EAAD,EAAKC,IAAL,EAAc;KAC1BC,QAAH,CAAYC,KAAZ,CAAkBnC,OAAlB,GAA4BH,aAA5B;KACGuC,IAAH,CAAQC,KAAR,CAAcC,KAAd,CAAoB,QAApB,EAA8B,SAA9B,EAAyC3B,aAAzC;CAFF;;;;;;"}