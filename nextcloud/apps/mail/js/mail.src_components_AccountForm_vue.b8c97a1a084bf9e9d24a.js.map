{"version":3,"file":"mail.src_components_AccountForm_vue.b8c97a1a084bf9e9d24a.js","mappingsnZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;AClkBA;AACA;;;;;;;;;;;;;;;ACxCA","sources":["webpack://nextcloud-mail/./src/components/AccountForm.vue?54b0","webpack://nextcloud-mail/./src/components/AccountForm.vue?8927","webpack://nextcloud-mail/./src/integration/oauth.js","webpack://nextcloud-mail/./src/service/AutoConfigService.js","webpack://nextcloud-mail/./src/components/AccountForm.vue?b745","webpack://nextcloud-mail/./src/components/AccountForm.vue?7f4e","webpack://nextcloud-mail/./src/components/AccountForm.vue?e92d","webpack://nextcloud-mail/./src/components/AccountForm.vue?bb6d","webpack://nextcloud-mail/./src/components/AccountForm.vue","webpack://nextcloud-mail/./src/components/AccountForm.vue?b699","webpack://nextcloud-mail/./src/components/AccountForm.vue?a32d","webpack://nextcloud-mail/./src/components/AccountForm.vue?6b0e","webpack://nextcloud-mail/./src/components/AccountForm.vue?269b"],"sourcesContent":["function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == typeof i ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != typeof i) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nimport { Tab, Tabs } from 'vue-tabs-component';\nimport { NcButton as ButtonVue, NcLoadingIcon as IconLoading, NcPasswordField, NcInputField, NcCheckboxRadioSwitch } from '@nextcloud/vue';\nimport IconCheck from 'vue-material-design-icons/Check.vue';\nimport { translate as t } from '@nextcloud/l10n';\nimport logger from '../logger.js';\nimport { queryIspdb, queryMx, testConnectivity } from '../service/AutoConfigService.js';\nimport { CONSENT_ABORTED, getUserConsent } from '../integration/oauth.js';\nimport useMainStore from '../store/mainStore.js';\nimport { mapStores, mapState } from 'pinia';\nexport default {\n  name: 'AccountForm',\n  components: {\n    NcPasswordField,\n    NcInputField,\n    NcCheckboxRadioSwitch,\n    Tab,\n    Tabs,\n    ButtonVue,\n    IconLoading,\n    IconCheck\n  },\n  props: {\n    displayName: {\n      type: String,\n      default: ''\n    },\n    email: {\n      type: String,\n      default: ''\n    },\n    account: {\n      type: Object,\n      required: false,\n      default: () => undefined\n    }\n  },\n  data() {\n    const fromAccountOr = (prop, def) => {\n      if (this.account !== undefined) {\n        return this.account[prop];\n      } else {\n        return def;\n      }\n    };\n    return {\n      loading: false,\n      loadingMessage: undefined,\n      mode: 'auto',\n      accountName: this.displayName,\n      emailAddress: this.email,\n      autoConfig: {\n        password: ''\n      },\n      manualConfig: {\n        imapHost: fromAccountOr('imapHost', ''),\n        imapPort: fromAccountOr('imapPort', 993),\n        imapSslMode: fromAccountOr('imapSslMode', 'ssl'),\n        imapUser: fromAccountOr('imapUser', ''),\n        imapPassword: '',\n        smtpHost: fromAccountOr('smtpHost', ''),\n        smtpPort: fromAccountOr('smtpPort', 587),\n        smtpSslMode: fromAccountOr('smtpSslMode', 'tls'),\n        smtpUser: fromAccountOr('smtpUser', ''),\n        smtpPassword: ''\n      },\n      feedback: null,\n      password: ''\n    };\n  },\n  computed: _objectSpread(_objectSpread(_objectSpread({}, mapStores(useMainStore)), mapState(useMainStore, ['googleOauthUrl', 'microsoftOauthUrl'])), {}, {\n    settingsPage() {\n      return this.account !== undefined;\n    },\n    isDisabledAuto() {\n      if (this.loading) {\n        return true;\n      }\n      if (this.mode !== 'auto') {\n        return this.loading;\n      }\n      return !this.emailAddress || !this.isValidEmail(this.emailAddress) || !this.googleOauthUrl && !this.autoConfig.password;\n    },\n    isDisabledManual() {\n      if (this.loading) {\n        return true;\n      }\n      if (this.mode !== 'manual') {\n        return this.loading;\n      }\n      return !this.emailAddress || !this.isValidEmail(this.emailAddress) || !this.manualConfig.imapHost || !this.manualConfig.imapPort || !this.manualConfig.imapUser || !this.useOauth && !this.manualConfig.imapPassword || !this.manualConfig.smtpHost || !this.manualConfig.smtpPort || !this.manualConfig.smtpUser || !this.useOauth && !this.manualConfig.smtpPassword;\n    },\n    isGoogleAccount() {\n      return this.manualConfig.imapHost === 'imap.gmail.com' || this.manualConfig.smtpHost === 'smtp.gmail.com';\n    },\n    isMicrosoftAccount() {\n      return this.manualConfig.imapHost === 'outlook.office365.com' || this.manualConfig.smtpHost === 'outlook.office365.com';\n    },\n    hasPasswordAlternatives() {\n      return !!this.googleOauthUrl || !!this.microsoftOauthUrl;\n    },\n    useOauth() {\n      return this.isGoogleAccount && this.googleOauthUrl || this.isMicrosoftAccount && this.microsoftOauthUrl;\n    },\n    submitButtonText() {\n      if (this.loading) {\n        var _this$loadingMessage;\n        return (_this$loadingMessage = this.loadingMessage) !== null && _this$loadingMessage !== void 0 ? _this$loadingMessage : t('mail', 'Connecting');\n      }\n      if (this.mode === 'manual' && this.useOauth) {\n        if (this.isGoogleAccount) {\n          return this.account ? t('mail', 'Reconnect Google account') : t('mail', 'Sign in with Google');\n        } else {\n          return this.account ? t('mail', 'Reconnect Microsoft account') : t('mail', 'Sign in with Microsoft');\n        }\n      }\n      return this.account ? t('mail', 'Save') : t('mail', 'Connect');\n    }\n  }),\n  methods: {\n    onModeChanged(e) {\n      this.mode = e.tab.id;\n      if (this.mode === 'manual') {\n        // IMAP\n        if (this.manualConfig.imapUser === '') {\n          this.manualConfig.imapUser = this.emailAddress;\n        }\n        if (this.manualConfig.imapPassword === '') {\n          this.manualConfig.imapPassword = this.autoConfig.password;\n        }\n\n        // SMTP\n        if (this.manualConfig.smtpUser === '') {\n          this.manualConfig.smtpUser = this.emailAddress;\n        }\n        if (this.manualConfig.smtpPassword === '') {\n          this.manualConfig.smtpPassword = this.autoConfig.password;\n        }\n      }\n    },\n    onImapSslModeChange(value) {\n      this.clearFeedback();\n      this.manualConfig.imapSslMode = value;\n      switch (this.manualConfig.imapSslMode) {\n        case 'none':\n        case 'tls':\n          this.manualConfig.imapPort = 143;\n          break;\n        case 'ssl':\n          this.manualConfig.imapPort = 993;\n          break;\n      }\n    },\n    onSmtpSslModeChange(value) {\n      this.clearFeedback();\n      this.manualConfig.smtpSslMode = value;\n      switch (this.manualConfig.smtpSslMode) {\n        case 'none':\n        case 'tls':\n          this.manualConfig.smtpPort = 587;\n          break;\n        case 'ssl':\n          this.manualConfig.smtpPort = 465;\n          break;\n      }\n    },\n    clearFeedback() {\n      this.feedback = null;\n    },\n    applyAutoConfig(config) {\n      if (!config) {\n        return false;\n      }\n      if (config !== null && config !== void 0 && config.imapConfig) {\n        this.manualConfig.imapUser = config.imapConfig.username;\n        this.manualConfig.imapHost = config.imapConfig.host;\n        this.manualConfig.imapPort = config.imapConfig.port;\n        this.manualConfig.imapSslMode = config.imapConfig.security;\n        this.manualConfig.imapPassword = this.autoConfig.password;\n      }\n      if (config !== null && config !== void 0 && config.smtpConfig) {\n        this.manualConfig.smtpUser = config.smtpConfig.username;\n        this.manualConfig.smtpHost = config.smtpConfig.host;\n        this.manualConfig.smtpPort = config.smtpConfig.port;\n        this.manualConfig.smtpSslMode = config.smtpConfig.security;\n        this.manualConfig.smtpPassword = this.autoConfig.password;\n      }\n      return true;\n    },\n    async detectConfig() {\n      this.loadingMessage = t('mail', 'Looking up configuration');\n      const config = await queryIspdb(this.emailAddress.split('@').pop(), this.emailAddress);\n      logger.debug('fetched auto config', {\n        config\n      });\n      // Apply settings to manual mode before submitting so the user\n      // can make modifications if the config fails\n      if (this.applyAutoConfig(config)) {\n        logger.debug('ISP DB config applied');\n        return true;\n      } else {\n        const mxHosts = await queryMx(this.emailAddress);\n        logger.debug('MX hosts fetched', {\n          mxHosts\n        });\n        if (mxHosts.length) {\n          // Try the TLD of the MX\n          // FIXME: breaks with eTLDs like .co.uk\n          const tldMx = mxHosts[0].split('.').splice(-2).join('.').toLowerCase();\n          const mxConfig = await queryIspdb(tldMx, this.emailAddress);\n          logger.debug('fetched MX auto config', {\n            mxConfig\n          });\n          if (mxConfig && this.applyAutoConfig(mxConfig)) {\n            return true;\n          }\n        }\n\n        // Test the highest priority MX for open IMAP/SMTP ports\n        this.loadingMessage = t('mail', 'Checking mail host connectivity');\n        const imapAndSmtpHosts = mxHosts.slice(0, 1).flatMap(host => {\n          return [993, 143, 465, 587].map(port => ({\n            host,\n            port\n          }));\n        });\n        const results = await Promise.all(imapAndSmtpHosts.map(async _ref => {\n          let {\n            host,\n            port\n          } = _ref;\n          return {\n            host,\n            port,\n            canConnect: await testConnectivity(host, port)\n          };\n        }));\n        const firstImapHost = results.filter(_ref2 => {\n          let {\n            canConnect,\n            port\n          } = _ref2;\n          return canConnect && port === 993;\n        })[0];\n        const firstSmtpHost = results.filter(_ref3 => {\n          let {\n            canConnect,\n            port\n          } = _ref3;\n          return canConnect && [465, 587].includes(port);\n        })[0];\n        logger.debug('MX connectivity tested', {\n          firstImapHost,\n          firstSmtpHost\n        });\n        if (firstImapHost && firstSmtpHost) {\n          this.applyAutoConfig({\n            imapConfig: {\n              username: this.emailAddress,\n              // Assumption\n              host: firstImapHost.host,\n              port: firstImapHost.port,\n              security: firstImapHost.port === 993 ? 'ssl' : 'tls'\n            },\n            smtpConfig: {\n              username: this.emailAddress,\n              // Assumption\n              host: firstSmtpHost.host,\n              port: firstSmtpHost.port,\n              security: firstSmtpHost.port === 465 ? 'ssl' : 'tls'\n            }\n          });\n          return true;\n        } else {\n          this.feedback = t('mail', 'Configuration discovery failed. Please use the manual settings');\n        }\n        return false;\n      }\n    },\n    async onSubmit(event) {\n      logger.debug('account form submitted', {\n        event\n      });\n      if (this.isDisabledManual || this.isDisabledAuto) {\n        logger.warn('submit is disabled');\n        return;\n      }\n      this.clearFeedback();\n      this.loading = true;\n      try {\n        if (this.mode === 'auto') {\n          if (!(await this.detectConfig())) {\n            logger.warn('Auto mode failed');\n            return;\n          }\n        }\n        if (!this.useOauth) {\n          if (this.mode === 'auto' && this.autoConfig.password === '') {\n            this.feedback = t('mail', 'Password required');\n            return;\n          }\n          if (this.mode === 'manual' && (this.manualConfig.imapPassword === '' || this.manualConfig.smtpPassword === '')) {\n            this.feedback = t('mail', 'Password required');\n            return;\n          }\n        }\n        this.loadingMessage = t('mail', 'Testing authentication');\n        const data = _objectSpread(_objectSpread({}, this.manualConfig), {}, {\n          accountName: this.accountName,\n          emailAddress: this.emailAddress,\n          imapHost: this.manualConfig.imapHost.trim(),\n          smtpHost: this.manualConfig.smtpHost.trim(),\n          authMethod: this.useOauth ? 'xoauth2' : 'password'\n        });\n        if (this.useOauth) {\n          delete data.imapPassword;\n          delete data.smtpPassword;\n        }\n        if (!this.account) {\n          const account = await this.mainStore.startAccountSetup(data);\n          if (this.useOauth) {\n            this.loadingMessage = t('mail', 'Awaiting user consent');\n            try {\n              if (this.isGoogleAccount) {\n                this.feedback = t('mail', 'Account created. Please follow the pop-up instructions to link your Google account');\n                await getUserConsent(this.googleOauthUrl.replace('_accountId_', account.id).replace('_email_', encodeURIComponent(account.emailAddress)));\n              } else {\n                this.feedback = t('mail', 'Account created. Please follow the pop-up instructions to link your Microsoft account');\n                await getUserConsent(this.microsoftOauthUrl.replace('_accountId_', account.id).replace('_email_', encodeURIComponent(account.emailAddress)));\n              }\n            } catch (e) {\n              // Clean up the temporary account before we continue\n              this.mainStore.deleteAccount(account);\n              logger.info(\"Temporary account \".concat(account.id, \" deleted\"));\n              throw e;\n            }\n            this.clearFeedback();\n          }\n          this.loadingMessage = t('mail', 'Loading account');\n          await this.mainStore.finishAccountSetup({\n            account\n          });\n          this.$emit('account-created', account);\n        } else {\n          const oldAccountData = this.account;\n          const account = await this.mainStore.updateAccount(_objectSpread(_objectSpread({}, data), {}, {\n            accountId: this.account.id\n          }));\n          if (this.useOauth) {\n            this.loadingMessage = t('mail', 'Awaiting user consent');\n            try {\n              if (this.isGoogleAccount) {\n                this.feedback = t('mail', 'Account updated. Please follow the pop-up instructions to reconnect your Google account');\n                await getUserConsent(this.googleOauthUrl.replace('_accountId_', account.id).replace('_email_', encodeURIComponent(account.emailAddress)));\n              } else {\n                this.feedback = t('mail', 'Account updated. Please follow the pop-up instructions to reconnect your Microsoft account');\n                await getUserConsent(this.microsoftOauthUrl.replace('_accountId_', account.id).replace('_email_', encodeURIComponent(account.emailAddress)));\n              }\n            } catch (e) {\n              // Undo changes\n              await this.mainStore.updateAccount(_objectSpread(_objectSpread({}, oldAccountData), {}, {\n                accountId: oldAccountData.id\n              }));\n              logger.info(\"Account \".concat(account.id, \" update undone\"));\n              throw e;\n            }\n            this.clearFeedback();\n          }\n          this.feedback = t('mail', 'Account updated');\n        }\n      } catch (error) {\n        var _error$data, _error$data2;\n        logger.error('could not save account details', {\n          error\n        });\n        if (((_error$data = error.data) === null || _error$data === void 0 ? void 0 : _error$data.error) === 'CONNECTION_ERROR') {\n          if (error.data.service === 'IMAP') {\n            this.feedback = t('mail', 'IMAP server is not reachable');\n          } else if (error.data.service === 'SMTP') {\n            this.feedback = t('mail', 'SMTP server is not reachable');\n          }\n        } else if (((_error$data2 = error.data) === null || _error$data2 === void 0 ? void 0 : _error$data2.error) === 'AUTHENTICATION') {\n          if (error.data.service === 'IMAP') {\n            this.feedback = t('mail', 'IMAP username or password is wrong');\n          } else if (error.data.service === 'SMTP') {\n            this.feedback = t('mail', 'SMTP username or password is wrong');\n          }\n        } else {\n          var _error$data3, _error$data4, _error$response;\n          if (((_error$data3 = error.data) === null || _error$data3 === void 0 ? void 0 : _error$data3.service) === 'IMAP') {\n            this.feedback = t('mail', 'IMAP connection failed');\n          } else if (((_error$data4 = error.data) === null || _error$data4 === void 0 ? void 0 : _error$data4.service) === 'SMTP') {\n            this.feedback = t('mail', 'SMTP connection failed');\n          } else if (error.message === CONSENT_ABORTED) {\n            this.feedback = t('mail', 'Authorization pop-up closed');\n          } else if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 429) {\n            this.feedback = t('mail', 'Configuration discovery temporarily not available. Please try again later.');\n          } else {\n            this.feedback = t('mail', 'There was an error while setting up your account');\n          }\n        }\n      } finally {\n        this.loading = false;\n        this.loadingMessage = undefined;\n      }\n    },\n    isValidEmail(email) {\n      const regExpEmail = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n      return regExpEmail.test(email);\n    }\n  }\n};","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c(\"form\", {\n    attrs: {\n      id: \"account-form\"\n    },\n    on: {\n      submit: function ($event) {\n        $event.preventDefault();\n        return _vm.onSubmit.apply(null, arguments);\n      }\n    }\n  }, [_c(\"Tabs\", {\n    attrs: {\n      options: {\n        useUrlFragment: false,\n        defaultTabHash: _vm.settingsPage ? \"manual\" : \"auto\"\n      },\n      \"cache-lifetime\": \"0\"\n    },\n    on: {\n      changed: _vm.onModeChanged\n    }\n  }, [_c(\"Tab\", {\n    key: \"auto\",\n    attrs: {\n      id: \"auto\",\n      name: _vm.t(\"mail\", \"Auto\")\n    }\n  }, [_c(\"NcInputField\", {\n    attrs: {\n      id: \"auto-name\",\n      value: _vm.accountName,\n      label: _vm.t(\"mail\", \"Name\"),\n      type: \"text\",\n      placeholder: _vm.t(\"mail\", \"Name\"),\n      disabled: _vm.loading,\n      autofocus: \"\"\n    },\n    on: {\n      \"update:value\": function ($event) {\n        _vm.accountName = $event;\n      }\n    }\n  }), _vm._v(\" \"), _c(\"NcInputField\", {\n    attrs: {\n      id: \"auto-address\",\n      value: _vm.emailAddress,\n      label: _vm.t(\"mail\", \"Mail address\"),\n      disabled: _vm.loading,\n      placeholder: _vm.t(\"mail\", \"name@example.org\"),\n      required: \"\",\n      type: \"email\"\n    },\n    on: {\n      \"update:value\": function ($event) {\n        _vm.emailAddress = $event;\n      },\n      change: _vm.clearFeedback\n    }\n  }), _vm._v(\" \"), !_vm.isValidEmail(_vm.emailAddress) ? _c(\"p\", {\n    staticClass: \"account-form--error\"\n  }, [_vm._v(\"\\n\\t\\t\\t\\t\" + _vm._s(_vm.t(\"mail\", \"Please enter an email of the format name@example.com\")) + \"\\n\\t\\t\\t\")]) : _vm._e(), _vm._v(\" \"), _c(\"NcPasswordField\", {\n    attrs: {\n      id: \"auto-password\",\n      value: _vm.autoConfig.password,\n      disabled: _vm.loading,\n      type: \"password\",\n      label: _vm.t(\"mail\", \"Password\"),\n      required: !_vm.hasPasswordAlternatives\n    },\n    on: {\n      \"update:value\": function ($event) {\n        return _vm.$set(_vm.autoConfig, \"password\", $event);\n      },\n      change: _vm.clearFeedback\n    }\n  })], 1), _vm._v(\" \"), _c(\"Tab\", {\n    key: \"manual\",\n    attrs: {\n      id: \"manual\",\n      name: _vm.t(\"mail\", \"Manual\")\n    }\n  }, [_c(\"NcInputField\", {\n    attrs: {\n      id: \"man-name\",\n      value: _vm.accountName,\n      label: _vm.t(\"mail\", \"Name\"),\n      type: \"text\",\n      placeholder: _vm.t(\"mail\", \"Name\"),\n      disabled: _vm.loading\n    },\n    on: {\n      \"update:value\": function ($event) {\n        _vm.accountName = $event;\n      }\n    }\n  }), _vm._v(\" \"), _c(\"NcInputField\", {\n    attrs: {\n      id: \"man-address\",\n      value: _vm.emailAddress,\n      label: _vm.t(\"mail\", \"Mail address\"),\n      type: \"email\",\n      placeholder: _vm.t(\"mail\", \"name@example.org\"),\n      disabled: _vm.loading,\n      required: \"\"\n    },\n    on: {\n      \"update:value\": function ($event) {\n        _vm.emailAddress = $event;\n      },\n      change: _vm.clearFeedback\n    }\n  }), _vm._v(\" \"), !_vm.isValidEmail(_vm.emailAddress) ? _c(\"p\", {\n    staticClass: \"account-form--error\"\n  }, [_vm._v(\"\\n\\t\\t\\t\\t\" + _vm._s(_vm.t(\"mail\", \"Please enter an email of the format name@example.com\")) + \"\\n\\t\\t\\t\")]) : _vm._e(), _vm._v(\" \"), _c(\"h3\", [_vm._v(_vm._s(_vm.t(\"mail\", \"IMAP Settings\")))]), _vm._v(\" \"), _c(\"NcInputField\", {\n    attrs: {\n      id: \"man-imap-host\",\n      value: _vm.manualConfig.imapHost,\n      label: _vm.t(\"mail\", \"IMAP Host\"),\n      type: \"text\",\n      placeholder: _vm.t(\"mail\", \"IMAP Host\"),\n      disabled: _vm.loading,\n      required: \"\"\n    },\n    on: {\n      \"update:value\": function ($event) {\n        return _vm.$set(_vm.manualConfig, \"imapHost\", $event);\n      },\n      change: _vm.clearFeedback\n    }\n  }), _vm._v(\" \"), _c(\"h4\", {\n    staticClass: \"account-form__heading--required\"\n  }, [_vm._v(\"\\n\\t\\t\\t\\t\" + _vm._s(_vm.t(\"mail\", \"IMAP Security\")) + \"\\n\\t\\t\\t\")]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"flex-row\"\n  }, [_c(\"NcCheckboxRadioSwitch\", {\n    attrs: {\n      id: \"man-imap-sec-none\",\n      \"button-variant\": true,\n      checked: _vm.manualConfig.imapSslMode,\n      type: \"radio\",\n      name: \"man-imap-sec\",\n      disabled: _vm.loading,\n      value: \"none\",\n      \"button-variant-grouped\": \"horizontal\"\n    },\n    on: {\n      \"update:checked\": _vm.onImapSslModeChange\n    }\n  }, [_vm._v(\"\\n\\t\\t\\t\\t\\t\" + _vm._s(_vm.t(\"mail\", \"None\")) + \"\\n\\t\\t\\t\\t\")]), _vm._v(\" \"), _c(\"NcCheckboxRadioSwitch\", {\n    attrs: {\n      id: \"man-imap-sec-ssl\",\n      \"button-variant\": true,\n      checked: _vm.manualConfig.imapSslMode,\n      type: \"radio\",\n      name: \"man-imap-sec\",\n      disabled: _vm.loading,\n      value: \"ssl\",\n      \"button-variant-grouped\": \"horizontal\"\n    },\n    on: {\n      \"update:checked\": _vm.onImapSslModeChange\n    }\n  }, [_vm._v(\"\\n\\t\\t\\t\\t\\t\" + _vm._s(_vm.t(\"mail\", \"SSL/TLS\")) + \"\\n\\t\\t\\t\\t\")]), _vm._v(\" \"), _c(\"NcCheckboxRadioSwitch\", {\n    attrs: {\n      id: \"man-imap-sec-tls\",\n      \"button-variant\": true,\n      checked: _vm.manualConfig.imapSslMode,\n      type: \"radio\",\n      name: \"man-imap-sec\",\n      disabled: _vm.loading,\n      value: \"tls\",\n      \"button-variant-grouped\": \"horizontal\"\n    },\n    on: {\n      \"update:checked\": _vm.onImapSslModeChange\n    }\n  }, [_vm._v(\"\\n\\t\\t\\t\\t\\t\" + _vm._s(_vm.t(\"mail\", \"STARTTLS\")) + \"\\n\\t\\t\\t\\t\")])], 1), _vm._v(\" \"), _c(\"NcInputField\", {\n    attrs: {\n      id: \"man-imap-port\",\n      value: _vm.manualConfig.imapPort,\n      label: _vm.t(\"mail\", \"IMAP Port\"),\n      type: \"number\",\n      placeholder: _vm.t(\"mail\", \"IMAP Port\"),\n      disabled: _vm.loading,\n      required: \"\"\n    },\n    on: {\n      \"update:value\": function ($event) {\n        return _vm.$set(_vm.manualConfig, \"imapPort\", $event);\n      },\n      change: _vm.clearFeedback\n    }\n  }), _vm._v(\" \"), _c(\"NcInputField\", {\n    attrs: {\n      id: \"man-imap-user\",\n      value: _vm.manualConfig.imapUser,\n      label: _vm.t(\"mail\", \"IMAP User\"),\n      type: \"text\",\n      placeholder: _vm.t(\"mail\", \"IMAP User\"),\n      disabled: _vm.loading,\n      required: \"\"\n    },\n    on: {\n      \"update:value\": function ($event) {\n        return _vm.$set(_vm.manualConfig, \"imapUser\", $event);\n      },\n      change: _vm.clearFeedback\n    }\n  }), _vm._v(\" \"), !_vm.useOauth ? _c(\"NcPasswordField\", {\n    attrs: {\n      id: \"man-imap-password\",\n      type: \"password\",\n      value: _vm.manualConfig.imapPassword,\n      label: _vm.t(\"mail\", \"IMAP Password\"),\n      disabled: _vm.loading,\n      required: \"\"\n    },\n    on: {\n      \"update:value\": function ($event) {\n        return _vm.$set(_vm.manualConfig, \"imapPassword\", $event);\n      },\n      change: _vm.clearFeedback\n    }\n  }) : _vm._e(), _vm._v(\" \"), _c(\"h3\", [_vm._v(_vm._s(_vm.t(\"mail\", \"SMTP Settings\")))]), _vm._v(\" \"), _c(\"NcInputField\", {\n    ref: \"smtpHost\",\n    attrs: {\n      id: \"man-smtp-host\",\n      value: _vm.manualConfig.smtpHost,\n      label: _vm.t(\"mail\", \"SMTP Host\"),\n      type: \"text\",\n      name: \"smtp-host\",\n      placeholder: _vm.t(\"mail\", \"SMTP Host\"),\n      disabled: _vm.loading,\n      required: \"\"\n    },\n    on: {\n      \"update:value\": function ($event) {\n        return _vm.$set(_vm.manualConfig, \"smtpHost\", $event);\n      },\n      change: _vm.clearFeedback\n    }\n  }), _vm._v(\" \"), _c(\"h4\", {\n    staticClass: \"account-form__heading--required\"\n  }, [_vm._v(\"\\n\\t\\t\\t\\t\" + _vm._s(_vm.t(\"mail\", \"SMTP Security\")) + \"\\n\\t\\t\\t\")]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"flex-row\"\n  }, [_c(\"NcCheckboxRadioSwitch\", {\n    attrs: {\n      id: \"man-imap-sec-none\",\n      \"button-variant\": true,\n      checked: _vm.manualConfig.smtpSslMode,\n      type: \"radio\",\n      name: \"man-smtp-sec\",\n      disabled: _vm.loading,\n      value: \"none\",\n      \"button-variant-grouped\": \"horizontal\"\n    },\n    on: {\n      \"update:checked\": _vm.onSmtpSslModeChange\n    }\n  }, [_vm._v(\"\\n\\t\\t\\t\\t\\t\" + _vm._s(_vm.t(\"mail\", \"None\")) + \"\\n\\t\\t\\t\\t\")]), _vm._v(\" \"), _c(\"NcCheckboxRadioSwitch\", {\n    attrs: {\n      id: \"man-imap-sec-ssl\",\n      \"button-variant\": true,\n      checked: _vm.manualConfig.smtpSslMode,\n      type: \"radio\",\n      name: \"man-smtp-sec\",\n      disabled: _vm.loading,\n      value: \"ssl\",\n      \"button-variant-grouped\": \"horizontal\"\n    },\n    on: {\n      \"update:checked\": _vm.onSmtpSslModeChange\n    }\n  }, [_vm._v(\"\\n\\t\\t\\t\\t\\t\" + _vm._s(_vm.t(\"mail\", \"SSL/TLS\")) + \"\\n\\t\\t\\t\\t\")]), _vm._v(\" \"), _c(\"NcCheckboxRadioSwitch\", {\n    attrs: {\n      id: \"man-imap-sec-tls\",\n      \"button-variant\": true,\n      checked: _vm.manualConfig.smtpSslMode,\n      type: \"radio\",\n      name: \"man-smtp-sec\",\n      disabled: _vm.loading,\n      value: \"tls\",\n      \"button-variant-grouped\": \"horizontal\"\n    },\n    on: {\n      \"update:checked\": _vm.onSmtpSslModeChange\n    }\n  }, [_vm._v(\"\\n\\t\\t\\t\\t\\t\" + _vm._s(_vm.t(\"mail\", \"STARTTLS\")) + \"\\n\\t\\t\\t\\t\")])], 1), _vm._v(\" \"), _c(\"NcInputField\", {\n    attrs: {\n      id: \"man-smtp-port\",\n      label: _vm.t(\"mail\", \"SMTP Port\"),\n      value: _vm.manualConfig.smtpPort,\n      type: \"number\",\n      placeholder: _vm.t(\"mail\", \"SMTP Port\"),\n      disabled: _vm.loading,\n      required: \"\"\n    },\n    on: {\n      \"update:value\": function ($event) {\n        return _vm.$set(_vm.manualConfig, \"smtpPort\", $event);\n      },\n      change: _vm.clearFeedback\n    }\n  }), _vm._v(\" \"), _c(\"NcInputField\", {\n    attrs: {\n      id: \"man-smtp-user\",\n      value: _vm.manualConfig.smtpUser,\n      label: _vm.t(\"mail\", \"SMTP User\"),\n      type: \"text\",\n      placeholder: _vm.t(\"mail\", \"SMTP User\"),\n      disabled: _vm.loading,\n      required: \"\"\n    },\n    on: {\n      \"update:value\": function ($event) {\n        return _vm.$set(_vm.manualConfig, \"smtpUser\", $event);\n      },\n      change: _vm.clearFeedback\n    }\n  }), _vm._v(\" \"), !_vm.useOauth ? _c(\"NcPasswordField\", {\n    attrs: {\n      id: \"man-smtp-password\",\n      label: _vm.t(\"mail\", \"SMTP Password\"),\n      type: \"password\",\n      value: _vm.manualConfig.smtpPassword,\n      disabled: _vm.loading,\n      required: \"\"\n    },\n    on: {\n      \"update:value\": function ($event) {\n        return _vm.$set(_vm.manualConfig, \"smtpPassword\", $event);\n      },\n      change: _vm.clearFeedback\n    }\n  }) : _vm._e()], 1)], 1), _vm._v(\" \"), _vm.isGoogleAccount && !_vm.googleOauthUrl ? _c(\"div\", {\n    staticClass: \"account-form__google-sso\"\n  }, [_vm._v(\"\\n\\t\\t\" + _vm._s(_vm.t(\"mail\", \"For the Google account to work with this app you need to enable two-factor authentication for Google and generate an app password.\")) + \"\\n\\t\")]) : _vm._e(), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"account-form__submit-buttons\"\n  }, [_vm.mode === \"auto\" ? _c(\"ButtonVue\", {\n    staticClass: \"account-form__submit-button\",\n    attrs: {\n      \"aria-label\": _vm.submitButtonText,\n      type: \"primary\",\n      \"native-type\": \"submit\",\n      disabled: _vm.isDisabledAuto || _vm.loading\n    },\n    on: {\n      click: function ($event) {\n        $event.preventDefault();\n        return _vm.onSubmit.apply(null, arguments);\n      }\n    },\n    scopedSlots: _vm._u([{\n      key: \"icon\",\n      fn: function () {\n        return [_vm.loading ? _c(\"IconLoading\", {\n          attrs: {\n            size: 16\n          }\n        }) : _c(\"IconCheck\", {\n          attrs: {\n            size: 16\n          }\n        })];\n      },\n      proxy: true\n    }], null, false, 98289116)\n  }, [_vm._v(\"\\n\\t\\t\\t\" + _vm._s(_vm.submitButtonText) + \"\\n\\t\\t\")]) : _vm.mode === \"manual\" ? _c(\"ButtonVue\", {\n    staticClass: \"account-form__submit-button\",\n    attrs: {\n      \"aria-label\": _vm.submitButtonText,\n      type: \"primary\",\n      \"native-type\": \"submit\",\n      disabled: _vm.isDisabledManual || _vm.loading\n    },\n    on: {\n      click: function ($event) {\n        $event.preventDefault();\n        return _vm.onSubmit.apply(null, arguments);\n      }\n    },\n    scopedSlots: _vm._u([{\n      key: \"icon\",\n      fn: function () {\n        return [_vm.loading ? _c(\"IconLoading\", {\n          attrs: {\n            size: 16\n          }\n        }) : _c(\"IconCheck\", {\n          attrs: {\n            size: 16\n          }\n        })];\n      },\n      proxy: true\n    }])\n  }, [_vm._v(\"\\n\\t\\t\\t\" + _vm._s(_vm.submitButtonText) + \"\\n\\t\\t\")]) : _vm._e()], 1), _vm._v(\" \"), _vm.feedback ? _c(\"div\", {\n    staticClass: \"account-form--feedback\"\n  }, [_vm._v(\"\\n\\t\\t\" + _vm._s(_vm.feedback) + \"\\n\\t\")]) : _vm._e()], 1);\n};\nvar staticRenderFns = [];\nrender._withStripped = true;\nexport { render, staticRenderFns };","/**\n * SPDX-FileCopyrightText: 2022 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\nimport { translate as t } from '@nextcloud/l10n';\nimport logger from '../logger.js';\nexport const CONSENT_ABORTED = 'OAUTH_CONSENT_ABORTED';\nexport async function getUserConsent(redirectUrl) {\n  const ssoWindow = window.open(redirectUrl, t('mail', 'Connect OAUTH2 account'), 'toolbar=no, menubar=no, width=600, height=700');\n  ssoWindow.focus();\n  await new Promise((resolve, reject) => {\n    window.addEventListener('message', event => {\n      const {\n        data\n      } = event;\n      logger.debug('Child window message received', {\n        event\n      });\n      if (data === 'DONE') {\n        logger.info('OAUTH2 user consent given');\n        resolve();\n      }\n    });\n    const windowClosedTimer = setInterval(() => {\n      if (ssoWindow.closed) {\n        clearInterval(windowClosedTimer);\n        reject(new Error(CONSENT_ABORTED));\n      }\n    }, 200);\n  });\n}","/**\n * SPDX-FileCopyrightText: 2022 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\nimport axios from '@nextcloud/axios';\nimport { generateUrl } from '@nextcloud/router';\nexport async function queryIspdb(host, email) {\n  return (await axios.get(generateUrl('/apps/mail/api/autoconfig/ispdb/{host}/{email}', {\n    host,\n    email\n  }))).data.data;\n}\nexport async function queryMx(email) {\n  return (await axios.get(generateUrl('/apps/mail/api/autoconfig/mx/{email}', {\n    email\n  }))).data.data;\n}\nexport async function testConnectivity(host, port) {\n  return (await axios.get(generateUrl('/apps/mail/api/autoconfig/test?host={host}&port={port}', {\n    host,\n    port\n  }))).data.data;\n}","// Imports\nimport ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/noSourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `[data-v-3d06ba11] .tabs-component-tabs {\n  display: flex;\n}\n[data-v-3d06ba11] .tabs-component-tab {\n  flex-grow: 1;\n  text-align: center;\n  color: var(--color-text-lighter);\n  margin-bottom: 10px;\n}\n[data-v-3d06ba11] .tabs-component-tab.is-active {\n  border-bottom: 1px solid black;\n  font-weight: bold;\n}\n[data-v-3d06ba11] .input-field {\n  margin: calc(var(--default-grid-baseline) * 3) 0;\n}\n.tabs-component-panels[data-v-3d06ba11] {\n  padding-top: 20px;\n}\n.tabs-component-panels label[data-v-3d06ba11] {\n  text-align: start;\n  width: 100%;\n  display: inline-block;\n}\n.tabs-component-panels input[data-v-3d06ba11],\n.tabs-component-panels select[data-v-3d06ba11] {\n  margin-bottom: 10px;\n}`, \"\"]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/noSourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `\nh4[data-v-3d06ba11] {\n\ttext-align: start;\n}\n.flex-row[data-v-3d06ba11] {\n\tdisplay: flex;\n}\ninput.primary[data-v-3d06ba11] {\n\tcolor: var(--color-main-background);\n}\ninput[type='radio'][data-v-3d06ba11] {\n\tdisplay: none;\n}\ninput[type='radio'][disabled] + label[data-v-3d06ba11] {\n\tcursor: default;\n\topacity: 0.5;\n}\n.account-form__label--required[data-v-3d06ba11]:after {\n\tcontent:\" *\";\n}\n.account-form__heading--required[data-v-3d06ba11]:after {\n\tcontent:\" *\";\n}\n.account-form__submit-buttons[data-v-3d06ba11] {\n\tdisplay: flex;\n\tjustify-content: center;\n\tmargin-top: 5px;\n}\n.account-form__submit-button[data-v-3d06ba11] {\n\tdisplay: flex;\n\talign-items: center;\n}\n.account-form--feedback[data-v-3d06ba11] {\n\tcolor: var(--color-text-maxcontrast);\n\tmargin-top: 5px;\n\ttext-align: center;\n}\n.account-form--error[data-v-3d06ba11] {\n\ttext-align: start;\n\tfont-size: 14px;\n}\n#account-form[data-v-3d06ba11] {\n\tz-index: 1001;\n\twidth: 300px;\n\ttop: 15%;\n\tpadding-bottom: 50px;\n\tmargin: 0 auto;\n\tpadding-top: 30px;\n}\n#account-form input[data-v-3d06ba11] {\n\twidth: 100%;\n\tbox-sizing: border-box;\n}\n`, \"\"]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\n      import API from \"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../node_modules/css-loader/dist/cjs.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/sass-loader/dist/cjs.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AccountForm.vue?vue&type=style&index=0&id=3d06ba11&lang=scss&scoped=true\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../node_modules/css-loader/dist/cjs.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/sass-loader/dist/cjs.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AccountForm.vue?vue&type=style&index=0&id=3d06ba11&lang=scss&scoped=true\";\n       export default content && content.locals ? content.locals : undefined;\n","\n      import API from \"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../node_modules/css-loader/dist/cjs.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AccountForm.vue?vue&type=style&index=1&id=3d06ba11&scoped=true&lang=css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../node_modules/css-loader/dist/cjs.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AccountForm.vue?vue&type=style&index=1&id=3d06ba11&scoped=true&lang=css\";\n       export default content && content.locals ? content.locals : undefined;\n","import { render, staticRenderFns } from \"./AccountForm.vue?vue&type=template&id=3d06ba11&scoped=true\"\nimport script from \"./AccountForm.vue?vue&type=script&lang=js\"\nexport * from \"./AccountForm.vue?vue&type=script&lang=js\"\nimport style0 from \"./AccountForm.vue?vue&type=style&index=0&id=3d06ba11&lang=scss&scoped=true\"\nimport style1 from \"./AccountForm.vue?vue&type=style&index=1&id=3d06ba11&scoped=true&lang=css\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"3d06ba11\",\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/var/www/nextcloud/apps/mail/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('3d06ba11')) {\n      api.createRecord('3d06ba11', component.options)\n    } else {\n      api.reload('3d06ba11', component.options)\n    }\n    module.hot.accept(\"./AccountForm.vue?vue&type=template&id=3d06ba11&scoped=true\", function () {\n      api.rerender('3d06ba11', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"src/components/AccountForm.vue\"\nexport default component.exports","import mod from \"-!../../node_modules/babel-loader/lib/index.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AccountForm.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../node_modules/babel-loader/lib/index.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AccountForm.vue?vue&type=script&lang=js\"","export * from \"-!../../node_modules/babel-loader/lib/index.js!../../node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[3]!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AccountForm.vue?vue&type=template&id=3d06ba11&scoped=true\"","export * from \"-!../../node_modules/style-loader/dist/cjs.js!../../node_modules/css-loader/dist/cjs.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/sass-loader/dist/cjs.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AccountForm.vue?vue&type=style&index=0&id=3d06ba11&lang=scss&scoped=true\"","export * from \"-!../../node_modules/style-loader/dist/cjs.js!../../node_modules/css-loader/dist/cjs.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AccountForm.vue?vue&type=style&index=1&id=3d06ba11&scoped=true&lang=css\""],"names":[],"sourceRoot":""}