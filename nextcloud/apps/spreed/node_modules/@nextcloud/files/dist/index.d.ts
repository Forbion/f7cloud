import { Entry } from './newFileMenu';
import { Folder } from './files/folder';

export { FileAction, getFileActions, registerFileAction, DefaultType } from './fileAction';
export { Header, getFileListHeaders, registerFileListHeaders } from './fileListHeaders';
export { type Entry, NewMenuEntryCategory } from './newFileMenu';
export { Permission } from './permissions';
export * from './dav/davProperties';
export * from './dav/davPermissions';
export * from './dav/dav';
export { FileType } from './files/fileType';
export { File, type IFile } from './files/file';
export { Folder, type IFolder } from './files/folder';
export { Node, NodeStatus, type INode } from './files/node';
export * from './utils/filename-validation';
export { getUniqueName } from './utils/filename';
export { formatFileSize, parseFileSize } from './utils/fileSize';
export { orderBy, type SortingOrder } from './utils/sorting';
export { sortNodes, FilesSortingMode, type FilesSortingOptions } from './utils/fileSorting';
export * from './navigation/index';
export * from './fileListFilters';
/**
 * Add a new menu entry to the upload manager menu
 *
 * @param entry The new file menu entry
 */
export declare const addNewFileMenuEntry: (entry: Entry) => void;
/**
 * Remove a previously registered entry from the upload menu
 *
 * @param entry Entry to remove (or name of entry)
 */
export declare const removeNewFileMenuEntry: (entry: Entry | string) => void;
/**
 * Get the list of registered entries from the upload menu
 *
 * @param {Folder} context the creation context. Usually the current folder FileInfo
 */
export declare const getNewFileMenuEntries: (context?: Folder) => Entry[];
