{"version":3,"file":"index.cjs","sources":["../lib/utils/logger.ts","../lib/newFileMenu.ts","../lib/fileAction.ts","../lib/fileListHeaders.ts","../lib/permissions.ts","../lib/dav/davProperties.ts","../lib/dav/davPermissions.ts","../lib/files/fileType.ts","../lib/files/nodeData.ts","../lib/files/node.ts","../lib/files/file.ts","../lib/files/folder.ts","../lib/dav/dav.ts","../lib/utils/filename-validation.ts","../lib/utils/filename.ts","../lib/utils/fileSize.ts","../lib/utils/sorting.ts","../lib/utils/fileSorting.ts","../lib/navigation/navigation.ts","../lib/navigation/column.ts","../node_modules/fast-xml-parser/src/util.js","../node_modules/fast-xml-parser/src/validator.js","../node_modules/fast-xml-parser/src/xmlparser/OptionsBuilder.js","../node_modules/fast-xml-parser/src/xmlparser/xmlNode.js","../node_modules/fast-xml-parser/src/xmlparser/DocTypeReader.js","../node_modules/strnum/strnum.js","../node_modules/fast-xml-parser/src/ignoreAttributes.js","../node_modules/fast-xml-parser/src/xmlparser/OrderedObjParser.js","../node_modules/fast-xml-parser/src/xmlparser/node2json.js","../node_modules/fast-xml-parser/src/xmlparser/XMLParser.js","../node_modules/fast-xml-parser/src/xmlbuilder/orderedJs2Xml.js","../node_modules/fast-xml-parser/src/xmlbuilder/json2xml.js","../node_modules/fast-xml-parser/src/fxp.js","../node_modules/is-svg/index.js","../lib/navigation/view.ts","../node_modules/@nextcloud/event-bus/node_modules/semver/internal/debug.js","../node_modules/@nextcloud/event-bus/node_modules/semver/internal/constants.js","../node_modules/@nextcloud/event-bus/node_modules/semver/internal/re.js","../node_modules/@nextcloud/event-bus/node_modules/semver/internal/parse-options.js","../node_modules/@nextcloud/event-bus/node_modules/semver/internal/identifiers.js","../node_modules/@nextcloud/event-bus/node_modules/semver/classes/semver.js","../node_modules/@nextcloud/event-bus/node_modules/semver/functions/parse.js","../node_modules/@nextcloud/event-bus/node_modules/semver/functions/valid.js","../node_modules/@nextcloud/event-bus/node_modules/semver/functions/major.js","../node_modules/@nextcloud/event-bus/dist/index.mjs","../lib/fileListFilters.ts","../lib/index.ts"],"sourcesContent":["/**\n * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\nimport { getLoggerBuilder } from '@nextcloud/logger'\n\nexport default getLoggerBuilder()\n\t.setApp('@nextcloud/files')\n\t.detectUser()\n\t.build()\n","/**\n * SPDX-FileCopyrightText: 2021 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\nimport type { Folder, Node } from './index'\nimport logger from './utils/logger'\n\nexport enum NewMenuEntryCategory {\n\t/**\n\t * For actions where the user is intended to upload from their device\n\t */\n\tUploadFromDevice = 0,\n\t/**\n\t * For actions that create new nodes on the server without uploading\n\t */\n\tCreateNew = 1,\n\t/**\n\t * For everything not matching the other categories\n\t */\n\tOther = 2,\n}\n\nexport interface Entry {\n\t/** Unique ID */\n\tid: string\n\n\t/**\n\t * Category to put this entry in\n\t * (supported since Nextcloud 30)\n\t * @since 3.3.0\n\t * @default NewMenuEntryCategory.CreateNew\n\t */\n\tcategory?: NewMenuEntryCategory\n\n\t/** Translatable string displayed in the menu */\n\tdisplayName: string\n\n\t/**\n\t * Condition wether this entry is shown or not\n\t * @param context the creation context. Usually the current folder\n\t */\n\tenabled?: (context: Folder) => boolean\n\n\t/**\n\t * Either iconSvgInline or iconClass must be defined\n\t * Svg as inline string. <svg><path fill=\"...\" /></svg>\n\t */\n\ticonSvgInline?: string\n\n\t/**\n\t * Existing icon css class\n\t * @deprecated use iconSvgInline instead\n\t */\n\ticonClass?: string\n\n\t/** Order of the entry in the menu */\n\torder?: number\n\n\t/**\n\t * Function to be run after creation\n\t * @param context the creation context. Usually the current folder\n\t * @param content list of file/folders present in the context folder\n\t */\n\thandler: (context: Folder, content: Node[]) => void\n}\n\nexport class NewFileMenu {\n\n\tprivate _entries: Array<Entry> = []\n\n\tpublic registerEntry(entry: Entry) {\n\t\tthis.validateEntry(entry)\n\t\tentry.category = entry.category ?? NewMenuEntryCategory.CreateNew\n\t\tthis._entries.push(entry)\n\t}\n\n\tpublic unregisterEntry(entry: Entry | string) {\n\t\tconst entryIndex = typeof entry === 'string'\n\t\t\t? this.getEntryIndex(entry)\n\t\t\t: this.getEntryIndex(entry.id)\n\n\t\tif (entryIndex === -1) {\n\t\t\tlogger.warn('Entry not found, nothing removed', { entry, entries: this.getEntries() })\n\t\t\treturn\n\t\t}\n\n\t\tthis._entries.splice(entryIndex, 1)\n\t}\n\n\t/**\n\t * Get the list of registered entries\n\t *\n\t * @param {Folder} context the creation context. Usually the current folder\n\t */\n\tpublic getEntries(context?: Folder): Array<Entry> {\n\t\tif (context) {\n\t\t\treturn this._entries\n\t\t\t\t.filter(entry => typeof entry.enabled === 'function' ? entry.enabled(context) : true)\n\t\t}\n\t\treturn this._entries\n\t}\n\n\tprivate getEntryIndex(id: string): number {\n\t\treturn this._entries.findIndex(entry => entry.id === id)\n\t}\n\n\tprivate validateEntry(entry: Entry) {\n\t\tif (!entry.id || !entry.displayName || !(entry.iconSvgInline || entry.iconClass) || !entry.handler) {\n\t\t\tthrow new Error('Invalid entry')\n\t\t}\n\n\t\tif (typeof entry.id !== 'string'\n\t\t\t|| typeof entry.displayName !== 'string') {\n\t\t\tthrow new Error('Invalid id or displayName property')\n\t\t}\n\n\t\tif ((entry.iconClass && typeof entry.iconClass !== 'string')\n\t\t\t|| (entry.iconSvgInline && typeof entry.iconSvgInline !== 'string')) {\n\t\t\tthrow new Error('Invalid icon provided')\n\t\t}\n\n\t\tif (entry.enabled !== undefined && typeof entry.enabled !== 'function') {\n\t\t\tthrow new Error('Invalid enabled property')\n\t\t}\n\n\t\tif (typeof entry.handler !== 'function') {\n\t\t\tthrow new Error('Invalid handler property')\n\t\t}\n\n\t\tif ('order' in entry && typeof entry.order !== 'number') {\n\t\t\tthrow new Error('Invalid order property')\n\t\t}\n\n\t\tif (this.getEntryIndex(entry.id) !== -1) {\n\t\t\tthrow new Error('Duplicate entry')\n\t\t}\n\t}\n\n}\n\nexport const getNewFileMenu = function(): NewFileMenu {\n\tif (typeof window._nc_newfilemenu === 'undefined') {\n\t\twindow._nc_newfilemenu = new NewFileMenu()\n\t\tlogger.debug('NewFileMenu initialized')\n\t}\n\treturn window._nc_newfilemenu\n}\n","/**\n * SPDX-FileCopyrightText: 2023 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\nimport { Node } from './files/node'\nimport { View } from './navigation/view'\nimport logger from './utils/logger'\n\nexport enum DefaultType {\n\tDEFAULT = 'default',\n\tHIDDEN = 'hidden',\n}\n\ninterface FileActionData {\n\t/** Unique ID */\n\tid: string\n\t/** Translatable string displayed in the menu */\n\tdisplayName: (files: Node[], view: View) => string\n\t/** Translatable title for of the action */\n\ttitle?: (files: Node[], view: View) => string\n\t/** Svg as inline string. <svg><path fill=\"...\" /></svg> */\n\ticonSvgInline: (files: Node[], view: View) => string\n\t/** Condition wether this action is shown or not */\n\tenabled?: (files: Node[], view: View) => boolean\n\n\t/**\n\t * Function executed on single file action\n\t * @return true if the action was executed successfully,\n\t * false otherwise and null if the action is silent/undefined.\n\t * @throws Error if the action failed\n\t */\n\texec: (file: Node, view: View, dir: string) => Promise<boolean|null>,\n\t/**\n\t * Function executed on multiple files action\n\t * @return true if the action was executed successfully,\n\t * false otherwise and null if the action is silent/undefined.\n\t * @throws Error if the action failed\n\t */\n\texecBatch?: (files: Node[], view: View, dir: string) => Promise<(boolean|null)[]>\n\n\t/** This action order in the list */\n\torder?: number,\n\n\t/**\n\t * This action's parent id in the list.\n\t * If none found, will be displayed as a top-level action.\n\t */\n\tparent?: string,\n\n\t/**\n\t * Make this action the default.\n\t * If multiple actions are default, the first one\n\t * will be used. The other ones will be put as first\n\t * entries in the actions menu iff DefaultType.Hidden is not used.\n\t * A DefaultType.Hidden action will never be shown\n\t * in the actions menu even if another action takes\n\t * its place as default.\n\t */\n\tdefault?: DefaultType,\n\t/**\n\t * If true, the renderInline function will be called\n\t */\n\tinline?: (file: Node, view: View) => boolean,\n\t/**\n\t * If defined, the returned html element will be\n\t * appended before the actions menu.\n\t */\n\trenderInline?: (file: Node, view: View) => Promise<HTMLElement | null>,\n}\n\nexport class FileAction {\n\n\tprivate _action: FileActionData\n\n\tconstructor(action: FileActionData) {\n\t\tthis.validateAction(action)\n\t\tthis._action = action\n\t}\n\n\tget id() {\n\t\treturn this._action.id\n\t}\n\n\tget displayName() {\n\t\treturn this._action.displayName\n\t}\n\n\tget title() {\n\t\treturn this._action.title\n\t}\n\n\tget iconSvgInline() {\n\t\treturn this._action.iconSvgInline\n\t}\n\n\tget enabled() {\n\t\treturn this._action.enabled\n\t}\n\n\tget exec() {\n\t\treturn this._action.exec\n\t}\n\n\tget execBatch() {\n\t\treturn this._action.execBatch\n\t}\n\n\tget order() {\n\t\treturn this._action.order\n\t}\n\n\tget parent() {\n\t\treturn this._action.parent\n\t}\n\n\tget default() {\n\t\treturn this._action.default\n\t}\n\n\tget inline() {\n\t\treturn this._action.inline\n\t}\n\n\tget renderInline() {\n\t\treturn this._action.renderInline\n\t}\n\n\tprivate validateAction(action: FileActionData) {\n\t\tif (!action.id || typeof action.id !== 'string') {\n\t\t\tthrow new Error('Invalid id')\n\t\t}\n\n\t\tif (!action.displayName || typeof action.displayName !== 'function') {\n\t\t\tthrow new Error('Invalid displayName function')\n\t\t}\n\n\t\tif ('title' in action && typeof action.title !== 'function') {\n\t\t\tthrow new Error('Invalid title function')\n\t\t}\n\n\t\tif (!action.iconSvgInline || typeof action.iconSvgInline !== 'function') {\n\t\t\tthrow new Error('Invalid iconSvgInline function')\n\t\t}\n\n\t\tif (!action.exec || typeof action.exec !== 'function') {\n\t\t\tthrow new Error('Invalid exec function')\n\t\t}\n\n\t\t// Optional properties --------------------------------------------\n\t\tif ('enabled' in action && typeof action.enabled !== 'function') {\n\t\t\tthrow new Error('Invalid enabled function')\n\t\t}\n\n\t\tif ('execBatch' in action && typeof action.execBatch !== 'function') {\n\t\t\tthrow new Error('Invalid execBatch function')\n\t\t}\n\n\t\tif ('order' in action && typeof action.order !== 'number') {\n\t\t\tthrow new Error('Invalid order')\n\t\t}\n\n\t\tif ('parent' in action && typeof action.parent !== 'string') {\n\t\t\tthrow new Error('Invalid parent')\n\t\t}\n\n\t\tif (action.default && !Object.values(DefaultType).includes(action.default)) {\n\t\t\tthrow new Error('Invalid default')\n\t\t}\n\n\t\tif ('inline' in action && typeof action.inline !== 'function') {\n\t\t\tthrow new Error('Invalid inline function')\n\t\t}\n\n\t\tif ('renderInline' in action && typeof action.renderInline !== 'function') {\n\t\t\tthrow new Error('Invalid renderInline function')\n\t\t}\n\t}\n\n}\n\nexport const registerFileAction = function(action: FileAction): void {\n\tif (typeof window._nc_fileactions === 'undefined') {\n\t\twindow._nc_fileactions = []\n\t\tlogger.debug('FileActions initialized')\n\t}\n\n\t// Check duplicates\n\tif (window._nc_fileactions.find(search => search.id === action.id)) {\n\t\tlogger.error(`FileAction ${action.id} already registered`, { action })\n\t\treturn\n\t}\n\n\twindow._nc_fileactions.push(action)\n}\n\nexport const getFileActions = function(): FileAction[] {\n\tif (typeof window._nc_fileactions === 'undefined') {\n\t\twindow._nc_fileactions = []\n\t\tlogger.debug('FileActions initialized')\n\t}\n\n\treturn window._nc_fileactions\n}\n","/**\n * SPDX-FileCopyrightText: 2023 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\nimport { Folder } from './files/folder'\nimport { View } from './navigation/view'\nimport logger from './utils/logger'\n\nexport interface HeaderData {\n\t/** Unique ID */\n\tid: string\n\t/** Order */\n\torder: number\n\t/** Condition wether this header is shown or not */\n\tenabled?: (folder: Folder, view: View) => boolean\n\t/** Executed when file list is initialized */\n\trender: (el: HTMLElement, folder: Folder, view: View) => void\n\t/** Executed when root folder changed */\n\tupdated(folder: Folder, view: View)\n}\n\nexport class Header {\n\n\tprivate _header: HeaderData\n\n\tconstructor(header: HeaderData) {\n\t\tthis.validateHeader(header)\n\t\tthis._header = header\n\t}\n\n\tget id() {\n\t\treturn this._header.id\n\t}\n\n\tget order() {\n\t\treturn this._header.order\n\t}\n\n\tget enabled() {\n\t\treturn this._header.enabled\n\t}\n\n\tget render() {\n\t\treturn this._header.render\n\t}\n\n\tget updated() {\n\t\treturn this._header.updated\n\t}\n\n\tprivate validateHeader(header: HeaderData) {\n\t\tif (!header.id || !header.render || !header.updated) {\n\t\t\tthrow new Error('Invalid header: id, render and updated are required')\n\t\t}\n\n\t\tif (typeof header.id !== 'string') {\n\t\t\tthrow new Error('Invalid id property')\n\t\t}\n\n\t\tif (header.enabled !== undefined && typeof header.enabled !== 'function') {\n\t\t\tthrow new Error('Invalid enabled property')\n\t\t}\n\n\t\tif (header.render && typeof header.render !== 'function') {\n\t\t\tthrow new Error('Invalid render property')\n\t\t}\n\n\t\tif (header.updated && typeof header.updated !== 'function') {\n\t\t\tthrow new Error('Invalid updated property')\n\t\t}\n\t}\n\n}\n\nexport const registerFileListHeaders = function(header: Header): void {\n\tif (typeof window._nc_filelistheader === 'undefined') {\n\t\twindow._nc_filelistheader = []\n\t\tlogger.debug('FileListHeaders initialized')\n\t}\n\n\t// Check duplicates\n\tif (window._nc_filelistheader.find(search => search.id === header.id)) {\n\t\tlogger.error(`Header ${header.id} already registered`, { header })\n\t\treturn\n\t}\n\n\twindow._nc_filelistheader.push(header)\n}\n\nexport const getFileListHeaders = function(): Header[] {\n\tif (typeof window._nc_filelistheader === 'undefined') {\n\t\twindow._nc_filelistheader = []\n\t\tlogger.debug('FileListHeaders initialized')\n\t}\n\n\treturn window._nc_filelistheader\n}\n","/**\n * SPDX-FileCopyrightText: 2022 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\n/**\n * Node permissions\n */\nexport enum Permission {\n\tNONE = 0,\n\tCREATE = 4,\n\tREAD = 1,\n\tUPDATE = 2,\n\tDELETE = 8,\n\tSHARE = 16,\n\tALL = 31,\n}\n","/**\n * SPDX-FileCopyrightText: 2023 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\nimport { getCurrentUser } from '@nextcloud/auth'\nimport logger from '../utils/logger'\n\nexport type DavProperty = { [key: string]: string }\n\nexport const defaultDavProperties = [\n\t'd:getcontentlength',\n\t'd:getcontenttype',\n\t'd:getetag',\n\t'd:getlastmodified',\n\t'd:creationdate',\n\t'd:displayname',\n\t'd:quota-available-bytes',\n\t'd:resourcetype',\n\t'nc:has-preview',\n\t'nc:is-encrypted',\n\t'nc:mount-type',\n\t'oc:comments-unread',\n\t'oc:favorite',\n\t'oc:fileid',\n\t'oc:owner-display-name',\n\t'oc:owner-id',\n\t'oc:permissions',\n\t'oc:size',\n]\n\nexport const defaultDavNamespaces = {\n\td: 'DAV:',\n\tnc: 'http://nextcloud.org/ns',\n\toc: 'http://owncloud.org/ns',\n\tocs: 'http://open-collaboration-services.org/ns',\n}\n\n/**\n * Register custom DAV properties\n *\n * Can be used if your app introduces custom DAV properties, so e.g. the files app can make use of it.\n *\n * @param prop The property\n * @param namespace The namespace of the property\n */\nexport const registerDavProperty = function(prop: string, namespace: DavProperty = { nc: 'http://nextcloud.org/ns' }): boolean {\n\tif (typeof window._nc_dav_properties === 'undefined') {\n\t\twindow._nc_dav_properties = [...defaultDavProperties]\n\t\twindow._nc_dav_namespaces = { ...defaultDavNamespaces }\n\t}\n\n\tconst namespaces = { ...window._nc_dav_namespaces, ...namespace }\n\n\t// Check duplicates\n\tif (window._nc_dav_properties.find((search) => search === prop)) {\n\t\tlogger.warn(`${prop} already registered`, { prop })\n\t\treturn false\n\t}\n\n\tif (prop.startsWith('<') || prop.split(':').length !== 2) {\n\t\tlogger.error(`${prop} is not valid. See example: 'oc:fileid'`, { prop })\n\t\treturn false\n\t}\n\n\tconst ns = prop.split(':')[0]\n\tif (!namespaces[ns]) {\n\t\tlogger.error(`${prop} namespace unknown`, { prop, namespaces })\n\t\treturn false\n\t}\n\n\twindow._nc_dav_properties.push(prop)\n\twindow._nc_dav_namespaces = namespaces\n\treturn true\n}\n\n/**\n * Get the registered dav properties\n */\nexport const getDavProperties = function(): string {\n\tif (typeof window._nc_dav_properties === 'undefined') {\n\t\twindow._nc_dav_properties = [...defaultDavProperties]\n\t}\n\n\treturn window._nc_dav_properties.map((prop) => `<${prop} />`).join(' ')\n}\n\n/**\n * Get the registered dav namespaces\n */\nexport const getDavNameSpaces = function(): string {\n\tif (typeof window._nc_dav_namespaces === 'undefined') {\n\t\twindow._nc_dav_namespaces = { ...defaultDavNamespaces }\n\t}\n\n\treturn Object.keys(window._nc_dav_namespaces)\n\t\t.map((ns) => `xmlns:${ns}=\"${window._nc_dav_namespaces?.[ns]}\"`)\n\t\t.join(' ')\n}\n\n/**\n * Get the default PROPFIND request body\n */\nexport const davGetDefaultPropfind = function(): string {\n\treturn `<?xml version=\"1.0\"?>\n\t\t<d:propfind ${getDavNameSpaces()}>\n\t\t\t<d:prop>\n\t\t\t\t${getDavProperties()}\n\t\t\t</d:prop>\n\t\t</d:propfind>`\n}\n\n/**\n * Get the REPORT body to filter for favorite nodes\n */\nexport const davGetFavoritesReport = function(): string {\n\treturn `<?xml version=\"1.0\"?>\n\t\t<oc:filter-files ${getDavNameSpaces()}>\n\t\t\t<d:prop>\n\t\t\t\t${getDavProperties()}\n\t\t\t</d:prop>\n\t\t\t<oc:filter-rules>\n\t\t\t\t<oc:favorite>1</oc:favorite>\n\t\t\t</oc:filter-rules>\n\t\t</oc:filter-files>`\n}\n\n/**\n * Get the SEARCH body to search for recently modified files\n *\n * @param lastModified Oldest timestamp to include (Unix timestamp)\n * @example\n * ```ts\n * // SEARCH for recent files need a different DAV endpoint\n * const client = davGetClient(generateRemoteUrl('dav'))\n * // Timestamp of last week\n * const lastWeek = Math.round(Date.now() / 1000) - (60 * 60 * 24 * 7)\n * const contentsResponse = await client.getDirectoryContents(path, {\n *     details: true,\n *     data: davGetRecentSearch(lastWeek),\n *     headers: {\n *         method: 'SEARCH',\n *         'Content-Type': 'application/xml; charset=utf-8',\n *     },\n *     deep: true,\n * }) as ResponseDataDetailed<FileStat[]>\n * ```\n */\nexport const davGetRecentSearch = function(lastModified: number): string {\n\treturn `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<d:searchrequest ${getDavNameSpaces()}\n\txmlns:ns=\"https://github.com/icewind1991/SearchDAV/ns\">\n\t<d:basicsearch>\n\t\t<d:select>\n\t\t\t<d:prop>\n\t\t\t\t${getDavProperties()}\n\t\t\t</d:prop>\n\t\t</d:select>\n\t\t<d:from>\n\t\t\t<d:scope>\n\t\t\t\t<d:href>/files/${getCurrentUser()?.uid}/</d:href>\n\t\t\t\t<d:depth>infinity</d:depth>\n\t\t\t</d:scope>\n\t\t</d:from>\n\t\t<d:where>\n\t\t\t<d:and>\n\t\t\t\t<d:or>\n\t\t\t\t\t<d:not>\n\t\t\t\t\t\t<d:eq>\n\t\t\t\t\t\t\t<d:prop>\n\t\t\t\t\t\t\t\t<d:getcontenttype/>\n\t\t\t\t\t\t\t</d:prop>\n\t\t\t\t\t\t\t<d:literal>httpd/unix-directory</d:literal>\n\t\t\t\t\t\t</d:eq>\n\t\t\t\t\t</d:not>\n\t\t\t\t\t<d:eq>\n\t\t\t\t\t\t<d:prop>\n\t\t\t\t\t\t\t<oc:size/>\n\t\t\t\t\t\t</d:prop>\n\t\t\t\t\t\t<d:literal>0</d:literal>\n\t\t\t\t\t</d:eq>\n\t\t\t\t</d:or>\n\t\t\t\t<d:gt>\n\t\t\t\t\t<d:prop>\n\t\t\t\t\t\t<d:getlastmodified/>\n\t\t\t\t\t</d:prop>\n\t\t\t\t\t<d:literal>${lastModified}</d:literal>\n\t\t\t\t</d:gt>\n\t\t\t</d:and>\n\t\t</d:where>\n\t\t<d:orderby>\n\t\t\t<d:order>\n\t\t\t\t<d:prop>\n\t\t\t\t\t<d:getlastmodified/>\n\t\t\t\t</d:prop>\n\t\t\t\t<d:descending/>\n\t\t\t</d:order>\n\t\t</d:orderby>\n\t\t<d:limit>\n\t\t\t<d:nresults>100</d:nresults>\n\t\t\t<ns:firstresult>0</ns:firstresult>\n\t\t</d:limit>\n\t</d:basicsearch>\n</d:searchrequest>`\n}\n","/**\n * SPDX-FileCopyrightText: 2023 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\nimport { Permission } from '../permissions'\n\n/**\n * Parse the webdav permission string to a permission enum\n *\n * @param permString The DAV permission string\n */\nexport const davParsePermissions = function(permString = ''): number {\n\tlet permissions = Permission.NONE\n\n\tif (!permString) { return permissions }\n\n\tif (permString.includes('C') || permString.includes('K')) { permissions |= Permission.CREATE }\n\n\tif (permString.includes('G')) { permissions |= Permission.READ }\n\n\tif (permString.includes('W') || permString.includes('N') || permString.includes('V')) { permissions |= Permission.UPDATE }\n\n\tif (permString.includes('D')) { permissions |= Permission.DELETE }\n\n\tif (permString.includes('R')) { permissions |= Permission.SHARE }\n\n\treturn permissions\n}\n","/**\n * SPDX-FileCopyrightText: 2022 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\nexport enum FileType {\n\tFolder = 'folder',\n\tFile = 'file',\n}\n","/**\n * SPDX-FileCopyrightText: 2022 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\nimport { join } from 'path'\nimport { Permission } from '../permissions'\nimport { NodeStatus } from './node'\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport interface Attribute { [key: string]: any }\n\nexport interface NodeData {\n\t/** Unique ID */\n\tid?: number\n\n\t/**\n\t * URL to the ressource.\n\t * e.g. https://cloud.domain.com/remote.php/dav/files/emma/Photos/picture.jpg\n\t * or https://domain.com/Photos/picture.jpg\n\t */\n\tsource: string\n\n\t/** Last modified time */\n\tmtime?: Date\n\n\t/** Creation time */\n\tcrtime?: Date\n\n\t/** The mime type Optional for folders only */\n\tmime?: string\n\n\t/** The node size type */\n\tsize?: number\n\n\t/** The node permissions */\n\tpermissions?: Permission\n\n\t/** The owner  UID of this node */\n\towner: string|null\n\n\t/** Optional the displayname of this node */\n\tdisplayname?: string\n\n\t/** The node attributes */\n\tattributes?: Attribute\n\n\t/**\n\t * The absolute root of the home relative to the service.\n\t * It is highly recommended to provide that information.\n\t * e.g. /files/emma\n\t */\n\troot?: string\n\n\t/** The node status */\n\tstatus?: NodeStatus\n}\n\n/**\n * Check if a node source is from a specific DAV service\n *\n * @param source The source to check\n * @param davService Pattern to check if source is DAV ressource\n */\nexport const isDavRessource = function(source: string, davService: RegExp): boolean {\n\treturn source.match(davService) !== null\n}\n\n/**\n * Validate Node construct data\n *\n * @param data The node data\n * @param davService Pattern to check if source is DAV ressource\n */\nexport const validateData = (data: NodeData, davService: RegExp) => {\n\tif (data.id && typeof data.id !== 'number') {\n\t\tthrow new Error('Invalid id type of value')\n\t}\n\n\tif (!data.source) {\n\t\tthrow new Error('Missing mandatory source')\n\t}\n\n\ttry {\n\t\t// eslint-disable-next-line no-new\n\t\tnew URL(data.source)\n\t} catch (e) {\n\t\tthrow new Error('Invalid source format, source must be a valid URL')\n\t}\n\n\tif (!data.source.startsWith('http')) {\n\t\tthrow new Error('Invalid source format, only http(s) is supported')\n\t}\n\n\tif (data.displayname && typeof data.displayname !== 'string') {\n\t\tthrow new Error('Invalid displayname type')\n\t}\n\n\tif (data.mtime && !(data.mtime instanceof Date)) {\n\t\tthrow new Error('Invalid mtime type')\n\t}\n\n\tif (data.crtime && !(data.crtime instanceof Date)) {\n\t\tthrow new Error('Invalid crtime type')\n\t}\n\n\tif (!data.mime || typeof data.mime !== 'string'\n\t\t|| !data.mime.match(/^[-\\w.]+\\/[-+\\w.]+$/gi)) {\n\t\tthrow new Error('Missing or invalid mandatory mime')\n\t}\n\n\t// Allow size to be 0\n\tif ('size' in data && typeof data.size !== 'number' && data.size !== undefined) {\n\t\tthrow new Error('Invalid size type')\n\t}\n\n\t// Allow permissions to be 0\n\tif ('permissions' in data\n\t\t&& data.permissions !== undefined\n\t\t&& !(typeof data.permissions === 'number'\n\t\t\t&& data.permissions >= Permission.NONE\n\t\t\t&& data.permissions <= Permission.ALL\n\t\t)) {\n\t\tthrow new Error('Invalid permissions')\n\t}\n\n\tif (data.owner\n\t\t&& data.owner !== null\n\t\t&& typeof data.owner !== 'string') {\n\t\tthrow new Error('Invalid owner type')\n\t}\n\n\tif (data.attributes && typeof data.attributes !== 'object') {\n\t\tthrow new Error('Invalid attributes type')\n\t}\n\n\tif (data.root && typeof data.root !== 'string') {\n\t\tthrow new Error('Invalid root type')\n\t}\n\n\tif (data.root && !data.root.startsWith('/')) {\n\t\tthrow new Error('Root must start with a leading slash')\n\t}\n\n\tif (data.root && !data.source.includes(data.root)) {\n\t\tthrow new Error('Root must be part of the source')\n\t}\n\n\tif (data.root && isDavRessource(data.source, davService)) {\n\t\tconst service = data.source.match(davService)![0]\n\t\tif (!data.source.includes(join(service, data.root))) {\n\t\t\tthrow new Error('The root must be relative to the service. e.g /files/emma')\n\t\t}\n\t}\n\n\tif (data.status && !Object.values(NodeStatus).includes(data.status)) {\n\t\tthrow new Error('Status must be a valid NodeStatus')\n\t}\n}\n","/**\n * SPDX-FileCopyrightText: 2022 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\nimport { basename, extname, dirname } from 'path'\nimport { encodePath } from '@nextcloud/paths'\n\nimport { Permission } from '../permissions'\nimport { FileType } from './fileType'\nimport { Attribute, NodeData, isDavRessource, validateData } from './nodeData'\nimport logger from '../utils/logger'\n\nexport enum NodeStatus {\n\t/** This is a new node and it doesn't exists on the filesystem yet */\n\tNEW = 'new',\n\t/** This node has failed and is unavailable  */\n\tFAILED = 'failed',\n\t/** This node is currently loading or have an operation in progress */\n\tLOADING = 'loading',\n\t/** This node is locked and cannot be modified */\n\tLOCKED = 'locked',\n}\n\ninterface NodeInternalData extends NodeData {\n\tattributes: Attribute\n}\n\nexport abstract class Node {\n\n\tprivate _data: NodeInternalData\n\tprivate _attributes: Attribute\n\tprivate _knownDavService = /(remote|public)\\.php\\/(web)?dav/i\n\n\tprivate readonlyAttributes = Object.entries(Object.getOwnPropertyDescriptors(Node.prototype))\n\t\t.filter(e => typeof e[1].get === 'function' && e[0] !== '__proto__')\n\t\t.map(e => e[0])\n\n\tprivate handler = {\n\t\tset: (target: Attribute, prop: string, value: unknown): boolean => {\n\t\t\tif (this.readonlyAttributes.includes(prop)) {\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t\t// Apply original changes\n\t\t\treturn Reflect.set(target, prop, value)\n\t\t},\n\t\tdeleteProperty: (target: Attribute, prop: string): boolean => {\n\t\t\tif (this.readonlyAttributes.includes(prop)) {\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t\t// Apply original changes\n\t\t\treturn Reflect.deleteProperty(target, prop)\n\t\t},\n\t\t// TODO: This is deprecated and only needed for files v3\n\t\tget: (target: Attribute, prop: string, receiver) => {\n\t\t\tif (this.readonlyAttributes.includes(prop)) {\n\t\t\t\tlogger.warn(`Accessing \"Node.attributes.${prop}\" is deprecated, access it directly on the Node instance.`)\n\t\t\t\treturn Reflect.get(this, prop)\n\t\t\t}\n\t\t\treturn Reflect.get(target, prop, receiver)\n\t\t},\n\t} as ProxyHandler<Attribute>\n\n\tconstructor(data: NodeData, davService?: RegExp) {\n\t\t// Validate data\n\t\tvalidateData(data, davService || this._knownDavService)\n\n\t\tthis._data = {\n\t\t\t// TODO: Remove with next major release, this is just for compatibility\n\t\t\tdisplayname: data.attributes?.displayname,\n\t\t\t...data,\n\t\t\tattributes: {},\n\t\t}\n\n\t\t// Proxy the attributes to update the mtime on change\n\t\tthis._attributes = new Proxy(this._data.attributes!, this.handler)\n\n\t\t// Update attributes, this sanitizes the attributes to only contain valid attributes\n\t\tthis.update(data.attributes ?? {})\n\n\t\tif (davService) {\n\t\t\tthis._knownDavService = davService\n\t\t}\n\t}\n\n\t/**\n\t * Get the source url to this object\n\t * There is no setter as the source is not meant to be changed manually.\n\t * You can use the rename or move method to change the source.\n\t */\n\tget source(): string {\n\t\t// strip any ending slash\n\t\treturn this._data.source.replace(/\\/$/i, '')\n\t}\n\n\t/**\n\t * Get the encoded source url to this object for requests purposes\n\t */\n\tget encodedSource(): string {\n\t\tconst { origin } = new URL(this.source)\n\t\treturn origin + encodePath(this.source.slice(origin.length))\n\t}\n\n\t/**\n\t * Get this object name\n\t * There is no setter as the source is not meant to be changed manually.\n\t * You can use the rename or move method to change the source.\n\t */\n\tget basename(): string {\n\t\treturn basename(this.source)\n\t}\n\n\t/**\n\t * The nodes displayname\n\t * By default the display name and the `basename` are identical,\n\t * but it is possible to have a different name. This happens\n\t * on the files app for example for shared folders.\n\t */\n\tget displayname(): string {\n\t\treturn this._data.displayname || this.basename\n\t}\n\n\t/**\n\t * Set the displayname\n\t */\n\tset displayname(displayname: string) {\n\t\tthis._data.displayname = displayname\n\t}\n\n\t/**\n\t * Get this object's extension\n\t * There is no setter as the source is not meant to be changed manually.\n\t * You can use the rename or move method to change the source.\n\t */\n\tget extension(): string|null {\n\t\treturn extname(this.source)\n\t}\n\n\t/**\n\t * Get the directory path leading to this object\n\t * Will use the relative path to root if available\n\t *\n\t * There is no setter as the source is not meant to be changed manually.\n\t * You can use the rename or move method to change the source.\n\t */\n\tget dirname(): string {\n\t\tif (this.root) {\n\t\t\tlet source = this.source\n\t\t\tif (this.isDavRessource) {\n\t\t\t\t// ensure we only work on the real path in case root is not distinct\n\t\t\t\tsource = source.split(this._knownDavService).pop()!\n\t\t\t}\n\t\t\t// Using replace would remove all part matching root\n\t\t\tconst firstMatch = source.indexOf(this.root)\n\t\t\t// Ensure we do not remove the leading slash\n\t\t\tconst root = this.root.replace(/\\/$/, '')\n\t\t\treturn dirname(source.slice(firstMatch + root.length) || '/')\n\t\t}\n\n\t\t// This should always be a valid URL\n\t\t// as this is tested in the constructor\n\t\tconst url = new URL(this.source)\n\t\treturn dirname(url.pathname)\n\t}\n\n\t/**\n\t * Is it a file or a folder ?\n\t */\n\tabstract get type(): FileType\n\n\t/**\n\t * Get the file mime\n\t * There is no setter as the mime is not meant to be changed\n\t */\n\tget mime(): string|undefined {\n\t\treturn this._data.mime\n\t}\n\n\t/**\n\t * Get the file modification time\n\t */\n\tget mtime(): Date|undefined {\n\t\treturn this._data.mtime\n\t}\n\n\t/**\n\t * Set the file modification time\n\t */\n\tset mtime(mtime: Date|undefined) {\n\t\tthis._data.mtime = mtime\n\t}\n\n\t/**\n\t * Get the file creation time\n\t * There is no setter as the creation time is not meant to be changed\n\t */\n\tget crtime(): Date|undefined {\n\t\treturn this._data.crtime\n\t}\n\n\t/**\n\t * Get the file size\n\t */\n\tget size(): number|undefined {\n\t\treturn this._data.size\n\t}\n\n\t/**\n\t * Set the file size\n\t */\n\tset size(size: number|undefined) {\n\t\tthis.updateMtime()\n\t\tthis._data.size = size\n\t}\n\n\t/**\n\t * Get the file attribute\n\t * This contains all additional attributes not provided by the Node class\n\t */\n\tget attributes(): Attribute {\n\t\treturn this._attributes\n\t}\n\n\t/**\n\t * Get the file permissions\n\t */\n\tget permissions(): Permission {\n\t\t// If this is not a dav ressource, we can only read it\n\t\tif (this.owner === null && !this.isDavRessource) {\n\t\t\treturn Permission.READ\n\t\t}\n\n\t\t// If the permissions are not defined, we have none\n\t\treturn this._data.permissions !== undefined\n\t\t\t? this._data.permissions\n\t\t\t: Permission.NONE\n\t}\n\n\t/**\n\t * Set the file permissions\n\t */\n\tset permissions(permissions: Permission) {\n\t\tthis.updateMtime()\n\t\tthis._data.permissions = permissions\n\t}\n\n\t/**\n\t * Get the file owner\n\t * There is no setter as the owner is not meant to be changed\n\t */\n\tget owner(): string|null {\n\t\t// Remote ressources have no owner\n\t\tif (!this.isDavRessource) {\n\t\t\treturn null\n\t\t}\n\t\treturn this._data.owner\n\t}\n\n\t/**\n\t * Is this a dav-related ressource ?\n\t */\n\tget isDavRessource(): boolean {\n\t\treturn isDavRessource(this.source, this._knownDavService)\n\t}\n\n\t/**\n\t * Get the dav root of this object\n\t * There is no setter as the root is not meant to be changed\n\t */\n\tget root(): string|null {\n\t\t// If provided (recommended), use the root and strip away the ending slash\n\t\tif (this._data.root) {\n\t\t\treturn this._data.root.replace(/^(.+)\\/$/, '$1')\n\t\t}\n\n\t\t// Use the source to get the root from the dav service\n\t\tif (this.isDavRessource) {\n\t\t\tconst root = dirname(this.source)\n\t\t\treturn root.split(this._knownDavService).pop() || null\n\t\t}\n\n\t\treturn null\n\t}\n\n\t/**\n\t * Get the absolute path of this object relative to the root\n\t */\n\tget path(): string {\n\t\tif (this.root) {\n\t\t\tlet source = this.source\n\t\t\tif (this.isDavRessource) {\n\t\t\t\t// ensure we only work on the real path in case root is not distinct\n\t\t\t\tsource = source.split(this._knownDavService).pop()!\n\t\t\t}\n\t\t\t// Using replace would remove all part matching root\n\t\t\tconst firstMatch = source.indexOf(this.root)\n\t\t\t// Ensure we do not remove the leading slash\n\t\t\tconst root = this.root.replace(/\\/$/, '')\n\t\t\treturn source.slice(firstMatch + root.length) || '/'\n\t\t}\n\t\treturn (this.dirname + '/' + this.basename).replace(/\\/\\//g, '/')\n\t}\n\n\t/**\n\t * Get the node id if defined.\n\t * There is no setter as the fileid is not meant to be changed\n\t */\n\tget fileid(): number|undefined {\n\t\treturn this._data?.id\n\t}\n\n\t/**\n\t * Get the node status.\n\t */\n\tget status(): NodeStatus|undefined {\n\t\treturn this._data?.status\n\t}\n\n\t/**\n\t * Set the node status.\n\t */\n\tset status(status: NodeStatus|undefined) {\n\t\tthis._data.status = status\n\t}\n\n\t/**\n\t * Move the node to a new destination\n\t *\n\t * @param {string} destination the new source.\n\t * e.g. https://cloud.domain.com/remote.php/dav/files/emma/Photos/picture.jpg\n\t */\n\tmove(destination: string) {\n\t\tvalidateData({ ...this._data, source: destination }, this._knownDavService)\n\t\tconst oldBasename = this.basename\n\n\t\tthis._data.source = destination\n\t\t// Check if the displayname and the (old) basename were the same\n\t\t// meaning no special displayname was set but just a fallback to the basename by Nextclouds WebDAV server\n\t\tif (this.displayname === oldBasename\n\t\t\t&& this.basename !== oldBasename) {\n\t\t\t// We have to assume that the displayname was not set but just a copy of the basename\n\t\t\t// this can not be guaranteed, so to be sure users should better refetch the node\n\t\t\tthis.displayname = this.basename\n\t\t}\n\t\tthis.updateMtime()\n\t}\n\n\t/**\n\t * Rename the node\n\t * This aliases the move method for easier usage\n\t *\n\t * @param basename The new name of the node\n\t */\n\trename(basename: string) {\n\t\tif (basename.includes('/')) {\n\t\t\tthrow new Error('Invalid basename')\n\t\t}\n\t\tthis.move(dirname(this.source) + '/' + basename)\n\t}\n\n\t/**\n\t * Update the mtime if exists\n\t */\n\tupdateMtime() {\n\t\tif (this._data.mtime) {\n\t\t\tthis._data.mtime = new Date()\n\t\t}\n\t}\n\n\t/**\n\t * Update the attributes of the node\n\t * Warning, updating attributes will NOT automatically update the mtime.\n\t *\n\t * @param attributes The new attributes to update on the Node attributes\n\t */\n\tupdate(attributes: Attribute) {\n\t\tfor (const [name, value] of Object.entries(attributes)) {\n\t\t\ttry {\n\t\t\t\tif (value === undefined) {\n\t\t\t\t\tdelete this.attributes[name]\n\t\t\t\t} else {\n\t\t\t\t\tthis.attributes[name] = value\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t// Ignore readonly attributes\n\t\t\t\tif (e instanceof TypeError) {\n\t\t\t\t\tcontinue\n\t\t\t\t}\n\t\t\t\t// Throw all other exceptions\n\t\t\t\tthrow e\n\t\t\t}\n\t\t}\n\t}\n\n}\n\n/**\n * Interface of the node class\n */\nexport type INode = Pick<Node, keyof Node>\n","/**\n * SPDX-FileCopyrightText: 2022 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\nimport { FileType } from './fileType'\nimport { type INode, Node } from './node'\n\nexport class File extends Node {\n\n\tget type(): FileType {\n\t\treturn FileType.File\n\t}\n\n}\n\n/**\n * Interface of the File class\n */\nexport interface IFile extends INode {\n\treadonly type: FileType.File\n}\n","/**\n * SPDX-FileCopyrightText: 2022 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\nimport { FileType } from './fileType'\nimport { type INode, Node } from './node'\nimport { type NodeData } from './nodeData'\n\nexport class Folder extends Node {\n\n\tconstructor(data: NodeData) {\n\t\t// enforcing mimes\n\t\tsuper({\n\t\t\t...data,\n\t\t\tmime: 'httpd/unix-directory',\n\t\t})\n\t}\n\n\tget type(): FileType {\n\t\treturn FileType.Folder\n\t}\n\n\tget extension(): string|null {\n\t\treturn null\n\t}\n\n\tget mime(): string {\n\t\treturn 'httpd/unix-directory'\n\t}\n\n}\n\n/**\n * Interface of the folder class\n */\nexport interface IFolder extends INode {\n\treadonly type: FileType.Folder\n\treadonly extension: null\n\treadonly mime: 'httpd/unix-directory'\n}\n","/**\n * SPDX-FileCopyrightText: 2023 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\nimport type { DAVResultResponseProps, FileStat, ResponseDataDetailed, WebDAVClient } from 'webdav'\nimport type { Node } from '../files/node'\n\nimport { File } from '../files/file'\nimport { Folder } from '../files/folder'\nimport { NodeStatus } from '../files/node'\nimport { NodeData } from '../files/nodeData'\nimport { davParsePermissions } from './davPermissions'\nimport { davGetFavoritesReport } from './davProperties'\n\nimport { getCurrentUser, getRequestToken, onRequestTokenUpdate } from '@nextcloud/auth'\nimport { generateRemoteUrl } from '@nextcloud/router'\nimport { CancelablePromise } from 'cancelable-promise'\nimport { createClient, getPatcher } from 'webdav'\nimport { getSharingToken, isPublicShare } from '@nextcloud/sharing/public'\n\n/**\n * Nextcloud DAV result response\n */\ninterface ResponseProps extends DAVResultResponseProps {\n\tpermissions: string\n\tmime: string\n\tfileid: number\n\tsize: number\n\t'owner-id': string | number\n}\n\n/**\n * Get the DAV root path for the current user or public share\n */\nexport function davGetRootPath(): string {\n\tif (isPublicShare()) {\n\t\treturn `/files/${getSharingToken()}`\n\t}\n\treturn `/files/${getCurrentUser()?.uid}`\n}\n\n/**\n * The DAV root path for the current user\n * This is a cached version of `davGetRemoteURL`\n */\nexport const davRootPath = davGetRootPath()\n\n/**\n * Get the DAV remote URL used as base URL for the WebDAV client\n * It also handles public shares\n */\nexport function davGetRemoteURL(): string {\n\tconst url = generateRemoteUrl('dav')\n\tif (isPublicShare()) {\n\t\treturn url.replace('remote.php', 'public.php')\n\t}\n\treturn url\n}\n\n/**\n * The DAV remote URL used as base URL for the WebDAV client\n * This is a cached version of `davGetRemoteURL`\n */\nexport const davRemoteURL = davGetRemoteURL()\n\n/**\n * Get a WebDAV client configured to include the Nextcloud request token\n *\n * @param remoteURL The DAV server remote URL\n * @param headers Optional additional headers to set for every request\n */\nexport const davGetClient = function(remoteURL = davRemoteURL, headers: Record<string, string> = {}) {\n\tconst client = createClient(remoteURL, { headers })\n\n\t/**\n\t * Set headers for DAV requests\n\t * @param token CSRF token\n\t */\n\tfunction setHeaders(token: string | null) {\n\t\tclient.setHeaders({\n\t\t\t...headers,\n\t\t\t// Add this so the server knows it is an request from the browser\n\t\t\t'X-Requested-With': 'XMLHttpRequest',\n\t\t\t// Inject user auth\n\t\t\trequesttoken: token ?? '',\n\t\t})\n\t}\n\n\t// refresh headers when request token changes\n\tonRequestTokenUpdate(setHeaders)\n\tsetHeaders(getRequestToken())\n\n\t/**\n\t * Allow to override the METHOD to support dav REPORT\n\t *\n\t * @see https://github.com/perry-mitchell/webdav-client/blob/8d9694613c978ce7404e26a401c39a41f125f87f/source/request.ts\n\t */\n\tconst patcher = getPatcher()\n\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t// @ts-ignore\n\t// https://github.com/perry-mitchell/hot-patcher/issues/6\n\tpatcher.patch('fetch', (url: string, options: RequestInit): Promise<Response> => {\n\t\tconst headers = options.headers as Record<string, string>\n\t\tif (headers?.method) {\n\t\t\toptions.method = headers.method\n\t\t\tdelete headers.method\n\t\t}\n\t\treturn fetch(url, options)\n\t})\n\n\treturn client\n}\n\n/**\n * Use WebDAV to query for favorite Nodes\n *\n * @param davClient The WebDAV client to use for performing the request\n * @param path Base path for the favorites, if unset all favorites are queried\n * @param davRoot The root path for the DAV user (defaults to `davRootPath`)\n * @example\n * ```js\n * import { davGetClient, davRootPath, getFavoriteNodes } from '@nextcloud/files'\n *\n * const client = davGetClient()\n * // query favorites for the root\n * const favorites = await getFavoriteNodes(client)\n * // which is the same as writing:\n * const favorites = await getFavoriteNodes(client, '/', davRootPath)\n * ```\n */\nexport const getFavoriteNodes = (davClient: WebDAVClient, path = '/', davRoot = davRootPath): CancelablePromise<Node[]> => {\n\tconst controller = new AbortController()\n\treturn new CancelablePromise(async (resolve, reject, onCancel) => {\n\t\tonCancel(() => controller.abort())\n\t\ttry {\n\t\t\tconst contentsResponse = await davClient.getDirectoryContents(`${davRoot}${path}`, {\n\t\t\t\tsignal: controller.signal,\n\t\t\t\tdetails: true,\n\t\t\t\tdata: davGetFavoritesReport(),\n\t\t\t\theaders: {\n\t\t\t\t\t// see davGetClient for patched webdav client\n\t\t\t\t\tmethod: 'REPORT',\n\t\t\t\t},\n\t\t\t\tincludeSelf: true,\n\t\t\t}) as ResponseDataDetailed<FileStat[]>\n\n\t\t\tconst nodes = contentsResponse.data\n\t\t\t\t.filter(node => node.filename !== path) // exclude current dir\n\t\t\t\t.map((result) => davResultToNode(result, davRoot))\n\t\t\tresolve(nodes)\n\t\t} catch (error) {\n\t\t\treject(error)\n\t\t}\n\t})\n}\n\n/**\n * Covert DAV result `FileStat` to `Node`\n *\n * @param node The DAV result\n * @param filesRoot The DAV files root path\n * @param remoteURL The DAV server remote URL (same as on `davGetClient`)\n */\nexport const davResultToNode = function(node: FileStat, filesRoot = davRootPath, remoteURL = davRemoteURL): Node {\n\tlet userId = getCurrentUser()?.uid\n\tif (isPublicShare()) {\n\t\tuserId = userId ?? 'anonymous'\n\t} else if (!userId) {\n\t\tthrow new Error('No user id found')\n\t}\n\n\tconst props = node.props as ResponseProps\n\tconst permissions = davParsePermissions(props?.permissions)\n\tconst owner = String(props?.['owner-id'] || userId)\n\tconst id = props.fileid || 0\n\n\tconst nodeData: NodeData = {\n\t\tid,\n\t\tsource: `${remoteURL}${node.filename}`,\n\t\tmtime: new Date(Date.parse(node.lastmod)),\n\t\tmime: node.mime || 'application/octet-stream',\n\t\t// Manually cast to work around for https://github.com/perry-mitchell/webdav-client/pull/380\n\t\tdisplayname: props.displayname !== undefined ? String(props.displayname) : undefined,\n\t\tsize: props?.size || Number.parseInt(props.getcontentlength || '0'),\n\t\t// The fileid is set to -1 for failed requests\n\t\tstatus: id < 0 ? NodeStatus.FAILED : undefined,\n\t\tpermissions,\n\t\towner,\n\t\troot: filesRoot,\n\t\tattributes: {\n\t\t\t...node,\n\t\t\t...props,\n\t\t\thasPreview: props?.['has-preview'],\n\t\t},\n\t}\n\n\tdelete nodeData.attributes?.props\n\n\treturn node.type === 'file' ? new File(nodeData) : new Folder(nodeData)\n}\n","/**\n * SPDX-FileCopyrightText: Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later or LGPL-3.0-or-later\n */\n\nimport { getCapabilities } from '@nextcloud/capabilities'\n\ninterface NextcloudCapabilities extends Record<string, unknown> {\n\tfiles: {\n\t\t'bigfilechunking': boolean\n\t\t// those are new in Nextcloud 30\n\t\t'forbidden_filenames'?: string[]\n\t\t'forbidden_filename_basenames'?: string[]\n\t\t'forbidden_filename_characters'?: string[]\n\t\t'forbidden_filename_extensions'?: string[]\n\t}\n}\n\nexport enum InvalidFilenameErrorReason {\n\tReservedName = 'reserved name',\n\tCharacter = 'character',\n\tExtension = 'extension',\n}\n\ninterface InvalidFilenameErrorOptions {\n\t/**\n\t * The filename that was validated\n\t */\n\tfilename: string\n\n\t/**\n\t * Reason why the validation failed\n\t */\n\treason: InvalidFilenameErrorReason\n\n\t/**\n\t * Part of the filename that caused this error\n\t */\n\tsegment: string\n}\n\nexport class InvalidFilenameError extends Error {\n\n\tpublic constructor(options: InvalidFilenameErrorOptions) {\n\t\tsuper(`Invalid ${options.reason} '${options.segment}' in filename '${options.filename}'`, { cause: options })\n\t}\n\n\t/**\n\t * The filename that was validated\n\t */\n\tpublic get filename() {\n\t\treturn (this.cause as InvalidFilenameErrorOptions).filename\n\t}\n\n\t/**\n\t * Reason why the validation failed\n\t */\n\tpublic get reason() {\n\t\treturn (this.cause as InvalidFilenameErrorOptions).reason\n\t}\n\n\t/**\n\t * Part of the filename that caused this error\n\t */\n\tpublic get segment() {\n\t\treturn (this.cause as InvalidFilenameErrorOptions).segment\n\t}\n\n}\n\n/**\n * Validate a given filename\n * @param filename The filename to check\n * @throws {InvalidFilenameError}\n */\nexport function validateFilename(filename: string): void {\n\tconst capabilities = (getCapabilities() as NextcloudCapabilities).files\n\n\t// Handle forbidden characters\n\t// This needs to be done first as the other checks are case insensitive!\n\tconst forbiddenCharacters = capabilities.forbidden_filename_characters ?? window._oc_config?.forbidden_filenames_characters ?? ['/', '\\\\']\n\tfor (const character of forbiddenCharacters) {\n\t\tif (filename.includes(character)) {\n\t\t\tthrow new InvalidFilenameError({ segment: character, reason: InvalidFilenameErrorReason.Character, filename })\n\t\t}\n\t}\n\n\t// everything else is case insensitive (the capabilities are returned lowercase)\n\tfilename = filename.toLocaleLowerCase()\n\n\t// Handle forbidden filenames, on older Nextcloud versions without this capability it was hardcoded in the backend to '.htaccess'\n\tconst forbiddenFilenames = capabilities.forbidden_filenames ?? ['.htaccess']\n\tif (forbiddenFilenames.includes(filename)) {\n\t\tthrow new InvalidFilenameError({ filename, segment: filename, reason: InvalidFilenameErrorReason.ReservedName })\n\t}\n\n\t// Handle forbidden basenames\n\tconst endOfBasename = filename.indexOf('.', 1)\n\tconst basename = filename.substring(0, endOfBasename === -1 ? undefined : endOfBasename)\n\tconst forbiddenFilenameBasenames = capabilities.forbidden_filename_basenames ?? []\n\tif (forbiddenFilenameBasenames.includes(basename)) {\n\t\tthrow new InvalidFilenameError({ filename, segment: basename, reason: InvalidFilenameErrorReason.ReservedName })\n\t}\n\n\t// The legacy 'blacklist_files_regex' was hardcoded to the extension '.part' and '.filepart'\n\t// So if the new (Nextcloud 30) capability is not awailable then we fallback to that\n\tconst forbiddenFilenameExtensions = capabilities.forbidden_filename_extensions ?? ['.part', '.filepart']\n\tfor (const extension of forbiddenFilenameExtensions) {\n\t\tif (filename.length > extension.length && filename.endsWith(extension)) {\n\t\t\tthrow new InvalidFilenameError({ segment: extension, reason: InvalidFilenameErrorReason.Extension, filename })\n\t\t}\n\t}\n}\n\n/**\n * Check the validity of a filename\n * This is a convinient wrapper for `checkFilenameValidity` to only return a boolean for the valid\n * @param filename Filename to check validity\n */\nexport function isFilenameValid(filename: string): boolean {\n\ttry {\n\t\tvalidateFilename(filename)\n\t\treturn true\n\t} catch (error) {\n\t\tif (error instanceof InvalidFilenameError) {\n\t\t\treturn false\n\t\t}\n\t\tthrow error\n\t}\n}\n","/**\n * SPDX-FileCopyrightText: Ferdinand Thiessen <opensource@fthiessen.de>\n * SPDX-License-Identifier: AGPL-3.0-or-later or LGPL-3.0-or-later\n */\n\nimport { basename, extname } from 'path'\n\ninterface UniqueNameOptions {\n\t/**\n\t * A function that takes an index and returns a suffix to add to the file name, defaults to '(index)'\n\t * @param index The current index to add\n\t */\n\tsuffix?: (index: number) => string\n\t/**\n\t * Set to true to ignore the file extension when adding the suffix (when getting a unique directory name)\n\t */\n\tignoreFileExtension?: boolean\n}\n\n/**\n * Create an unique file name\n * @param name The initial name to use\n * @param otherNames Other names that are already used\n * @param options Optional parameters for tuning the behavior\n * @return {string} Either the initial name, if unique, or the name with the suffix so that the name is unique\n */\nexport function getUniqueName(\n\tname: string,\n\totherNames: string[],\n\toptions?: UniqueNameOptions,\n): string {\n\tconst opts = {\n\t\tsuffix: (n: number) => `(${n})`,\n\t\tignoreFileExtension: false,\n\t\t...options,\n\t}\n\n\tlet newName = name\n\tlet i = 1\n\twhile (otherNames.includes(newName)) {\n\t\tconst ext = opts.ignoreFileExtension ? '' : extname(name)\n\t\tconst base = basename(name, ext)\n\t\tnewName = `${base} ${opts.suffix(i++)}${ext}`\n\t}\n\treturn newName\n}\n","/**\n * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\nimport { getCanonicalLocale } from '@nextcloud/l10n'\n\nconst humanList = ['B', 'KB', 'MB', 'GB', 'TB', 'PB']\nconst humanListBinary = ['B', 'KiB', 'MiB', 'GiB', 'TiB', 'PiB']\n\n/**\n * Format a file size in a human-like format. e.g. 42GB\n *\n * The default for Nextcloud is like Windows using binary sizes but showing decimal units,\n * meaning 1024 bytes will show as 1KB instead of 1KiB or like on Apple 1.02 KB\n *\n * @param size in bytes\n * @param skipSmallSizes avoid rendering tiny sizes and return '< 1 KB' instead\n * @param binaryPrefixes True if size binary prefixes like `KiB` should be used as per IEC 80000-13\n * @param base1000 Set to true to use base 1000 as per SI or used by Apple (default is base 1024 like Linux or Windows)\n */\nexport function formatFileSize(size: number|string, skipSmallSizes = false, binaryPrefixes = false, base1000 = false): string {\n\t// Binary prefixes only work with base 1024\n\tbinaryPrefixes = binaryPrefixes && !base1000\n\n\tif (typeof size === 'string') {\n\t\tsize = Number(size)\n\t}\n\n\t// Calculate Log with base 1024 or 1000: size = base ** order\n\tlet order = size > 0 ? Math.floor(Math.log(size) / Math.log(base1000 ? 1000 : 1024)) : 0\n\n\t// Stay in range of the byte sizes that are defined\n\torder = Math.min((binaryPrefixes ? humanListBinary.length : humanList.length) - 1, order)\n\n\tconst readableFormat = binaryPrefixes ? humanListBinary[order] : humanList[order]\n\tlet relativeSize = (size / Math.pow(base1000 ? 1000 : 1024, order)).toFixed(1)\n\n\tif (skipSmallSizes === true && order === 0) {\n\t\treturn (relativeSize !== '0.0' ? '< 1 ' : '0 ') + (binaryPrefixes ? humanListBinary[1] : humanList[1])\n\t}\n\n\tif (order < 2) {\n\t\trelativeSize = parseFloat(relativeSize).toFixed(0)\n\t} else {\n\t\trelativeSize = parseFloat(relativeSize).toLocaleString(getCanonicalLocale())\n\t}\n\n\treturn relativeSize + ' ' + readableFormat\n}\n\n/**\n * Returns a file size in bytes from a humanly readable string\n * Note: `b` and `B` are both parsed as bytes and not as bit or byte.\n *\n * @param  {string} value file size in human-readable format\n * @param  {boolean} forceBinary for backwards compatibility this allows values to be base 2 (so 2KB means 2048 bytes instead of 2000 bytes)\n * @return {number} or null if string could not be parsed\n */\nexport function parseFileSize(value: string, forceBinary = false) {\n\ttry {\n\t\tvalue = `${value}`.toLocaleLowerCase().replaceAll(/\\s+/g, '').replaceAll(',', '.')\n\t} catch (e) {\n\t\treturn null\n\t}\n\n\tconst match = value.match(/^([0-9]*(\\.[0-9]*)?)([kmgtp]?)(i?)b?$/)\n\t// ignore not found, missing pre- and decimal, empty number\n\tif (match === null || match[1] === '.' || match[1] === '') {\n\t\treturn null\n\t}\n\n\tconst bytesArray = {\n\t\t'': 0,\n\t\tk: 1,\n\t\tm: 2,\n\t\tg: 3,\n\t\tt: 4,\n\t\tp: 5,\n\t\te: 6,\n\t}\n\n\tconst decimalString = `${match[1]}`\n\tconst base = (match[4] === 'i' || forceBinary) ? 1024 : 1000\n\n\treturn Math.round(Number.parseFloat(decimalString) * (base ** bytesArray[match[3]]))\n}\n","/**\n * SPDX-FileCopyrightText: 2024 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\nimport { getCanonicalLocale, getLanguage } from '@nextcloud/l10n'\n\ntype IdentifierFn<T> = (v: T) => unknown\nexport type SortingOrder = 'asc'|'desc'\n\n/**\n * Helper to create string representation\n * @param value Value to stringify\n */\nfunction stringify(value: unknown) {\n\t// The default representation of Date is not sortable because of the weekday names in front of it\n\tif (value instanceof Date) {\n\t\treturn value.toISOString()\n\t}\n\treturn String(value)\n}\n\n/**\n * Natural order a collection\n * You can define identifiers as callback functions, that get the element and return the value to sort.\n *\n * @param collection The collection to order\n * @param identifiers An array of identifiers to use, by default the identity of the element is used\n * @param orders Array of orders, by default all identifiers are sorted ascening\n */\nexport function orderBy<T>(collection: readonly T[], identifiers?: IdentifierFn<T>[], orders?: SortingOrder[]): T[] {\n\t// If not identifiers are set we use the identity of the value\n\tidentifiers = identifiers ?? [(value) => value]\n\t// By default sort the collection ascending\n\torders = orders ?? []\n\tconst sorting = identifiers.map((_, index) => (orders[index] ?? 'asc') === 'asc' ? 1 : -1)\n\n\tconst collator = Intl.Collator(\n\t\t[getLanguage(), getCanonicalLocale()],\n\t\t{\n\t\t\t// handle 10 as ten and not as one-zero\n\t\t\tnumeric: true,\n\t\t\tusage: 'sort',\n\t\t},\n\t)\n\n\treturn [...collection].sort((a, b) => {\n\t\tfor (const [index, identifier] of identifiers.entries()) {\n\t\t\t// Get the local compare of stringified value a and b\n\t\t\tconst value = collator.compare(stringify(identifier(a)), stringify(identifier(b)))\n\t\t\t// If they do not match return the order\n\t\t\tif (value !== 0) {\n\t\t\t\treturn value * sorting[index]\n\t\t\t}\n\t\t\t// If they match we need to continue with the next identifier\n\t\t}\n\t\t// If all are equal we need to return equality\n\t\treturn 0\n\t})\n}\n","/**\n * SPDX-FileCopyrightText: 2024 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\nimport type { INode } from '../files/node'\nimport type { SortingOrder } from './sorting'\nimport { orderBy } from './sorting'\n\nexport enum FilesSortingMode {\n\tName = 'basename',\n\tModified = 'mtime',\n\tSize = 'size',\n}\n\nexport interface FilesSortingOptions {\n\t/**\n\t * They key to order the files by\n\t * @default FilesSortingMode.Name\n\t */\n\tsortingMode?: FilesSortingMode\n\n\t/**\n\t * @default 'asc'\n\t */\n\tsortingOrder?: SortingOrder\n\n\t/**\n\t * If set to true nodes marked as favorites are ordered on top of all other nodes\n\t * @default false\n\t */\n\tsortFavoritesFirst?: boolean\n\n\t/**\n\t * If set to true folders are ordered on top of files\n\t * @default false\n\t */\n\tsortFoldersFirst?: boolean\n}\n\n/**\n * Sort files and folders according to the sorting options\n * @param nodes Nodes to sort\n * @param options Sorting options\n */\nexport function sortNodes(nodes: readonly INode[], options: FilesSortingOptions = {}): INode[] {\n\tconst sortingOptions = {\n\t\t// Default to sort by name\n\t\tsortingMode: FilesSortingMode.Name,\n\t\t// Default to sort ascending\n\t\tsortingOrder: 'asc' as const,\n\t\t...options,\n\t}\n\n\t/**\n\t * Get the basename without any extension\n\t * @param name The filename to extract the basename from\n\t */\n\tconst basename = (name: string) => name.lastIndexOf('.') > 0 ? name.slice(0, name.lastIndexOf('.')) : name\n\n\tconst identifiers = [\n\t\t// 1: Sort favorites first if enabled\n\t\t...(sortingOptions.sortFavoritesFirst ? [(v: INode) => v.attributes?.favorite !== 1] : []),\n\t\t// 2: Sort folders first if sorting by name\n\t\t...(sortingOptions.sortFoldersFirst ? [(v: INode) => v.type !== 'folder'] : []),\n\t\t// 3: Use sorting mode if NOT basename (to be able to use display name too)\n\t\t...(sortingOptions.sortingMode !== FilesSortingMode.Name ? [(v: INode) => v[sortingOptions.sortingMode]] : []),\n\t\t// 4: Use display name if available, fallback to name\n\t\t(v: INode) => basename(v.attributes?.displayname || v.basename),\n\t\t// 5: Finally, use basename if all previous sorting methods failed\n\t\t(v: INode) => v.basename,\n\t]\n\tconst orders = [\n\t\t// (for 1): always sort favorites before normal files\n\t\t...(sortingOptions.sortFavoritesFirst ? ['asc'] : []),\n\t\t// (for 2): always sort folders before files\n\t\t...(sortingOptions.sortFoldersFirst ? ['asc'] : []),\n\t\t// (for 3): Reverse if sorting by mtime as mtime higher means edited more recent -> lower\n\t\t...(sortingOptions.sortingMode === FilesSortingMode.Modified ? [sortingOptions.sortingOrder === 'asc' ? 'desc' : 'asc'] : []),\n\t\t// (also for 3 so make sure not to conflict with 2 and 3)\n\t\t...(sortingOptions.sortingMode !== FilesSortingMode.Modified && sortingOptions.sortingMode !== FilesSortingMode.Name ? [sortingOptions.sortingOrder] : []),\n\t\t// for 4: use configured sorting direction\n\t\tsortingOptions.sortingOrder,\n\t\t// for 5: use configured sorting direction\n\t\tsortingOptions.sortingOrder,\n\t] as ('asc'|'desc')[]\n\n\treturn orderBy(nodes, identifiers, orders)\n}\n","/**\n * SPDX-FileCopyrightText: 2022 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\nimport type { View } from './view'\nimport { TypedEventTarget } from 'typescript-event-target'\nimport logger from '../utils/logger'\n\n/**\n * The event is emitted when the navigation view was updated.\n * It contains the new active view in the `detail` attribute.\n */\ninterface UpdateActiveViewEvent extends CustomEvent<View | null> {\n\ttype: 'updateActive'\n}\n\n/**\n * This event is emitted when the list of registered views is changed\n */\ninterface UpdateViewsEvent extends CustomEvent<never> {\n\ttype: 'update'\n}\n\n/**\n * The files navigation manages the available and active views\n *\n * Custom views for the files app can be registered (examples are the favorites views or the shared-with-you view).\n * It is also possible to listen on changes of the registered views or when the current active view is changed.\n * @example\n * ```js\n * const navigation = getNavigation()\n * navigation.addEventListener('update', () => {\n *     // This will be called whenever a new view is registered or a view is removed\n *     const viewNames = navigation.views.map((view) => view.name)\n *     console.warn('Registered views changed', viewNames)\n * })\n * // Or you can react to changes of the current active view\n * navigation.addEventListener('updateActive', (event) => {\n *     // This will be called whenever the active view changed\n *     const newView = event.detail // you could also use `navigation.active`\n *     console.warn('Active view changed to ' + newView.name)\n * })\n * ```\n */\nexport class Navigation extends TypedEventTarget<{ updateActive: UpdateActiveViewEvent, update: UpdateViewsEvent }> {\n\n\tprivate _views: View[] = []\n\tprivate _currentView: View | null = null\n\n\t/**\n\t * Register a new view on the navigation\n\t * @param view The view to register\n\t * @throws `Error` is thrown if a view with the same id is already registered\n\t */\n\tregister(view: View): void {\n\t\tif (this._views.find(search => search.id === view.id)) {\n\t\t\tthrow new Error(`View id ${view.id} is already registered`)\n\t\t}\n\n\t\tthis._views.push(view)\n\t\tthis.dispatchTypedEvent('update', new CustomEvent<never>('update') as UpdateViewsEvent)\n\t}\n\n\t/**\n\t * Remove a registered view\n\t * @param id The id of the view to remove\n\t */\n\tremove(id: string): void {\n\t\tconst index = this._views.findIndex(view => view.id === id)\n\t\tif (index !== -1) {\n\t\t\tthis._views.splice(index, 1)\n\t\t\tthis.dispatchTypedEvent('update', new CustomEvent('update') as UpdateViewsEvent)\n\t\t}\n\t}\n\n\t/**\n\t * Set the currently active view\n\t * @fires UpdateActiveViewEvent\n\t * @param view New active view\n\t */\n\tsetActive(view: View | null): void {\n\t\tthis._currentView = view\n\t\tconst event = new CustomEvent<View | null>('updateActive', { detail: view })\n\t\tthis.dispatchTypedEvent('updateActive', event as UpdateActiveViewEvent)\n\t}\n\n\t/**\n\t * The currently active files view\n\t */\n\tget active(): View | null {\n\t\treturn this._currentView\n\t}\n\n\t/**\n\t * All registered views\n\t */\n\tget views(): View[] {\n\t\treturn this._views\n\t}\n\n}\n\n/**\n * Get the current files navigation\n */\nexport const getNavigation = function(): Navigation {\n\tif (typeof window._nc_navigation === 'undefined') {\n\t\twindow._nc_navigation = new Navigation()\n\t\tlogger.debug('Navigation service initialized')\n\t}\n\n\treturn window._nc_navigation\n}\n","/**\n * SPDX-FileCopyrightText: 2022 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\nimport type { Node } from '../files/node'\nimport type { View } from './view'\n\ninterface ColumnData {\n\t/** Unique column ID */\n\tid: string\n\t/** Translated column title */\n\ttitle: string\n\t/** The content of the cell. The element will be appended within */\n\trender: (node: Node, view: View) => HTMLElement\n\t/** Function used to sort Nodes between them */\n\tsort?: (nodeA: Node, nodeB: Node) => number\n\t/**\n\t * Custom summary of the column to display at the end of the list.\n\t * Will not be displayed if  nothing is provided\n\t */\n\tsummary?: (node: Node[], view: View) => string\n}\n\nexport class Column implements ColumnData {\n\n\tprivate _column: ColumnData\n\n\tconstructor(column: ColumnData) {\n\t\tisValidColumn(column)\n\t\tthis._column = column\n\t}\n\n\tget id() {\n\t\treturn this._column.id\n\t}\n\n\tget title() {\n\t\treturn this._column.title\n\t}\n\n\tget render() {\n\t\treturn this._column.render\n\t}\n\n\tget sort() {\n\t\treturn this._column.sort\n\t}\n\n\tget summary() {\n\t\treturn this._column.summary\n\t}\n\n}\n\n/**\n * Typescript cannot validate an interface.\n * Please keep in sync with the Column interface requirements.\n *\n * @param {ColumnData} column the column to check\n * @return {boolean} true if the column is valid\n */\nconst isValidColumn = function(column: ColumnData): boolean {\n\tif (!column.id || typeof column.id !== 'string') {\n\t\tthrow new Error('A column id is required')\n\t}\n\n\tif (!column.title || typeof column.title !== 'string') {\n\t\tthrow new Error('A column title is required')\n\t}\n\n\tif (!column.render || typeof column.render !== 'function') {\n\t\tthrow new Error('A render function is required')\n\t}\n\n\t// Optional properties\n\tif (column.sort && typeof column.sort !== 'function') {\n\t\tthrow new Error('Column sortFunction must be a function')\n\t}\n\n\tif (column.summary && typeof column.summary !== 'function') {\n\t\tthrow new Error('Column summary must be a function')\n\t}\n\n\treturn true\n}\n","'use strict';\n\nconst nameStartChar = ':A-Za-z_\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD';\nconst nameChar = nameStartChar + '\\\\-.\\\\d\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040';\nconst nameRegexp = '[' + nameStartChar + '][' + nameChar + ']*'\nconst regexName = new RegExp('^' + nameRegexp + '$');\n\nconst getAllMatches = function(string, regex) {\n  const matches = [];\n  let match = regex.exec(string);\n  while (match) {\n    const allmatches = [];\n    allmatches.startIndex = regex.lastIndex - match[0].length;\n    const len = match.length;\n    for (let index = 0; index < len; index++) {\n      allmatches.push(match[index]);\n    }\n    matches.push(allmatches);\n    match = regex.exec(string);\n  }\n  return matches;\n};\n\nconst isName = function(string) {\n  const match = regexName.exec(string);\n  return !(match === null || typeof match === 'undefined');\n};\n\nexports.isExist = function(v) {\n  return typeof v !== 'undefined';\n};\n\nexports.isEmptyObject = function(obj) {\n  return Object.keys(obj).length === 0;\n};\n\n/**\n * Copy all the properties of a into b.\n * @param {*} target\n * @param {*} a\n */\nexports.merge = function(target, a, arrayMode) {\n  if (a) {\n    const keys = Object.keys(a); // will return an array of own properties\n    const len = keys.length; //don't make it inline\n    for (let i = 0; i < len; i++) {\n      if (arrayMode === 'strict') {\n        target[keys[i]] = [ a[keys[i]] ];\n      } else {\n        target[keys[i]] = a[keys[i]];\n      }\n    }\n  }\n};\n/* exports.merge =function (b,a){\n  return Object.assign(b,a);\n} */\n\nexports.getValue = function(v) {\n  if (exports.isExist(v)) {\n    return v;\n  } else {\n    return '';\n  }\n};\n\n// const fakeCall = function(a) {return a;};\n// const fakeCallNoReturn = function() {};\n\nexports.isName = isName;\nexports.getAllMatches = getAllMatches;\nexports.nameRegexp = nameRegexp;\n","'use strict';\n\nconst util = require('./util');\n\nconst defaultOptions = {\n  allowBooleanAttributes: false, //A tag can have attributes without any value\n  unpairedTags: []\n};\n\n//const tagsPattern = new RegExp(\"<\\\\/?([\\\\w:\\\\-_\\.]+)\\\\s*\\/?>\",\"g\");\nexports.validate = function (xmlData, options) {\n  options = Object.assign({}, defaultOptions, options);\n\n  //xmlData = xmlData.replace(/(\\r\\n|\\n|\\r)/gm,\"\");//make it single line\n  //xmlData = xmlData.replace(/(^\\s*<\\?xml.*?\\?>)/g,\"\");//Remove XML starting tag\n  //xmlData = xmlData.replace(/(<!DOCTYPE[\\s\\w\\\"\\.\\/\\-\\:]+(\\[.*\\])*\\s*>)/g,\"\");//Remove DOCTYPE\n  const tags = [];\n  let tagFound = false;\n\n  //indicates that the root tag has been closed (aka. depth 0 has been reached)\n  let reachedRoot = false;\n\n  if (xmlData[0] === '\\ufeff') {\n    // check for byte order mark (BOM)\n    xmlData = xmlData.substr(1);\n  }\n  \n  for (let i = 0; i < xmlData.length; i++) {\n\n    if (xmlData[i] === '<' && xmlData[i+1] === '?') {\n      i+=2;\n      i = readPI(xmlData,i);\n      if (i.err) return i;\n    }else if (xmlData[i] === '<') {\n      //starting of tag\n      //read until you reach to '>' avoiding any '>' in attribute value\n      let tagStartPos = i;\n      i++;\n      \n      if (xmlData[i] === '!') {\n        i = readCommentAndCDATA(xmlData, i);\n        continue;\n      } else {\n        let closingTag = false;\n        if (xmlData[i] === '/') {\n          //closing tag\n          closingTag = true;\n          i++;\n        }\n        //read tagname\n        let tagName = '';\n        for (; i < xmlData.length &&\n          xmlData[i] !== '>' &&\n          xmlData[i] !== ' ' &&\n          xmlData[i] !== '\\t' &&\n          xmlData[i] !== '\\n' &&\n          xmlData[i] !== '\\r'; i++\n        ) {\n          tagName += xmlData[i];\n        }\n        tagName = tagName.trim();\n        //console.log(tagName);\n\n        if (tagName[tagName.length - 1] === '/') {\n          //self closing tag without attributes\n          tagName = tagName.substring(0, tagName.length - 1);\n          //continue;\n          i--;\n        }\n        if (!validateTagName(tagName)) {\n          let msg;\n          if (tagName.trim().length === 0) {\n            msg = \"Invalid space after '<'.\";\n          } else {\n            msg = \"Tag '\"+tagName+\"' is an invalid name.\";\n          }\n          return getErrorObject('InvalidTag', msg, getLineNumberForPosition(xmlData, i));\n        }\n\n        const result = readAttributeStr(xmlData, i);\n        if (result === false) {\n          return getErrorObject('InvalidAttr', \"Attributes for '\"+tagName+\"' have open quote.\", getLineNumberForPosition(xmlData, i));\n        }\n        let attrStr = result.value;\n        i = result.index;\n\n        if (attrStr[attrStr.length - 1] === '/') {\n          //self closing tag\n          const attrStrStart = i - attrStr.length;\n          attrStr = attrStr.substring(0, attrStr.length - 1);\n          const isValid = validateAttributeString(attrStr, options);\n          if (isValid === true) {\n            tagFound = true;\n            //continue; //text may presents after self closing tag\n          } else {\n            //the result from the nested function returns the position of the error within the attribute\n            //in order to get the 'true' error line, we need to calculate the position where the attribute begins (i - attrStr.length) and then add the position within the attribute\n            //this gives us the absolute index in the entire xml, which we can use to find the line at last\n            return getErrorObject(isValid.err.code, isValid.err.msg, getLineNumberForPosition(xmlData, attrStrStart + isValid.err.line));\n          }\n        } else if (closingTag) {\n          if (!result.tagClosed) {\n            return getErrorObject('InvalidTag', \"Closing tag '\"+tagName+\"' doesn't have proper closing.\", getLineNumberForPosition(xmlData, i));\n          } else if (attrStr.trim().length > 0) {\n            return getErrorObject('InvalidTag', \"Closing tag '\"+tagName+\"' can't have attributes or invalid starting.\", getLineNumberForPosition(xmlData, tagStartPos));\n          } else if (tags.length === 0) {\n            return getErrorObject('InvalidTag', \"Closing tag '\"+tagName+\"' has not been opened.\", getLineNumberForPosition(xmlData, tagStartPos));\n          } else {\n            const otg = tags.pop();\n            if (tagName !== otg.tagName) {\n              let openPos = getLineNumberForPosition(xmlData, otg.tagStartPos);\n              return getErrorObject('InvalidTag',\n                \"Expected closing tag '\"+otg.tagName+\"' (opened in line \"+openPos.line+\", col \"+openPos.col+\") instead of closing tag '\"+tagName+\"'.\",\n                getLineNumberForPosition(xmlData, tagStartPos));\n            }\n\n            //when there are no more tags, we reached the root level.\n            if (tags.length == 0) {\n              reachedRoot = true;\n            }\n          }\n        } else {\n          const isValid = validateAttributeString(attrStr, options);\n          if (isValid !== true) {\n            //the result from the nested function returns the position of the error within the attribute\n            //in order to get the 'true' error line, we need to calculate the position where the attribute begins (i - attrStr.length) and then add the position within the attribute\n            //this gives us the absolute index in the entire xml, which we can use to find the line at last\n            return getErrorObject(isValid.err.code, isValid.err.msg, getLineNumberForPosition(xmlData, i - attrStr.length + isValid.err.line));\n          }\n\n          //if the root level has been reached before ...\n          if (reachedRoot === true) {\n            return getErrorObject('InvalidXml', 'Multiple possible root nodes found.', getLineNumberForPosition(xmlData, i));\n          } else if(options.unpairedTags.indexOf(tagName) !== -1){\n            //don't push into stack\n          } else {\n            tags.push({tagName, tagStartPos});\n          }\n          tagFound = true;\n        }\n\n        //skip tag text value\n        //It may include comments and CDATA value\n        for (i++; i < xmlData.length; i++) {\n          if (xmlData[i] === '<') {\n            if (xmlData[i + 1] === '!') {\n              //comment or CADATA\n              i++;\n              i = readCommentAndCDATA(xmlData, i);\n              continue;\n            } else if (xmlData[i+1] === '?') {\n              i = readPI(xmlData, ++i);\n              if (i.err) return i;\n            } else{\n              break;\n            }\n          } else if (xmlData[i] === '&') {\n            const afterAmp = validateAmpersand(xmlData, i);\n            if (afterAmp == -1)\n              return getErrorObject('InvalidChar', \"char '&' is not expected.\", getLineNumberForPosition(xmlData, i));\n            i = afterAmp;\n          }else{\n            if (reachedRoot === true && !isWhiteSpace(xmlData[i])) {\n              return getErrorObject('InvalidXml', \"Extra text at the end\", getLineNumberForPosition(xmlData, i));\n            }\n          }\n        } //end of reading tag text value\n        if (xmlData[i] === '<') {\n          i--;\n        }\n      }\n    } else {\n      if ( isWhiteSpace(xmlData[i])) {\n        continue;\n      }\n      return getErrorObject('InvalidChar', \"char '\"+xmlData[i]+\"' is not expected.\", getLineNumberForPosition(xmlData, i));\n    }\n  }\n\n  if (!tagFound) {\n    return getErrorObject('InvalidXml', 'Start tag expected.', 1);\n  }else if (tags.length == 1) {\n      return getErrorObject('InvalidTag', \"Unclosed tag '\"+tags[0].tagName+\"'.\", getLineNumberForPosition(xmlData, tags[0].tagStartPos));\n  }else if (tags.length > 0) {\n      return getErrorObject('InvalidXml', \"Invalid '\"+\n          JSON.stringify(tags.map(t => t.tagName), null, 4).replace(/\\r?\\n/g, '')+\n          \"' found.\", {line: 1, col: 1});\n  }\n\n  return true;\n};\n\nfunction isWhiteSpace(char){\n  return char === ' ' || char === '\\t' || char === '\\n'  || char === '\\r';\n}\n/**\n * Read Processing insstructions and skip\n * @param {*} xmlData\n * @param {*} i\n */\nfunction readPI(xmlData, i) {\n  const start = i;\n  for (; i < xmlData.length; i++) {\n    if (xmlData[i] == '?' || xmlData[i] == ' ') {\n      //tagname\n      const tagname = xmlData.substr(start, i - start);\n      if (i > 5 && tagname === 'xml') {\n        return getErrorObject('InvalidXml', 'XML declaration allowed only at the start of the document.', getLineNumberForPosition(xmlData, i));\n      } else if (xmlData[i] == '?' && xmlData[i + 1] == '>') {\n        //check if valid attribut string\n        i++;\n        break;\n      } else {\n        continue;\n      }\n    }\n  }\n  return i;\n}\n\nfunction readCommentAndCDATA(xmlData, i) {\n  if (xmlData.length > i + 5 && xmlData[i + 1] === '-' && xmlData[i + 2] === '-') {\n    //comment\n    for (i += 3; i < xmlData.length; i++) {\n      if (xmlData[i] === '-' && xmlData[i + 1] === '-' && xmlData[i + 2] === '>') {\n        i += 2;\n        break;\n      }\n    }\n  } else if (\n    xmlData.length > i + 8 &&\n    xmlData[i + 1] === 'D' &&\n    xmlData[i + 2] === 'O' &&\n    xmlData[i + 3] === 'C' &&\n    xmlData[i + 4] === 'T' &&\n    xmlData[i + 5] === 'Y' &&\n    xmlData[i + 6] === 'P' &&\n    xmlData[i + 7] === 'E'\n  ) {\n    let angleBracketsCount = 1;\n    for (i += 8; i < xmlData.length; i++) {\n      if (xmlData[i] === '<') {\n        angleBracketsCount++;\n      } else if (xmlData[i] === '>') {\n        angleBracketsCount--;\n        if (angleBracketsCount === 0) {\n          break;\n        }\n      }\n    }\n  } else if (\n    xmlData.length > i + 9 &&\n    xmlData[i + 1] === '[' &&\n    xmlData[i + 2] === 'C' &&\n    xmlData[i + 3] === 'D' &&\n    xmlData[i + 4] === 'A' &&\n    xmlData[i + 5] === 'T' &&\n    xmlData[i + 6] === 'A' &&\n    xmlData[i + 7] === '['\n  ) {\n    for (i += 8; i < xmlData.length; i++) {\n      if (xmlData[i] === ']' && xmlData[i + 1] === ']' && xmlData[i + 2] === '>') {\n        i += 2;\n        break;\n      }\n    }\n  }\n\n  return i;\n}\n\nconst doubleQuote = '\"';\nconst singleQuote = \"'\";\n\n/**\n * Keep reading xmlData until '<' is found outside the attribute value.\n * @param {string} xmlData\n * @param {number} i\n */\nfunction readAttributeStr(xmlData, i) {\n  let attrStr = '';\n  let startChar = '';\n  let tagClosed = false;\n  for (; i < xmlData.length; i++) {\n    if (xmlData[i] === doubleQuote || xmlData[i] === singleQuote) {\n      if (startChar === '') {\n        startChar = xmlData[i];\n      } else if (startChar !== xmlData[i]) {\n        //if vaue is enclosed with double quote then single quotes are allowed inside the value and vice versa\n      } else {\n        startChar = '';\n      }\n    } else if (xmlData[i] === '>') {\n      if (startChar === '') {\n        tagClosed = true;\n        break;\n      }\n    }\n    attrStr += xmlData[i];\n  }\n  if (startChar !== '') {\n    return false;\n  }\n\n  return {\n    value: attrStr,\n    index: i,\n    tagClosed: tagClosed\n  };\n}\n\n/**\n * Select all the attributes whether valid or invalid.\n */\nconst validAttrStrRegxp = new RegExp('(\\\\s*)([^\\\\s=]+)(\\\\s*=)?(\\\\s*([\\'\"])(([\\\\s\\\\S])*?)\\\\5)?', 'g');\n\n//attr, =\"sd\", a=\"amit's\", a=\"sd\"b=\"saf\", ab  cd=\"\"\n\nfunction validateAttributeString(attrStr, options) {\n  //console.log(\"start:\"+attrStr+\":end\");\n\n  //if(attrStr.trim().length === 0) return true; //empty string\n\n  const matches = util.getAllMatches(attrStr, validAttrStrRegxp);\n  const attrNames = {};\n\n  for (let i = 0; i < matches.length; i++) {\n    if (matches[i][1].length === 0) {\n      //nospace before attribute name: a=\"sd\"b=\"saf\"\n      return getErrorObject('InvalidAttr', \"Attribute '\"+matches[i][2]+\"' has no space in starting.\", getPositionFromMatch(matches[i]))\n    } else if (matches[i][3] !== undefined && matches[i][4] === undefined) {\n      return getErrorObject('InvalidAttr', \"Attribute '\"+matches[i][2]+\"' is without value.\", getPositionFromMatch(matches[i]));\n    } else if (matches[i][3] === undefined && !options.allowBooleanAttributes) {\n      //independent attribute: ab\n      return getErrorObject('InvalidAttr', \"boolean attribute '\"+matches[i][2]+\"' is not allowed.\", getPositionFromMatch(matches[i]));\n    }\n    /* else if(matches[i][6] === undefined){//attribute without value: ab=\n                    return { err: { code:\"InvalidAttr\",msg:\"attribute \" + matches[i][2] + \" has no value assigned.\"}};\n                } */\n    const attrName = matches[i][2];\n    if (!validateAttrName(attrName)) {\n      return getErrorObject('InvalidAttr', \"Attribute '\"+attrName+\"' is an invalid name.\", getPositionFromMatch(matches[i]));\n    }\n    if (!attrNames.hasOwnProperty(attrName)) {\n      //check for duplicate attribute.\n      attrNames[attrName] = 1;\n    } else {\n      return getErrorObject('InvalidAttr', \"Attribute '\"+attrName+\"' is repeated.\", getPositionFromMatch(matches[i]));\n    }\n  }\n\n  return true;\n}\n\nfunction validateNumberAmpersand(xmlData, i) {\n  let re = /\\d/;\n  if (xmlData[i] === 'x') {\n    i++;\n    re = /[\\da-fA-F]/;\n  }\n  for (; i < xmlData.length; i++) {\n    if (xmlData[i] === ';')\n      return i;\n    if (!xmlData[i].match(re))\n      break;\n  }\n  return -1;\n}\n\nfunction validateAmpersand(xmlData, i) {\n  // https://www.w3.org/TR/xml/#dt-charref\n  i++;\n  if (xmlData[i] === ';')\n    return -1;\n  if (xmlData[i] === '#') {\n    i++;\n    return validateNumberAmpersand(xmlData, i);\n  }\n  let count = 0;\n  for (; i < xmlData.length; i++, count++) {\n    if (xmlData[i].match(/\\w/) && count < 20)\n      continue;\n    if (xmlData[i] === ';')\n      break;\n    return -1;\n  }\n  return i;\n}\n\nfunction getErrorObject(code, message, lineNumber) {\n  return {\n    err: {\n      code: code,\n      msg: message,\n      line: lineNumber.line || lineNumber,\n      col: lineNumber.col,\n    },\n  };\n}\n\nfunction validateAttrName(attrName) {\n  return util.isName(attrName);\n}\n\n// const startsWithXML = /^xml/i;\n\nfunction validateTagName(tagname) {\n  return util.isName(tagname) /* && !tagname.match(startsWithXML) */;\n}\n\n//this function returns the line number for the character at the given index\nfunction getLineNumberForPosition(xmlData, index) {\n  const lines = xmlData.substring(0, index).split(/\\r?\\n/);\n  return {\n    line: lines.length,\n\n    // column number is last line's length + 1, because column numbering starts at 1:\n    col: lines[lines.length - 1].length + 1\n  };\n}\n\n//this function returns the position of the first character of match within attrStr\nfunction getPositionFromMatch(match) {\n  return match.startIndex + match[1].length;\n}\n","\nconst defaultOptions = {\n    preserveOrder: false,\n    attributeNamePrefix: '@_',\n    attributesGroupName: false,\n    textNodeName: '#text',\n    ignoreAttributes: true,\n    removeNSPrefix: false, // remove NS from tag name or attribute name if true\n    allowBooleanAttributes: false, //a tag can have attributes without any value\n    //ignoreRootElement : false,\n    parseTagValue: true,\n    parseAttributeValue: false,\n    trimValues: true, //Trim string values of tag and attributes\n    cdataPropName: false,\n    numberParseOptions: {\n      hex: true,\n      leadingZeros: true,\n      eNotation: true\n    },\n    tagValueProcessor: function(tagName, val) {\n      return val;\n    },\n    attributeValueProcessor: function(attrName, val) {\n      return val;\n    },\n    stopNodes: [], //nested tags will not be parsed even for errors\n    alwaysCreateTextNode: false,\n    isArray: () => false,\n    commentPropName: false,\n    unpairedTags: [],\n    processEntities: true,\n    htmlEntities: false,\n    ignoreDeclaration: false,\n    ignorePiTags: false,\n    transformTagName: false,\n    transformAttributeName: false,\n    updateTag: function(tagName, jPath, attrs){\n      return tagName\n    },\n    // skipEmptyListItem: false\n};\n   \nconst buildOptions = function(options) {\n    return Object.assign({}, defaultOptions, options);\n};\n\nexports.buildOptions = buildOptions;\nexports.defaultOptions = defaultOptions;","'use strict';\n\nclass XmlNode{\n  constructor(tagname) {\n    this.tagname = tagname;\n    this.child = []; //nested tags, text, cdata, comments in order\n    this[\":@\"] = {}; //attributes map\n  }\n  add(key,val){\n    // this.child.push( {name : key, val: val, isCdata: isCdata });\n    if(key === \"__proto__\") key = \"#__proto__\";\n    this.child.push( {[key]: val });\n  }\n  addChild(node) {\n    if(node.tagname === \"__proto__\") node.tagname = \"#__proto__\";\n    if(node[\":@\"] && Object.keys(node[\":@\"]).length > 0){\n      this.child.push( { [node.tagname]: node.child, [\":@\"]: node[\":@\"] });\n    }else{\n      this.child.push( { [node.tagname]: node.child });\n    }\n  };\n};\n\n\nmodule.exports = XmlNode;","const util = require('../util');\n\n//TODO: handle comments\nfunction readDocType(xmlData, i){\n    \n    const entities = {};\n    if( xmlData[i + 3] === 'O' &&\n         xmlData[i + 4] === 'C' &&\n         xmlData[i + 5] === 'T' &&\n         xmlData[i + 6] === 'Y' &&\n         xmlData[i + 7] === 'P' &&\n         xmlData[i + 8] === 'E')\n    {    \n        i = i+9;\n        let angleBracketsCount = 1;\n        let hasBody = false, comment = false;\n        let exp = \"\";\n        for(;i<xmlData.length;i++){\n            if (xmlData[i] === '<' && !comment) { //Determine the tag type\n                if( hasBody && isEntity(xmlData, i)){\n                    i += 7; \n                    [entityName, val,i] = readEntityExp(xmlData,i+1);\n                    if(val.indexOf(\"&\") === -1) //Parameter entities are not supported\n                        entities[ validateEntityName(entityName) ] = {\n                            regx : RegExp( `&${entityName};`,\"g\"),\n                            val: val\n                        };\n                }\n                else if( hasBody && isElement(xmlData, i))  i += 8;//Not supported\n                else if( hasBody && isAttlist(xmlData, i))  i += 8;//Not supported\n                else if( hasBody && isNotation(xmlData, i)) i += 9;//Not supported\n                else if( isComment)                         comment = true;\n                else                                        throw new Error(\"Invalid DOCTYPE\");\n\n                angleBracketsCount++;\n                exp = \"\";\n            } else if (xmlData[i] === '>') { //Read tag content\n                if(comment){\n                    if( xmlData[i - 1] === \"-\" && xmlData[i - 2] === \"-\"){\n                        comment = false;\n                        angleBracketsCount--;\n                    }\n                }else{\n                    angleBracketsCount--;\n                }\n                if (angleBracketsCount === 0) {\n                  break;\n                }\n            }else if( xmlData[i] === '['){\n                hasBody = true;\n            }else{\n                exp += xmlData[i];\n            }\n        }\n        if(angleBracketsCount !== 0){\n            throw new Error(`Unclosed DOCTYPE`);\n        }\n    }else{\n        throw new Error(`Invalid Tag instead of DOCTYPE`);\n    }\n    return {entities, i};\n}\n\nfunction readEntityExp(xmlData,i){\n    //External entities are not supported\n    //    <!ENTITY ext SYSTEM \"http://normal-website.com\" >\n\n    //Parameter entities are not supported\n    //    <!ENTITY entityname \"&anotherElement;\">\n\n    //Internal entities are supported\n    //    <!ENTITY entityname \"replacement text\">\n    \n    //read EntityName\n    let entityName = \"\";\n    for (; i < xmlData.length && (xmlData[i] !== \"'\" && xmlData[i] !== '\"' ); i++) {\n        // if(xmlData[i] === \" \") continue;\n        // else \n        entityName += xmlData[i];\n    }\n    entityName = entityName.trim();\n    if(entityName.indexOf(\" \") !== -1) throw new Error(\"External entites are not supported\");\n\n    //read Entity Value\n    const startChar = xmlData[i++];\n    let val = \"\"\n    for (; i < xmlData.length && xmlData[i] !== startChar ; i++) {\n        val += xmlData[i];\n    }\n    return [entityName, val, i];\n}\n\nfunction isComment(xmlData, i){\n    if(xmlData[i+1] === '!' &&\n    xmlData[i+2] === '-' &&\n    xmlData[i+3] === '-') return true\n    return false\n}\nfunction isEntity(xmlData, i){\n    if(xmlData[i+1] === '!' &&\n    xmlData[i+2] === 'E' &&\n    xmlData[i+3] === 'N' &&\n    xmlData[i+4] === 'T' &&\n    xmlData[i+5] === 'I' &&\n    xmlData[i+6] === 'T' &&\n    xmlData[i+7] === 'Y') return true\n    return false\n}\nfunction isElement(xmlData, i){\n    if(xmlData[i+1] === '!' &&\n    xmlData[i+2] === 'E' &&\n    xmlData[i+3] === 'L' &&\n    xmlData[i+4] === 'E' &&\n    xmlData[i+5] === 'M' &&\n    xmlData[i+6] === 'E' &&\n    xmlData[i+7] === 'N' &&\n    xmlData[i+8] === 'T') return true\n    return false\n}\n\nfunction isAttlist(xmlData, i){\n    if(xmlData[i+1] === '!' &&\n    xmlData[i+2] === 'A' &&\n    xmlData[i+3] === 'T' &&\n    xmlData[i+4] === 'T' &&\n    xmlData[i+5] === 'L' &&\n    xmlData[i+6] === 'I' &&\n    xmlData[i+7] === 'S' &&\n    xmlData[i+8] === 'T') return true\n    return false\n}\nfunction isNotation(xmlData, i){\n    if(xmlData[i+1] === '!' &&\n    xmlData[i+2] === 'N' &&\n    xmlData[i+3] === 'O' &&\n    xmlData[i+4] === 'T' &&\n    xmlData[i+5] === 'A' &&\n    xmlData[i+6] === 'T' &&\n    xmlData[i+7] === 'I' &&\n    xmlData[i+8] === 'O' &&\n    xmlData[i+9] === 'N') return true\n    return false\n}\n\nfunction validateEntityName(name){\n    if (util.isName(name))\n\treturn name;\n    else\n        throw new Error(`Invalid entity name ${name}`);\n}\n\nmodule.exports = readDocType;\n","const hexRegex = /^[-+]?0x[a-fA-F0-9]+$/;\nconst numRegex = /^([\\-\\+])?(0*)(\\.[0-9]+([eE]\\-?[0-9]+)?|[0-9]+(\\.[0-9]+([eE]\\-?[0-9]+)?)?)$/;\n// const octRegex = /0x[a-z0-9]+/;\n// const binRegex = /0x[a-z0-9]+/;\n\n\n//polyfill\nif (!Number.parseInt && window.parseInt) {\n    Number.parseInt = window.parseInt;\n}\nif (!Number.parseFloat && window.parseFloat) {\n    Number.parseFloat = window.parseFloat;\n}\n\n  \nconst consider = {\n    hex :  true,\n    leadingZeros: true,\n    decimalPoint: \"\\.\",\n    eNotation: true\n    //skipLike: /regex/\n};\n\nfunction toNumber(str, options = {}){\n    // const options = Object.assign({}, consider);\n    // if(opt.leadingZeros === false){\n    //     options.leadingZeros = false;\n    // }else if(opt.hex === false){\n    //     options.hex = false;\n    // }\n\n    options = Object.assign({}, consider, options );\n    if(!str || typeof str !== \"string\" ) return str;\n    \n    let trimmedStr  = str.trim();\n    // if(trimmedStr === \"0.0\") return 0;\n    // else if(trimmedStr === \"+0.0\") return 0;\n    // else if(trimmedStr === \"-0.0\") return -0;\n\n    if(options.skipLike !== undefined && options.skipLike.test(trimmedStr)) return str;\n    else if (options.hex && hexRegex.test(trimmedStr)) {\n        return Number.parseInt(trimmedStr, 16);\n    // } else if (options.parseOct && octRegex.test(str)) {\n    //     return Number.parseInt(val, 8);\n    // }else if (options.parseBin && binRegex.test(str)) {\n    //     return Number.parseInt(val, 2);\n    }else{\n        //separate negative sign, leading zeros, and rest number\n        const match = numRegex.exec(trimmedStr);\n        if(match){\n            const sign = match[1];\n            const leadingZeros = match[2];\n            let numTrimmedByZeros = trimZeros(match[3]); //complete num without leading zeros\n            //trim ending zeros for floating number\n            \n            const eNotation = match[4] || match[6];\n            if(!options.leadingZeros && leadingZeros.length > 0 && sign && trimmedStr[2] !== \".\") return str; //-0123\n            else if(!options.leadingZeros && leadingZeros.length > 0 && !sign && trimmedStr[1] !== \".\") return str; //0123\n            else{//no leading zeros or leading zeros are allowed\n                const num = Number(trimmedStr);\n                const numStr = \"\" + num;\n                if(numStr.search(/[eE]/) !== -1){ //given number is long and parsed to eNotation\n                    if(options.eNotation) return num;\n                    else return str;\n                }else if(eNotation){ //given number has enotation\n                    if(options.eNotation) return num;\n                    else return str;\n                }else if(trimmedStr.indexOf(\".\") !== -1){ //floating number\n                    // const decimalPart = match[5].substr(1);\n                    // const intPart = trimmedStr.substr(0,trimmedStr.indexOf(\".\"));\n\n                    \n                    // const p = numStr.indexOf(\".\");\n                    // const givenIntPart = numStr.substr(0,p);\n                    // const givenDecPart = numStr.substr(p+1);\n                    if(numStr === \"0\" && (numTrimmedByZeros === \"\") ) return num; //0.0\n                    else if(numStr === numTrimmedByZeros) return num; //0.456. 0.79000\n                    else if( sign && numStr === \"-\"+numTrimmedByZeros) return num;\n                    else return str;\n                }\n                \n                if(leadingZeros){\n                    // if(numTrimmedByZeros === numStr){\n                    //     if(options.leadingZeros) return num;\n                    //     else return str;\n                    // }else return str;\n                    if(numTrimmedByZeros === numStr) return num;\n                    else if(sign+numTrimmedByZeros === numStr) return num;\n                    else return str;\n                }\n\n                if(trimmedStr === numStr) return num;\n                else if(trimmedStr === sign+numStr) return num;\n                // else{\n                //     //number with +/- sign\n                //     trimmedStr.test(/[-+][0-9]);\n\n                // }\n                return str;\n            }\n            // else if(!eNotation && trimmedStr && trimmedStr !== Number(trimmedStr) ) return str;\n            \n        }else{ //non-numeric string\n            return str;\n        }\n    }\n}\n\n/**\n * \n * @param {string} numStr without leading zeros\n * @returns \n */\nfunction trimZeros(numStr){\n    if(numStr && numStr.indexOf(\".\") !== -1){//float\n        numStr = numStr.replace(/0+$/, \"\"); //remove ending zeros\n        if(numStr === \".\")  numStr = \"0\";\n        else if(numStr[0] === \".\")  numStr = \"0\"+numStr;\n        else if(numStr[numStr.length-1] === \".\")  numStr = numStr.substr(0,numStr.length-1);\n        return numStr;\n    }\n    return numStr;\n}\nmodule.exports = toNumber\n","function getIgnoreAttributesFn(ignoreAttributes) {\n    if (typeof ignoreAttributes === 'function') {\n        return ignoreAttributes\n    }\n    if (Array.isArray(ignoreAttributes)) {\n        return (attrName) => {\n            for (const pattern of ignoreAttributes) {\n                if (typeof pattern === 'string' && attrName === pattern) {\n                    return true\n                }\n                if (pattern instanceof RegExp && pattern.test(attrName)) {\n                    return true\n                }\n            }\n        }\n    }\n    return () => false\n}\n\nmodule.exports = getIgnoreAttributesFn","'use strict';\n///@ts-check\n\nconst util = require('../util');\nconst xmlNode = require('./xmlNode');\nconst readDocType = require(\"./DocTypeReader\");\nconst toNumber = require(\"strnum\");\nconst getIgnoreAttributesFn = require('../ignoreAttributes')\n\n// const regx =\n//   '<((!\\\\[CDATA\\\\[([\\\\s\\\\S]*?)(]]>))|((NAME:)?(NAME))([^>]*)>|((\\\\/)(NAME)\\\\s*>))([^<]*)'\n//   .replace(/NAME/g, util.nameRegexp);\n\n//const tagsRegx = new RegExp(\"<(\\\\/?[\\\\w:\\\\-\\._]+)([^>]*)>(\\\\s*\"+cdataRegx+\")*([^<]+)?\",\"g\");\n//const tagsRegx = new RegExp(\"<(\\\\/?)((\\\\w*:)?([\\\\w:\\\\-\\._]+))([^>]*)>([^<]*)(\"+cdataRegx+\"([^<]*))*([^<]+)?\",\"g\");\n\nclass OrderedObjParser{\n  constructor(options){\n    this.options = options;\n    this.currentNode = null;\n    this.tagsNodeStack = [];\n    this.docTypeEntities = {};\n    this.lastEntities = {\n      \"apos\" : { regex: /&(apos|#39|#x27);/g, val : \"'\"},\n      \"gt\" : { regex: /&(gt|#62|#x3E);/g, val : \">\"},\n      \"lt\" : { regex: /&(lt|#60|#x3C);/g, val : \"<\"},\n      \"quot\" : { regex: /&(quot|#34|#x22);/g, val : \"\\\"\"},\n    };\n    this.ampEntity = { regex: /&(amp|#38|#x26);/g, val : \"&\"};\n    this.htmlEntities = {\n      \"space\": { regex: /&(nbsp|#160);/g, val: \" \" },\n      // \"lt\" : { regex: /&(lt|#60);/g, val: \"<\" },\n      // \"gt\" : { regex: /&(gt|#62);/g, val: \">\" },\n      // \"amp\" : { regex: /&(amp|#38);/g, val: \"&\" },\n      // \"quot\" : { regex: /&(quot|#34);/g, val: \"\\\"\" },\n      // \"apos\" : { regex: /&(apos|#39);/g, val: \"'\" },\n      \"cent\" : { regex: /&(cent|#162);/g, val: \"¢\" },\n      \"pound\" : { regex: /&(pound|#163);/g, val: \"£\" },\n      \"yen\" : { regex: /&(yen|#165);/g, val: \"¥\" },\n      \"euro\" : { regex: /&(euro|#8364);/g, val: \"€\" },\n      \"copyright\" : { regex: /&(copy|#169);/g, val: \"©\" },\n      \"reg\" : { regex: /&(reg|#174);/g, val: \"®\" },\n      \"inr\" : { regex: /&(inr|#8377);/g, val: \"₹\" },\n      \"num_dec\": { regex: /&#([0-9]{1,7});/g, val : (_, str) => String.fromCharCode(Number.parseInt(str, 10)) },\n      \"num_hex\": { regex: /&#x([0-9a-fA-F]{1,6});/g, val : (_, str) => String.fromCharCode(Number.parseInt(str, 16)) },\n    };\n    this.addExternalEntities = addExternalEntities;\n    this.parseXml = parseXml;\n    this.parseTextData = parseTextData;\n    this.resolveNameSpace = resolveNameSpace;\n    this.buildAttributesMap = buildAttributesMap;\n    this.isItStopNode = isItStopNode;\n    this.replaceEntitiesValue = replaceEntitiesValue;\n    this.readStopNodeData = readStopNodeData;\n    this.saveTextToParentTag = saveTextToParentTag;\n    this.addChild = addChild;\n    this.ignoreAttributesFn = getIgnoreAttributesFn(this.options.ignoreAttributes)\n  }\n\n}\n\nfunction addExternalEntities(externalEntities){\n  const entKeys = Object.keys(externalEntities);\n  for (let i = 0; i < entKeys.length; i++) {\n    const ent = entKeys[i];\n    this.lastEntities[ent] = {\n       regex: new RegExp(\"&\"+ent+\";\",\"g\"),\n       val : externalEntities[ent]\n    }\n  }\n}\n\n/**\n * @param {string} val\n * @param {string} tagName\n * @param {string} jPath\n * @param {boolean} dontTrim\n * @param {boolean} hasAttributes\n * @param {boolean} isLeafNode\n * @param {boolean} escapeEntities\n */\nfunction parseTextData(val, tagName, jPath, dontTrim, hasAttributes, isLeafNode, escapeEntities) {\n  if (val !== undefined) {\n    if (this.options.trimValues && !dontTrim) {\n      val = val.trim();\n    }\n    if(val.length > 0){\n      if(!escapeEntities) val = this.replaceEntitiesValue(val);\n      \n      const newval = this.options.tagValueProcessor(tagName, val, jPath, hasAttributes, isLeafNode);\n      if(newval === null || newval === undefined){\n        //don't parse\n        return val;\n      }else if(typeof newval !== typeof val || newval !== val){\n        //overwrite\n        return newval;\n      }else if(this.options.trimValues){\n        return parseValue(val, this.options.parseTagValue, this.options.numberParseOptions);\n      }else{\n        const trimmedVal = val.trim();\n        if(trimmedVal === val){\n          return parseValue(val, this.options.parseTagValue, this.options.numberParseOptions);\n        }else{\n          return val;\n        }\n      }\n    }\n  }\n}\n\nfunction resolveNameSpace(tagname) {\n  if (this.options.removeNSPrefix) {\n    const tags = tagname.split(':');\n    const prefix = tagname.charAt(0) === '/' ? '/' : '';\n    if (tags[0] === 'xmlns') {\n      return '';\n    }\n    if (tags.length === 2) {\n      tagname = prefix + tags[1];\n    }\n  }\n  return tagname;\n}\n\n//TODO: change regex to capture NS\n//const attrsRegx = new RegExp(\"([\\\\w\\\\-\\\\.\\\\:]+)\\\\s*=\\\\s*(['\\\"])((.|\\n)*?)\\\\2\",\"gm\");\nconst attrsRegx = new RegExp('([^\\\\s=]+)\\\\s*(=\\\\s*([\\'\"])([\\\\s\\\\S]*?)\\\\3)?', 'gm');\n\nfunction buildAttributesMap(attrStr, jPath, tagName) {\n  if (this.options.ignoreAttributes !== true && typeof attrStr === 'string') {\n    // attrStr = attrStr.replace(/\\r?\\n/g, ' ');\n    //attrStr = attrStr || attrStr.trim();\n\n    const matches = util.getAllMatches(attrStr, attrsRegx);\n    const len = matches.length; //don't make it inline\n    const attrs = {};\n    for (let i = 0; i < len; i++) {\n      const attrName = this.resolveNameSpace(matches[i][1]);\n      if (this.ignoreAttributesFn(attrName, jPath)) {\n        continue\n      }\n      let oldVal = matches[i][4];\n      let aName = this.options.attributeNamePrefix + attrName;\n      if (attrName.length) {\n        if (this.options.transformAttributeName) {\n          aName = this.options.transformAttributeName(aName);\n        }\n        if(aName === \"__proto__\") aName  = \"#__proto__\";\n        if (oldVal !== undefined) {\n          if (this.options.trimValues) {\n            oldVal = oldVal.trim();\n          }\n          oldVal = this.replaceEntitiesValue(oldVal);\n          const newVal = this.options.attributeValueProcessor(attrName, oldVal, jPath);\n          if(newVal === null || newVal === undefined){\n            //don't parse\n            attrs[aName] = oldVal;\n          }else if(typeof newVal !== typeof oldVal || newVal !== oldVal){\n            //overwrite\n            attrs[aName] = newVal;\n          }else{\n            //parse\n            attrs[aName] = parseValue(\n              oldVal,\n              this.options.parseAttributeValue,\n              this.options.numberParseOptions\n            );\n          }\n        } else if (this.options.allowBooleanAttributes) {\n          attrs[aName] = true;\n        }\n      }\n    }\n    if (!Object.keys(attrs).length) {\n      return;\n    }\n    if (this.options.attributesGroupName) {\n      const attrCollection = {};\n      attrCollection[this.options.attributesGroupName] = attrs;\n      return attrCollection;\n    }\n    return attrs\n  }\n}\n\nconst parseXml = function(xmlData) {\n  xmlData = xmlData.replace(/\\r\\n?/g, \"\\n\"); //TODO: remove this line\n  const xmlObj = new xmlNode('!xml');\n  let currentNode = xmlObj;\n  let textData = \"\";\n  let jPath = \"\";\n  for(let i=0; i< xmlData.length; i++){//for each char in XML data\n    const ch = xmlData[i];\n    if(ch === '<'){\n      // const nextIndex = i+1;\n      // const _2ndChar = xmlData[nextIndex];\n      if( xmlData[i+1] === '/') {//Closing Tag\n        const closeIndex = findClosingIndex(xmlData, \">\", i, \"Closing Tag is not closed.\")\n        let tagName = xmlData.substring(i+2,closeIndex).trim();\n\n        if(this.options.removeNSPrefix){\n          const colonIndex = tagName.indexOf(\":\");\n          if(colonIndex !== -1){\n            tagName = tagName.substr(colonIndex+1);\n          }\n        }\n\n        if(this.options.transformTagName) {\n          tagName = this.options.transformTagName(tagName);\n        }\n\n        if(currentNode){\n          textData = this.saveTextToParentTag(textData, currentNode, jPath);\n        }\n\n        //check if last tag of nested tag was unpaired tag\n        const lastTagName = jPath.substring(jPath.lastIndexOf(\".\")+1);\n        if(tagName && this.options.unpairedTags.indexOf(tagName) !== -1 ){\n          throw new Error(`Unpaired tag can not be used as closing tag: </${tagName}>`);\n        }\n        let propIndex = 0\n        if(lastTagName && this.options.unpairedTags.indexOf(lastTagName) !== -1 ){\n          propIndex = jPath.lastIndexOf('.', jPath.lastIndexOf('.')-1)\n          this.tagsNodeStack.pop();\n        }else{\n          propIndex = jPath.lastIndexOf(\".\");\n        }\n        jPath = jPath.substring(0, propIndex);\n\n        currentNode = this.tagsNodeStack.pop();//avoid recursion, set the parent tag scope\n        textData = \"\";\n        i = closeIndex;\n      } else if( xmlData[i+1] === '?') {\n\n        let tagData = readTagExp(xmlData,i, false, \"?>\");\n        if(!tagData) throw new Error(\"Pi Tag is not closed.\");\n\n        textData = this.saveTextToParentTag(textData, currentNode, jPath);\n        if( (this.options.ignoreDeclaration && tagData.tagName === \"?xml\") || this.options.ignorePiTags){\n\n        }else{\n  \n          const childNode = new xmlNode(tagData.tagName);\n          childNode.add(this.options.textNodeName, \"\");\n          \n          if(tagData.tagName !== tagData.tagExp && tagData.attrExpPresent){\n            childNode[\":@\"] = this.buildAttributesMap(tagData.tagExp, jPath, tagData.tagName);\n          }\n          this.addChild(currentNode, childNode, jPath)\n\n        }\n\n\n        i = tagData.closeIndex + 1;\n      } else if(xmlData.substr(i + 1, 3) === '!--') {\n        const endIndex = findClosingIndex(xmlData, \"-->\", i+4, \"Comment is not closed.\")\n        if(this.options.commentPropName){\n          const comment = xmlData.substring(i + 4, endIndex - 2);\n\n          textData = this.saveTextToParentTag(textData, currentNode, jPath);\n\n          currentNode.add(this.options.commentPropName, [ { [this.options.textNodeName] : comment } ]);\n        }\n        i = endIndex;\n      } else if( xmlData.substr(i + 1, 2) === '!D') {\n        const result = readDocType(xmlData, i);\n        this.docTypeEntities = result.entities;\n        i = result.i;\n      }else if(xmlData.substr(i + 1, 2) === '![') {\n        const closeIndex = findClosingIndex(xmlData, \"]]>\", i, \"CDATA is not closed.\") - 2;\n        const tagExp = xmlData.substring(i + 9,closeIndex);\n\n        textData = this.saveTextToParentTag(textData, currentNode, jPath);\n\n        let val = this.parseTextData(tagExp, currentNode.tagname, jPath, true, false, true, true);\n        if(val == undefined) val = \"\";\n\n        //cdata should be set even if it is 0 length string\n        if(this.options.cdataPropName){\n          currentNode.add(this.options.cdataPropName, [ { [this.options.textNodeName] : tagExp } ]);\n        }else{\n          currentNode.add(this.options.textNodeName, val);\n        }\n        \n        i = closeIndex + 2;\n      }else {//Opening tag\n        let result = readTagExp(xmlData,i, this.options.removeNSPrefix);\n        let tagName= result.tagName;\n        const rawTagName = result.rawTagName;\n        let tagExp = result.tagExp;\n        let attrExpPresent = result.attrExpPresent;\n        let closeIndex = result.closeIndex;\n\n        if (this.options.transformTagName) {\n          tagName = this.options.transformTagName(tagName);\n        }\n        \n        //save text as child node\n        if (currentNode && textData) {\n          if(currentNode.tagname !== '!xml'){\n            //when nested tag is found\n            textData = this.saveTextToParentTag(textData, currentNode, jPath, false);\n          }\n        }\n\n        //check if last tag was unpaired tag\n        const lastTag = currentNode;\n        if(lastTag && this.options.unpairedTags.indexOf(lastTag.tagname) !== -1 ){\n          currentNode = this.tagsNodeStack.pop();\n          jPath = jPath.substring(0, jPath.lastIndexOf(\".\"));\n        }\n        if(tagName !== xmlObj.tagname){\n          jPath += jPath ? \".\" + tagName : tagName;\n        }\n        if (this.isItStopNode(this.options.stopNodes, jPath, tagName)) {\n          let tagContent = \"\";\n          //self-closing tag\n          if(tagExp.length > 0 && tagExp.lastIndexOf(\"/\") === tagExp.length - 1){\n            if(tagName[tagName.length - 1] === \"/\"){ //remove trailing '/'\n              tagName = tagName.substr(0, tagName.length - 1);\n              jPath = jPath.substr(0, jPath.length - 1);\n              tagExp = tagName;\n            }else{\n              tagExp = tagExp.substr(0, tagExp.length - 1);\n            }\n            i = result.closeIndex;\n          }\n          //unpaired tag\n          else if(this.options.unpairedTags.indexOf(tagName) !== -1){\n            \n            i = result.closeIndex;\n          }\n          //normal tag\n          else{\n            //read until closing tag is found\n            const result = this.readStopNodeData(xmlData, rawTagName, closeIndex + 1);\n            if(!result) throw new Error(`Unexpected end of ${rawTagName}`);\n            i = result.i;\n            tagContent = result.tagContent;\n          }\n\n          const childNode = new xmlNode(tagName);\n          if(tagName !== tagExp && attrExpPresent){\n            childNode[\":@\"] = this.buildAttributesMap(tagExp, jPath, tagName);\n          }\n          if(tagContent) {\n            tagContent = this.parseTextData(tagContent, tagName, jPath, true, attrExpPresent, true, true);\n          }\n          \n          jPath = jPath.substr(0, jPath.lastIndexOf(\".\"));\n          childNode.add(this.options.textNodeName, tagContent);\n          \n          this.addChild(currentNode, childNode, jPath)\n        }else{\n  //selfClosing tag\n          if(tagExp.length > 0 && tagExp.lastIndexOf(\"/\") === tagExp.length - 1){\n            if(tagName[tagName.length - 1] === \"/\"){ //remove trailing '/'\n              tagName = tagName.substr(0, tagName.length - 1);\n              jPath = jPath.substr(0, jPath.length - 1);\n              tagExp = tagName;\n            }else{\n              tagExp = tagExp.substr(0, tagExp.length - 1);\n            }\n            \n            if(this.options.transformTagName) {\n              tagName = this.options.transformTagName(tagName);\n            }\n\n            const childNode = new xmlNode(tagName);\n            if(tagName !== tagExp && attrExpPresent){\n              childNode[\":@\"] = this.buildAttributesMap(tagExp, jPath, tagName);\n            }\n            this.addChild(currentNode, childNode, jPath)\n            jPath = jPath.substr(0, jPath.lastIndexOf(\".\"));\n          }\n    //opening tag\n          else{\n            const childNode = new xmlNode( tagName);\n            this.tagsNodeStack.push(currentNode);\n            \n            if(tagName !== tagExp && attrExpPresent){\n              childNode[\":@\"] = this.buildAttributesMap(tagExp, jPath, tagName);\n            }\n            this.addChild(currentNode, childNode, jPath)\n            currentNode = childNode;\n          }\n          textData = \"\";\n          i = closeIndex;\n        }\n      }\n    }else{\n      textData += xmlData[i];\n    }\n  }\n  return xmlObj.child;\n}\n\nfunction addChild(currentNode, childNode, jPath){\n  const result = this.options.updateTag(childNode.tagname, jPath, childNode[\":@\"])\n  if(result === false){\n  }else if(typeof result === \"string\"){\n    childNode.tagname = result\n    currentNode.addChild(childNode);\n  }else{\n    currentNode.addChild(childNode);\n  }\n}\n\nconst replaceEntitiesValue = function(val){\n\n  if(this.options.processEntities){\n    for(let entityName in this.docTypeEntities){\n      const entity = this.docTypeEntities[entityName];\n      val = val.replace( entity.regx, entity.val);\n    }\n    for(let entityName in this.lastEntities){\n      const entity = this.lastEntities[entityName];\n      val = val.replace( entity.regex, entity.val);\n    }\n    if(this.options.htmlEntities){\n      for(let entityName in this.htmlEntities){\n        const entity = this.htmlEntities[entityName];\n        val = val.replace( entity.regex, entity.val);\n      }\n    }\n    val = val.replace( this.ampEntity.regex, this.ampEntity.val);\n  }\n  return val;\n}\nfunction saveTextToParentTag(textData, currentNode, jPath, isLeafNode) {\n  if (textData) { //store previously collected data as textNode\n    if(isLeafNode === undefined) isLeafNode = Object.keys(currentNode.child).length === 0\n    \n    textData = this.parseTextData(textData,\n      currentNode.tagname,\n      jPath,\n      false,\n      currentNode[\":@\"] ? Object.keys(currentNode[\":@\"]).length !== 0 : false,\n      isLeafNode);\n\n    if (textData !== undefined && textData !== \"\")\n      currentNode.add(this.options.textNodeName, textData);\n    textData = \"\";\n  }\n  return textData;\n}\n\n//TODO: use jPath to simplify the logic\n/**\n * \n * @param {string[]} stopNodes \n * @param {string} jPath\n * @param {string} currentTagName \n */\nfunction isItStopNode(stopNodes, jPath, currentTagName){\n  const allNodesExp = \"*.\" + currentTagName;\n  for (const stopNodePath in stopNodes) {\n    const stopNodeExp = stopNodes[stopNodePath];\n    if( allNodesExp === stopNodeExp || jPath === stopNodeExp  ) return true;\n  }\n  return false;\n}\n\n/**\n * Returns the tag Expression and where it is ending handling single-double quotes situation\n * @param {string} xmlData \n * @param {number} i starting index\n * @returns \n */\nfunction tagExpWithClosingIndex(xmlData, i, closingChar = \">\"){\n  let attrBoundary;\n  let tagExp = \"\";\n  for (let index = i; index < xmlData.length; index++) {\n    let ch = xmlData[index];\n    if (attrBoundary) {\n        if (ch === attrBoundary) attrBoundary = \"\";//reset\n    } else if (ch === '\"' || ch === \"'\") {\n        attrBoundary = ch;\n    } else if (ch === closingChar[0]) {\n      if(closingChar[1]){\n        if(xmlData[index + 1] === closingChar[1]){\n          return {\n            data: tagExp,\n            index: index\n          }\n        }\n      }else{\n        return {\n          data: tagExp,\n          index: index\n        }\n      }\n    } else if (ch === '\\t') {\n      ch = \" \"\n    }\n    tagExp += ch;\n  }\n}\n\nfunction findClosingIndex(xmlData, str, i, errMsg){\n  const closingIndex = xmlData.indexOf(str, i);\n  if(closingIndex === -1){\n    throw new Error(errMsg)\n  }else{\n    return closingIndex + str.length - 1;\n  }\n}\n\nfunction readTagExp(xmlData,i, removeNSPrefix, closingChar = \">\"){\n  const result = tagExpWithClosingIndex(xmlData, i+1, closingChar);\n  if(!result) return;\n  let tagExp = result.data;\n  const closeIndex = result.index;\n  const separatorIndex = tagExp.search(/\\s/);\n  let tagName = tagExp;\n  let attrExpPresent = true;\n  if(separatorIndex !== -1){//separate tag name and attributes expression\n    tagName = tagExp.substring(0, separatorIndex);\n    tagExp = tagExp.substring(separatorIndex + 1).trimStart();\n  }\n\n  const rawTagName = tagName;\n  if(removeNSPrefix){\n    const colonIndex = tagName.indexOf(\":\");\n    if(colonIndex !== -1){\n      tagName = tagName.substr(colonIndex+1);\n      attrExpPresent = tagName !== result.data.substr(colonIndex + 1);\n    }\n  }\n\n  return {\n    tagName: tagName,\n    tagExp: tagExp,\n    closeIndex: closeIndex,\n    attrExpPresent: attrExpPresent,\n    rawTagName: rawTagName,\n  }\n}\n/**\n * find paired tag for a stop node\n * @param {string} xmlData \n * @param {string} tagName \n * @param {number} i \n */\nfunction readStopNodeData(xmlData, tagName, i){\n  const startIndex = i;\n  // Starting at 1 since we already have an open tag\n  let openTagCount = 1;\n\n  for (; i < xmlData.length; i++) {\n    if( xmlData[i] === \"<\"){ \n      if (xmlData[i+1] === \"/\") {//close tag\n          const closeIndex = findClosingIndex(xmlData, \">\", i, `${tagName} is not closed`);\n          let closeTagName = xmlData.substring(i+2,closeIndex).trim();\n          if(closeTagName === tagName){\n            openTagCount--;\n            if (openTagCount === 0) {\n              return {\n                tagContent: xmlData.substring(startIndex, i),\n                i : closeIndex\n              }\n            }\n          }\n          i=closeIndex;\n        } else if(xmlData[i+1] === '?') { \n          const closeIndex = findClosingIndex(xmlData, \"?>\", i+1, \"StopNode is not closed.\")\n          i=closeIndex;\n        } else if(xmlData.substr(i + 1, 3) === '!--') { \n          const closeIndex = findClosingIndex(xmlData, \"-->\", i+3, \"StopNode is not closed.\")\n          i=closeIndex;\n        } else if(xmlData.substr(i + 1, 2) === '![') { \n          const closeIndex = findClosingIndex(xmlData, \"]]>\", i, \"StopNode is not closed.\") - 2;\n          i=closeIndex;\n        } else {\n          const tagData = readTagExp(xmlData, i, '>')\n\n          if (tagData) {\n            const openTagName = tagData && tagData.tagName;\n            if (openTagName === tagName && tagData.tagExp[tagData.tagExp.length-1] !== \"/\") {\n              openTagCount++;\n            }\n            i=tagData.closeIndex;\n          }\n        }\n      }\n  }//end for loop\n}\n\nfunction parseValue(val, shouldParse, options) {\n  if (shouldParse && typeof val === 'string') {\n    //console.log(options)\n    const newval = val.trim();\n    if(newval === 'true' ) return true;\n    else if(newval === 'false' ) return false;\n    else return toNumber(val, options);\n  } else {\n    if (util.isExist(val)) {\n      return val;\n    } else {\n      return '';\n    }\n  }\n}\n\n\nmodule.exports = OrderedObjParser;\n","'use strict';\n\n/**\n * \n * @param {array} node \n * @param {any} options \n * @returns \n */\nfunction prettify(node, options){\n  return compress( node, options);\n}\n\n/**\n * \n * @param {array} arr \n * @param {object} options \n * @param {string} jPath \n * @returns object\n */\nfunction compress(arr, options, jPath){\n  let text;\n  const compressedObj = {};\n  for (let i = 0; i < arr.length; i++) {\n    const tagObj = arr[i];\n    const property = propName(tagObj);\n    let newJpath = \"\";\n    if(jPath === undefined) newJpath = property;\n    else newJpath = jPath + \".\" + property;\n\n    if(property === options.textNodeName){\n      if(text === undefined) text = tagObj[property];\n      else text += \"\" + tagObj[property];\n    }else if(property === undefined){\n      continue;\n    }else if(tagObj[property]){\n      \n      let val = compress(tagObj[property], options, newJpath);\n      const isLeaf = isLeafTag(val, options);\n\n      if(tagObj[\":@\"]){\n        assignAttributes( val, tagObj[\":@\"], newJpath, options);\n      }else if(Object.keys(val).length === 1 && val[options.textNodeName] !== undefined && !options.alwaysCreateTextNode){\n        val = val[options.textNodeName];\n      }else if(Object.keys(val).length === 0){\n        if(options.alwaysCreateTextNode) val[options.textNodeName] = \"\";\n        else val = \"\";\n      }\n\n      if(compressedObj[property] !== undefined && compressedObj.hasOwnProperty(property)) {\n        if(!Array.isArray(compressedObj[property])) {\n            compressedObj[property] = [ compressedObj[property] ];\n        }\n        compressedObj[property].push(val);\n      }else{\n        //TODO: if a node is not an array, then check if it should be an array\n        //also determine if it is a leaf node\n        if (options.isArray(property, newJpath, isLeaf )) {\n          compressedObj[property] = [val];\n        }else{\n          compressedObj[property] = val;\n        }\n      }\n    }\n    \n  }\n  // if(text && text.length > 0) compressedObj[options.textNodeName] = text;\n  if(typeof text === \"string\"){\n    if(text.length > 0) compressedObj[options.textNodeName] = text;\n  }else if(text !== undefined) compressedObj[options.textNodeName] = text;\n  return compressedObj;\n}\n\nfunction propName(obj){\n  const keys = Object.keys(obj);\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    if(key !== \":@\") return key;\n  }\n}\n\nfunction assignAttributes(obj, attrMap, jpath, options){\n  if (attrMap) {\n    const keys = Object.keys(attrMap);\n    const len = keys.length; //don't make it inline\n    for (let i = 0; i < len; i++) {\n      const atrrName = keys[i];\n      if (options.isArray(atrrName, jpath + \".\" + atrrName, true, true)) {\n        obj[atrrName] = [ attrMap[atrrName] ];\n      } else {\n        obj[atrrName] = attrMap[atrrName];\n      }\n    }\n  }\n}\n\nfunction isLeafTag(obj, options){\n  const { textNodeName } = options;\n  const propCount = Object.keys(obj).length;\n  \n  if (propCount === 0) {\n    return true;\n  }\n\n  if (\n    propCount === 1 &&\n    (obj[textNodeName] || typeof obj[textNodeName] === \"boolean\" || obj[textNodeName] === 0)\n  ) {\n    return true;\n  }\n\n  return false;\n}\nexports.prettify = prettify;\n","const { buildOptions} = require(\"./OptionsBuilder\");\nconst OrderedObjParser = require(\"./OrderedObjParser\");\nconst { prettify} = require(\"./node2json\");\nconst validator = require('../validator');\n\nclass XMLParser{\n    \n    constructor(options){\n        this.externalEntities = {};\n        this.options = buildOptions(options);\n        \n    }\n    /**\n     * Parse XML dats to JS object \n     * @param {string|Buffer} xmlData \n     * @param {boolean|Object} validationOption \n     */\n    parse(xmlData,validationOption){\n        if(typeof xmlData === \"string\"){\n        }else if( xmlData.toString){\n            xmlData = xmlData.toString();\n        }else{\n            throw new Error(\"XML data is accepted in String or Bytes[] form.\")\n        }\n        if( validationOption){\n            if(validationOption === true) validationOption = {}; //validate with default options\n            \n            const result = validator.validate(xmlData, validationOption);\n            if (result !== true) {\n              throw Error( `${result.err.msg}:${result.err.line}:${result.err.col}` )\n            }\n          }\n        const orderedObjParser = new OrderedObjParser(this.options);\n        orderedObjParser.addExternalEntities(this.externalEntities);\n        const orderedResult = orderedObjParser.parseXml(xmlData);\n        if(this.options.preserveOrder || orderedResult === undefined) return orderedResult;\n        else return prettify(orderedResult, this.options);\n    }\n\n    /**\n     * Add Entity which is not by default supported by this library\n     * @param {string} key \n     * @param {string} value \n     */\n    addEntity(key, value){\n        if(value.indexOf(\"&\") !== -1){\n            throw new Error(\"Entity value can't have '&'\")\n        }else if(key.indexOf(\"&\") !== -1 || key.indexOf(\";\") !== -1){\n            throw new Error(\"An entity must be set without '&' and ';'. Eg. use '#xD' for '&#xD;'\")\n        }else if(value === \"&\"){\n            throw new Error(\"An entity with value '&' is not permitted\");\n        }else{\n            this.externalEntities[key] = value;\n        }\n    }\n}\n\nmodule.exports = XMLParser;","const EOL = \"\\n\";\n\n/**\n * \n * @param {array} jArray \n * @param {any} options \n * @returns \n */\nfunction toXml(jArray, options) {\n    let indentation = \"\";\n    if (options.format && options.indentBy.length > 0) {\n        indentation = EOL;\n    }\n    return arrToStr(jArray, options, \"\", indentation);\n}\n\nfunction arrToStr(arr, options, jPath, indentation) {\n    let xmlStr = \"\";\n    let isPreviousElementTag = false;\n\n    for (let i = 0; i < arr.length; i++) {\n        const tagObj = arr[i];\n        const tagName = propName(tagObj);\n        if(tagName === undefined) continue;\n\n        let newJPath = \"\";\n        if (jPath.length === 0) newJPath = tagName\n        else newJPath = `${jPath}.${tagName}`;\n\n        if (tagName === options.textNodeName) {\n            let tagText = tagObj[tagName];\n            if (!isStopNode(newJPath, options)) {\n                tagText = options.tagValueProcessor(tagName, tagText);\n                tagText = replaceEntitiesValue(tagText, options);\n            }\n            if (isPreviousElementTag) {\n                xmlStr += indentation;\n            }\n            xmlStr += tagText;\n            isPreviousElementTag = false;\n            continue;\n        } else if (tagName === options.cdataPropName) {\n            if (isPreviousElementTag) {\n                xmlStr += indentation;\n            }\n            xmlStr += `<![CDATA[${tagObj[tagName][0][options.textNodeName]}]]>`;\n            isPreviousElementTag = false;\n            continue;\n        } else if (tagName === options.commentPropName) {\n            xmlStr += indentation + `<!--${tagObj[tagName][0][options.textNodeName]}-->`;\n            isPreviousElementTag = true;\n            continue;\n        } else if (tagName[0] === \"?\") {\n            const attStr = attr_to_str(tagObj[\":@\"], options);\n            const tempInd = tagName === \"?xml\" ? \"\" : indentation;\n            let piTextNodeName = tagObj[tagName][0][options.textNodeName];\n            piTextNodeName = piTextNodeName.length !== 0 ? \" \" + piTextNodeName : \"\"; //remove extra spacing\n            xmlStr += tempInd + `<${tagName}${piTextNodeName}${attStr}?>`;\n            isPreviousElementTag = true;\n            continue;\n        }\n        let newIdentation = indentation;\n        if (newIdentation !== \"\") {\n            newIdentation += options.indentBy;\n        }\n        const attStr = attr_to_str(tagObj[\":@\"], options);\n        const tagStart = indentation + `<${tagName}${attStr}`;\n        const tagValue = arrToStr(tagObj[tagName], options, newJPath, newIdentation);\n        if (options.unpairedTags.indexOf(tagName) !== -1) {\n            if (options.suppressUnpairedNode) xmlStr += tagStart + \">\";\n            else xmlStr += tagStart + \"/>\";\n        } else if ((!tagValue || tagValue.length === 0) && options.suppressEmptyNode) {\n            xmlStr += tagStart + \"/>\";\n        } else if (tagValue && tagValue.endsWith(\">\")) {\n            xmlStr += tagStart + `>${tagValue}${indentation}</${tagName}>`;\n        } else {\n            xmlStr += tagStart + \">\";\n            if (tagValue && indentation !== \"\" && (tagValue.includes(\"/>\") || tagValue.includes(\"</\"))) {\n                xmlStr += indentation + options.indentBy + tagValue + indentation;\n            } else {\n                xmlStr += tagValue;\n            }\n            xmlStr += `</${tagName}>`;\n        }\n        isPreviousElementTag = true;\n    }\n\n    return xmlStr;\n}\n\nfunction propName(obj) {\n    const keys = Object.keys(obj);\n    for (let i = 0; i < keys.length; i++) {\n        const key = keys[i];\n        if(!obj.hasOwnProperty(key)) continue;\n        if (key !== \":@\") return key;\n    }\n}\n\nfunction attr_to_str(attrMap, options) {\n    let attrStr = \"\";\n    if (attrMap && !options.ignoreAttributes) {\n        for (let attr in attrMap) {\n            if(!attrMap.hasOwnProperty(attr)) continue;\n            let attrVal = options.attributeValueProcessor(attr, attrMap[attr]);\n            attrVal = replaceEntitiesValue(attrVal, options);\n            if (attrVal === true && options.suppressBooleanAttributes) {\n                attrStr += ` ${attr.substr(options.attributeNamePrefix.length)}`;\n            } else {\n                attrStr += ` ${attr.substr(options.attributeNamePrefix.length)}=\"${attrVal}\"`;\n            }\n        }\n    }\n    return attrStr;\n}\n\nfunction isStopNode(jPath, options) {\n    jPath = jPath.substr(0, jPath.length - options.textNodeName.length - 1);\n    let tagName = jPath.substr(jPath.lastIndexOf(\".\") + 1);\n    for (let index in options.stopNodes) {\n        if (options.stopNodes[index] === jPath || options.stopNodes[index] === \"*.\" + tagName) return true;\n    }\n    return false;\n}\n\nfunction replaceEntitiesValue(textValue, options) {\n    if (textValue && textValue.length > 0 && options.processEntities) {\n        for (let i = 0; i < options.entities.length; i++) {\n            const entity = options.entities[i];\n            textValue = textValue.replace(entity.regex, entity.val);\n        }\n    }\n    return textValue;\n}\nmodule.exports = toXml;\n","'use strict';\n//parse Empty Node as self closing node\nconst buildFromOrderedJs = require('./orderedJs2Xml');\nconst getIgnoreAttributesFn = require('../ignoreAttributes')\n\nconst defaultOptions = {\n  attributeNamePrefix: '@_',\n  attributesGroupName: false,\n  textNodeName: '#text',\n  ignoreAttributes: true,\n  cdataPropName: false,\n  format: false,\n  indentBy: '  ',\n  suppressEmptyNode: false,\n  suppressUnpairedNode: true,\n  suppressBooleanAttributes: true,\n  tagValueProcessor: function(key, a) {\n    return a;\n  },\n  attributeValueProcessor: function(attrName, a) {\n    return a;\n  },\n  preserveOrder: false,\n  commentPropName: false,\n  unpairedTags: [],\n  entities: [\n    { regex: new RegExp(\"&\", \"g\"), val: \"&amp;\" },//it must be on top\n    { regex: new RegExp(\">\", \"g\"), val: \"&gt;\" },\n    { regex: new RegExp(\"<\", \"g\"), val: \"&lt;\" },\n    { regex: new RegExp(\"\\'\", \"g\"), val: \"&apos;\" },\n    { regex: new RegExp(\"\\\"\", \"g\"), val: \"&quot;\" }\n  ],\n  processEntities: true,\n  stopNodes: [],\n  // transformTagName: false,\n  // transformAttributeName: false,\n  oneListGroup: false\n};\n\nfunction Builder(options) {\n  this.options = Object.assign({}, defaultOptions, options);\n  if (this.options.ignoreAttributes === true || this.options.attributesGroupName) {\n    this.isAttribute = function(/*a*/) {\n      return false;\n    };\n  } else {\n    this.ignoreAttributesFn = getIgnoreAttributesFn(this.options.ignoreAttributes)\n    this.attrPrefixLen = this.options.attributeNamePrefix.length;\n    this.isAttribute = isAttribute;\n  }\n\n  this.processTextOrObjNode = processTextOrObjNode\n\n  if (this.options.format) {\n    this.indentate = indentate;\n    this.tagEndChar = '>\\n';\n    this.newLine = '\\n';\n  } else {\n    this.indentate = function() {\n      return '';\n    };\n    this.tagEndChar = '>';\n    this.newLine = '';\n  }\n}\n\nBuilder.prototype.build = function(jObj) {\n  if(this.options.preserveOrder){\n    return buildFromOrderedJs(jObj, this.options);\n  }else {\n    if(Array.isArray(jObj) && this.options.arrayNodeName && this.options.arrayNodeName.length > 1){\n      jObj = {\n        [this.options.arrayNodeName] : jObj\n      }\n    }\n    return this.j2x(jObj, 0, []).val;\n  }\n};\n\nBuilder.prototype.j2x = function(jObj, level, ajPath) {\n  let attrStr = '';\n  let val = '';\n  const jPath = ajPath.join('.')\n  for (let key in jObj) {\n    if(!Object.prototype.hasOwnProperty.call(jObj, key)) continue;\n    if (typeof jObj[key] === 'undefined') {\n      // supress undefined node only if it is not an attribute\n      if (this.isAttribute(key)) {\n        val += '';\n      }\n    } else if (jObj[key] === null) {\n      // null attribute should be ignored by the attribute list, but should not cause the tag closing\n      if (this.isAttribute(key)) {\n        val += '';\n      } else if (key[0] === '?') {\n        val += this.indentate(level) + '<' + key + '?' + this.tagEndChar;\n      } else {\n        val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;\n      }\n      // val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;\n    } else if (jObj[key] instanceof Date) {\n      val += this.buildTextValNode(jObj[key], key, '', level);\n    } else if (typeof jObj[key] !== 'object') {\n      //premitive type\n      const attr = this.isAttribute(key);\n      if (attr && !this.ignoreAttributesFn(attr, jPath)) {\n        attrStr += this.buildAttrPairStr(attr, '' + jObj[key]);\n      } else if (!attr) {\n        //tag value\n        if (key === this.options.textNodeName) {\n          let newval = this.options.tagValueProcessor(key, '' + jObj[key]);\n          val += this.replaceEntitiesValue(newval);\n        } else {\n          val += this.buildTextValNode(jObj[key], key, '', level);\n        }\n      }\n    } else if (Array.isArray(jObj[key])) {\n      //repeated nodes\n      const arrLen = jObj[key].length;\n      let listTagVal = \"\";\n      let listTagAttr = \"\";\n      for (let j = 0; j < arrLen; j++) {\n        const item = jObj[key][j];\n        if (typeof item === 'undefined') {\n          // supress undefined node\n        } else if (item === null) {\n          if(key[0] === \"?\") val += this.indentate(level) + '<' + key + '?' + this.tagEndChar;\n          else val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;\n          // val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;\n        } else if (typeof item === 'object') {\n          if(this.options.oneListGroup){\n            const result = this.j2x(item, level + 1, ajPath.concat(key));\n            listTagVal += result.val;\n            if (this.options.attributesGroupName && item.hasOwnProperty(this.options.attributesGroupName)) {\n              listTagAttr += result.attrStr\n            }\n          }else{\n            listTagVal += this.processTextOrObjNode(item, key, level, ajPath)\n          }\n        } else {\n          if (this.options.oneListGroup) {\n            let textValue = this.options.tagValueProcessor(key, item);\n            textValue = this.replaceEntitiesValue(textValue);\n            listTagVal += textValue;\n          } else {\n            listTagVal += this.buildTextValNode(item, key, '', level);\n          }\n        }\n      }\n      if(this.options.oneListGroup){\n        listTagVal = this.buildObjectNode(listTagVal, key, listTagAttr, level);\n      }\n      val += listTagVal;\n    } else {\n      //nested node\n      if (this.options.attributesGroupName && key === this.options.attributesGroupName) {\n        const Ks = Object.keys(jObj[key]);\n        const L = Ks.length;\n        for (let j = 0; j < L; j++) {\n          attrStr += this.buildAttrPairStr(Ks[j], '' + jObj[key][Ks[j]]);\n        }\n      } else {\n        val += this.processTextOrObjNode(jObj[key], key, level, ajPath)\n      }\n    }\n  }\n  return {attrStr: attrStr, val: val};\n};\n\nBuilder.prototype.buildAttrPairStr = function(attrName, val){\n  val = this.options.attributeValueProcessor(attrName, '' + val);\n  val = this.replaceEntitiesValue(val);\n  if (this.options.suppressBooleanAttributes && val === \"true\") {\n    return ' ' + attrName;\n  } else return ' ' + attrName + '=\"' + val + '\"';\n}\n\nfunction processTextOrObjNode (object, key, level, ajPath) {\n  const result = this.j2x(object, level + 1, ajPath.concat(key));\n  if (object[this.options.textNodeName] !== undefined && Object.keys(object).length === 1) {\n    return this.buildTextValNode(object[this.options.textNodeName], key, result.attrStr, level);\n  } else {\n    return this.buildObjectNode(result.val, key, result.attrStr, level);\n  }\n}\n\nBuilder.prototype.buildObjectNode = function(val, key, attrStr, level) {\n  if(val === \"\"){\n    if(key[0] === \"?\") return  this.indentate(level) + '<' + key + attrStr+ '?' + this.tagEndChar;\n    else {\n      return this.indentate(level) + '<' + key + attrStr + this.closeTag(key) + this.tagEndChar;\n    }\n  }else{\n\n    let tagEndExp = '</' + key + this.tagEndChar;\n    let piClosingChar = \"\";\n    \n    if(key[0] === \"?\") {\n      piClosingChar = \"?\";\n      tagEndExp = \"\";\n    }\n  \n    // attrStr is an empty string in case the attribute came as undefined or null\n    if ((attrStr || attrStr === '') && val.indexOf('<') === -1) {\n      return ( this.indentate(level) + '<' +  key + attrStr + piClosingChar + '>' + val + tagEndExp );\n    } else if (this.options.commentPropName !== false && key === this.options.commentPropName && piClosingChar.length === 0) {\n      return this.indentate(level) + `<!--${val}-->` + this.newLine;\n    }else {\n      return (\n        this.indentate(level) + '<' + key + attrStr + piClosingChar + this.tagEndChar +\n        val +\n        this.indentate(level) + tagEndExp    );\n    }\n  }\n}\n\nBuilder.prototype.closeTag = function(key){\n  let closeTag = \"\";\n  if(this.options.unpairedTags.indexOf(key) !== -1){ //unpaired\n    if(!this.options.suppressUnpairedNode) closeTag = \"/\"\n  }else if(this.options.suppressEmptyNode){ //empty\n    closeTag = \"/\";\n  }else{\n    closeTag = `></${key}`\n  }\n  return closeTag;\n}\n\nfunction buildEmptyObjNode(val, key, attrStr, level) {\n  if (val !== '') {\n    return this.buildObjectNode(val, key, attrStr, level);\n  } else {\n    if(key[0] === \"?\") return  this.indentate(level) + '<' + key + attrStr+ '?' + this.tagEndChar;\n    else {\n      return  this.indentate(level) + '<' + key + attrStr + '/' + this.tagEndChar;\n      // return this.buildTagStr(level,key, attrStr);\n    }\n  }\n}\n\nBuilder.prototype.buildTextValNode = function(val, key, attrStr, level) {\n  if (this.options.cdataPropName !== false && key === this.options.cdataPropName) {\n    return this.indentate(level) + `<![CDATA[${val}]]>` +  this.newLine;\n  }else if (this.options.commentPropName !== false && key === this.options.commentPropName) {\n    return this.indentate(level) + `<!--${val}-->` +  this.newLine;\n  }else if(key[0] === \"?\") {//PI tag\n    return  this.indentate(level) + '<' + key + attrStr+ '?' + this.tagEndChar; \n  }else{\n    let textValue = this.options.tagValueProcessor(key, val);\n    textValue = this.replaceEntitiesValue(textValue);\n  \n    if( textValue === ''){\n      return this.indentate(level) + '<' + key + attrStr + this.closeTag(key) + this.tagEndChar;\n    }else{\n      return this.indentate(level) + '<' + key + attrStr + '>' +\n         textValue +\n        '</' + key + this.tagEndChar;\n    }\n  }\n}\n\nBuilder.prototype.replaceEntitiesValue = function(textValue){\n  if(textValue && textValue.length > 0 && this.options.processEntities){\n    for (let i=0; i<this.options.entities.length; i++) {\n      const entity = this.options.entities[i];\n      textValue = textValue.replace(entity.regex, entity.val);\n    }\n  }\n  return textValue;\n}\n\nfunction indentate(level) {\n  return this.options.indentBy.repeat(level);\n}\n\nfunction isAttribute(name /*, options*/) {\n  if (name.startsWith(this.options.attributeNamePrefix) && name !== this.options.textNodeName) {\n    return name.substr(this.attrPrefixLen);\n  } else {\n    return false;\n  }\n}\n\nmodule.exports = Builder;\n","'use strict';\n\nconst validator = require('./validator');\nconst XMLParser = require('./xmlparser/XMLParser');\nconst XMLBuilder = require('./xmlbuilder/json2xml');\n\nmodule.exports = {\n  XMLParser: XMLParser,\n  XMLValidator: validator,\n  XMLBuilder: XMLBuilder\n}","import {XMLParser, XMLValidator} from 'fast-xml-parser';\n\nexport default function isSvg(string) {\n\tif (typeof string !== 'string') {\n\t\tthrow new TypeError(`Expected a \\`string\\`, got \\`${typeof string}\\``);\n\t}\n\n\tstring = string.trim();\n\n\tif (string.length === 0) {\n\t\treturn false;\n\t}\n\n\t// Has to be `!==` as it can also return an object with error info.\n\tif (XMLValidator.validate(string) !== true) {\n\t\treturn false;\n\t}\n\n\tlet jsonObject;\n\tconst parser = new XMLParser();\n\n\ttry {\n\t\tjsonObject = parser.parse(string);\n\t} catch {\n\t\treturn false;\n\t}\n\n\tif (!jsonObject) {\n\t\treturn false;\n\t}\n\n\tif (!Object.keys(jsonObject).some(x => x.toLowerCase() === 'svg')) {\n\t\treturn false;\n\t}\n\n\treturn true;\n}\n","/**\n * SPDX-FileCopyrightText: 2022 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\nimport type { Folder } from '../files/folder'\nimport type { Node } from '../files/node'\nimport isSvg from 'is-svg'\n\nimport { Column } from './column.js'\n\nexport type ContentsWithRoot = {\n\tfolder: Folder,\n\tcontents: Node[]\n}\n\ninterface ViewData {\n\t/** Unique view ID */\n\tid: string\n\t/** Translated view name */\n\tname: string\n\t/** Translated accessible description of the view */\n\tcaption?: string\n\n\t/** Translated title of the empty view */\n\temptyTitle?: string\n\t/** Translated description of the empty view */\n\temptyCaption?: string\n\n\t/**\n\t * Method return the content of the  provided path\n\t * This ideally should be a cancellable promise.\n\t * promise.cancel(reason) will be called when the directory\n\t * change and the promise is not resolved yet.\n\t * You _must_ also return the current directory\n\t * information alongside with its content.\n\t */\n\tgetContents: (path: string) => Promise<ContentsWithRoot>\n\t/** The view icon as an inline svg */\n\ticon: string\n\n\t/**\n\t * The view order.\n\t * If not set will be natural sorted by view name.\n\t */\n\torder?: number\n\n\t/**\n\t * Custom params to give to the router on click\n\t * If defined, will be treated as a dummy view and\n\t * will just redirect and not fetch any contents.\n\t */\n\tparams?: Record<string, string>\n\n\t/**\n\t * This view column(s). Name and actions are\n\t * by default always included\n\t */\n\tcolumns?: Column[]\n\t/** The empty view element to render your empty content into */\n\temptyView?: (div: HTMLDivElement) => void\n\t/** The parent unique ID */\n\tparent?: string\n\t/** This view is sticky (sent at the bottom) */\n\tsticky?: boolean\n\n\t/**\n\t * This view has children and is expanded (by default)\n\t * or not. This will be overridden by user config.\n\t */\n\texpanded?: boolean\n\n\t/**\n\t * Will be used as default if the user\n\t * haven't customized their sorting column\n\t */\n\tdefaultSortKey?: string\n\n\t/**\n\t * Method called to load child views if any\n\t */\n\t// eslint-disable-next-line no-use-before-define\n\tloadChildViews?: (view: View) => Promise<void>\n}\n\nexport class View implements ViewData {\n\n\tprivate _view: ViewData\n\n\tconstructor(view: ViewData) {\n\t\tisValidView(view)\n\t\tthis._view = view\n\t}\n\n\tget id() {\n\t\treturn this._view.id\n\t}\n\n\tget name() {\n\t\treturn this._view.name\n\t}\n\n\tget caption() {\n\t\treturn this._view.caption\n\t}\n\n\tget emptyTitle() {\n\t\treturn this._view.emptyTitle\n\t}\n\n\tget emptyCaption() {\n\t\treturn this._view.emptyCaption\n\t}\n\n\tget getContents() {\n\t\treturn this._view.getContents\n\t}\n\n\tget icon() {\n\t\treturn this._view.icon\n\t}\n\n\tset icon(icon) {\n\t\tthis._view.icon = icon\n\t}\n\n\tget order() {\n\t\treturn this._view.order\n\t}\n\n\tset order(order) {\n\t\tthis._view.order = order\n\t}\n\n\tget params() {\n\t\treturn this._view.params\n\t}\n\n\tset params(params) {\n\t\tthis._view.params = params\n\t}\n\n\tget columns() {\n\t\treturn this._view.columns\n\t}\n\n\tget emptyView() {\n\t\treturn this._view.emptyView\n\t}\n\n\tget parent() {\n\t\treturn this._view.parent\n\t}\n\n\tget sticky() {\n\t\treturn this._view.sticky\n\t}\n\n\tget expanded() {\n\t\treturn this._view.expanded\n\t}\n\n\tset expanded(expanded: boolean | undefined) {\n\t\tthis._view.expanded = expanded\n\t}\n\n\tget defaultSortKey() {\n\t\treturn this._view.defaultSortKey\n\t}\n\n\tget loadChildViews() {\n\t\treturn this._view.loadChildViews\n\t}\n\n}\n\n/**\n * Typescript cannot validate an interface.\n * Please keep in sync with the View interface requirements.\n *\n * @param {ViewData} view the view to check\n * @return {boolean} true if the column is valid\n * @throws {Error} if the view is not valid\n */\nconst isValidView = function(view: ViewData): boolean {\n\tif (!view.id || typeof view.id !== 'string') {\n\t\tthrow new Error('View id is required and must be a string')\n\t}\n\n\tif (!view.name || typeof view.name !== 'string') {\n\t\tthrow new Error('View name is required and must be a string')\n\t}\n\n\tif (view.columns && view.columns.length > 0\n\t\t&& (!view.caption || typeof view.caption !== 'string')) {\n\t\tthrow new Error('View caption is required for top-level views and must be a string')\n\t}\n\n\tif (!view.getContents || typeof view.getContents !== 'function') {\n\t\tthrow new Error('View getContents is required and must be a function')\n\t}\n\n\tif (!view.icon || typeof view.icon !== 'string' || !isSvg(view.icon)) {\n\t\tthrow new Error('View icon is required and must be a valid svg string')\n\t}\n\n\tif ('order' in view && typeof view.order !== 'number') {\n\t\tthrow new Error('View order must be a number')\n\t}\n\n\t// Optional properties\n\tif (view.columns) {\n\t\tview.columns.forEach((column) => {\n\t\t\tif (!(column instanceof Column)) {\n\t\t\t\tthrow new Error('View columns must be an array of Column. Invalid column found')\n\t\t\t}\n\t\t})\n\t}\n\n\tif (view.emptyView && typeof view.emptyView !== 'function') {\n\t\tthrow new Error('View emptyView must be a function')\n\t}\n\n\tif (view.parent && typeof view.parent !== 'string') {\n\t\tthrow new Error('View parent must be a string')\n\t}\n\n\tif ('sticky' in view && typeof view.sticky !== 'boolean') {\n\t\tthrow new Error('View sticky must be a boolean')\n\t}\n\n\tif ('expanded' in view && typeof view.expanded !== 'boolean') {\n\t\tthrow new Error('View expanded must be a boolean')\n\t}\n\n\tif (view.defaultSortKey && typeof view.defaultSortKey !== 'string') {\n\t\tthrow new Error('View defaultSortKey must be a string')\n\t}\n\n\tif (view.loadChildViews && typeof view.loadChildViews !== 'function') {\n\t\tthrow new Error('View loadChildViews must be a function')\n\t}\n\n\treturn true\n}\n","const debug = (\n  typeof process === 'object' &&\n  process.env &&\n  process.env.NODE_DEBUG &&\n  /\\bsemver\\b/i.test(process.env.NODE_DEBUG)\n) ? (...args) => console.error('SEMVER', ...args)\n  : () => {}\n\nmodule.exports = debug\n","// Note: this is the semver.org version of the spec that it implements\n// Not necessarily the package version of this code.\nconst SEMVER_SPEC_VERSION = '2.0.0'\n\nconst MAX_LENGTH = 256\nconst MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER ||\n/* istanbul ignore next */ 9007199254740991\n\n// Max safe segment length for coercion.\nconst MAX_SAFE_COMPONENT_LENGTH = 16\n\n// Max safe length for a build identifier. The max length minus 6 characters for\n// the shortest version with a build 0.0.0+BUILD.\nconst MAX_SAFE_BUILD_LENGTH = MAX_LENGTH - 6\n\nconst RELEASE_TYPES = [\n  'major',\n  'premajor',\n  'minor',\n  'preminor',\n  'patch',\n  'prepatch',\n  'prerelease',\n]\n\nmodule.exports = {\n  MAX_LENGTH,\n  MAX_SAFE_COMPONENT_LENGTH,\n  MAX_SAFE_BUILD_LENGTH,\n  MAX_SAFE_INTEGER,\n  RELEASE_TYPES,\n  SEMVER_SPEC_VERSION,\n  FLAG_INCLUDE_PRERELEASE: 0b001,\n  FLAG_LOOSE: 0b010,\n}\n","const {\n  MAX_SAFE_COMPONENT_LENGTH,\n  MAX_SAFE_BUILD_LENGTH,\n  MAX_LENGTH,\n} = require('./constants')\nconst debug = require('./debug')\nexports = module.exports = {}\n\n// The actual regexps go on exports.re\nconst re = exports.re = []\nconst safeRe = exports.safeRe = []\nconst src = exports.src = []\nconst t = exports.t = {}\nlet R = 0\n\nconst LETTERDASHNUMBER = '[a-zA-Z0-9-]'\n\n// Replace some greedy regex tokens to prevent regex dos issues. These regex are\n// used internally via the safeRe object since all inputs in this library get\n// normalized first to trim and collapse all extra whitespace. The original\n// regexes are exported for userland consumption and lower level usage. A\n// future breaking change could export the safer regex only with a note that\n// all input should have extra whitespace removed.\nconst safeRegexReplacements = [\n  ['\\\\s', 1],\n  ['\\\\d', MAX_LENGTH],\n  [LETTERDASHNUMBER, MAX_SAFE_BUILD_LENGTH],\n]\n\nconst makeSafeRegex = (value) => {\n  for (const [token, max] of safeRegexReplacements) {\n    value = value\n      .split(`${token}*`).join(`${token}{0,${max}}`)\n      .split(`${token}+`).join(`${token}{1,${max}}`)\n  }\n  return value\n}\n\nconst createToken = (name, value, isGlobal) => {\n  const safe = makeSafeRegex(value)\n  const index = R++\n  debug(name, index, value)\n  t[name] = index\n  src[index] = value\n  re[index] = new RegExp(value, isGlobal ? 'g' : undefined)\n  safeRe[index] = new RegExp(safe, isGlobal ? 'g' : undefined)\n}\n\n// The following Regular Expressions can be used for tokenizing,\n// validating, and parsing SemVer version strings.\n\n// ## Numeric Identifier\n// A single `0`, or a non-zero digit followed by zero or more digits.\n\ncreateToken('NUMERICIDENTIFIER', '0|[1-9]\\\\d*')\ncreateToken('NUMERICIDENTIFIERLOOSE', '\\\\d+')\n\n// ## Non-numeric Identifier\n// Zero or more digits, followed by a letter or hyphen, and then zero or\n// more letters, digits, or hyphens.\n\ncreateToken('NONNUMERICIDENTIFIER', `\\\\d*[a-zA-Z-]${LETTERDASHNUMBER}*`)\n\n// ## Main Version\n// Three dot-separated numeric identifiers.\n\ncreateToken('MAINVERSION', `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})`)\n\ncreateToken('MAINVERSIONLOOSE', `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})`)\n\n// ## Pre-release Version Identifier\n// A numeric identifier, or a non-numeric identifier.\n\ncreateToken('PRERELEASEIDENTIFIER', `(?:${src[t.NUMERICIDENTIFIER]\n}|${src[t.NONNUMERICIDENTIFIER]})`)\n\ncreateToken('PRERELEASEIDENTIFIERLOOSE', `(?:${src[t.NUMERICIDENTIFIERLOOSE]\n}|${src[t.NONNUMERICIDENTIFIER]})`)\n\n// ## Pre-release Version\n// Hyphen, followed by one or more dot-separated pre-release version\n// identifiers.\n\ncreateToken('PRERELEASE', `(?:-(${src[t.PRERELEASEIDENTIFIER]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIER]})*))`)\n\ncreateToken('PRERELEASELOOSE', `(?:-?(${src[t.PRERELEASEIDENTIFIERLOOSE]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIERLOOSE]})*))`)\n\n// ## Build Metadata Identifier\n// Any combination of digits, letters, or hyphens.\n\ncreateToken('BUILDIDENTIFIER', `${LETTERDASHNUMBER}+`)\n\n// ## Build Metadata\n// Plus sign, followed by one or more period-separated build metadata\n// identifiers.\n\ncreateToken('BUILD', `(?:\\\\+(${src[t.BUILDIDENTIFIER]\n}(?:\\\\.${src[t.BUILDIDENTIFIER]})*))`)\n\n// ## Full Version String\n// A main version, followed optionally by a pre-release version and\n// build metadata.\n\n// Note that the only major, minor, patch, and pre-release sections of\n// the version string are capturing groups.  The build metadata is not a\n// capturing group, because it should not ever be used in version\n// comparison.\n\ncreateToken('FULLPLAIN', `v?${src[t.MAINVERSION]\n}${src[t.PRERELEASE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('FULL', `^${src[t.FULLPLAIN]}$`)\n\n// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n// common in the npm registry.\ncreateToken('LOOSEPLAIN', `[v=\\\\s]*${src[t.MAINVERSIONLOOSE]\n}${src[t.PRERELEASELOOSE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('LOOSE', `^${src[t.LOOSEPLAIN]}$`)\n\ncreateToken('GTLT', '((?:<|>)?=?)')\n\n// Something like \"2.*\" or \"1.2.x\".\n// Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\n// Only the first item is strictly required.\ncreateToken('XRANGEIDENTIFIERLOOSE', `${src[t.NUMERICIDENTIFIERLOOSE]}|x|X|\\\\*`)\ncreateToken('XRANGEIDENTIFIER', `${src[t.NUMERICIDENTIFIER]}|x|X|\\\\*`)\n\ncreateToken('XRANGEPLAIN', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:${src[t.PRERELEASE]})?${\n                     src[t.BUILD]}?` +\n                   `)?)?`)\n\ncreateToken('XRANGEPLAINLOOSE', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:${src[t.PRERELEASELOOSE]})?${\n                          src[t.BUILD]}?` +\n                        `)?)?`)\n\ncreateToken('XRANGE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAIN]}$`)\ncreateToken('XRANGELOOSE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Coercion.\n// Extract anything that could conceivably be a part of a valid semver\ncreateToken('COERCEPLAIN', `${'(^|[^\\\\d])' +\n              '(\\\\d{1,'}${MAX_SAFE_COMPONENT_LENGTH}})` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?`)\ncreateToken('COERCE', `${src[t.COERCEPLAIN]}(?:$|[^\\\\d])`)\ncreateToken('COERCEFULL', src[t.COERCEPLAIN] +\n              `(?:${src[t.PRERELEASE]})?` +\n              `(?:${src[t.BUILD]})?` +\n              `(?:$|[^\\\\d])`)\ncreateToken('COERCERTL', src[t.COERCE], true)\ncreateToken('COERCERTLFULL', src[t.COERCEFULL], true)\n\n// Tilde ranges.\n// Meaning is \"reasonably at or greater than\"\ncreateToken('LONETILDE', '(?:~>?)')\n\ncreateToken('TILDETRIM', `(\\\\s*)${src[t.LONETILDE]}\\\\s+`, true)\nexports.tildeTrimReplace = '$1~'\n\ncreateToken('TILDE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('TILDELOOSE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Caret ranges.\n// Meaning is \"at least and backwards compatible with\"\ncreateToken('LONECARET', '(?:\\\\^)')\n\ncreateToken('CARETTRIM', `(\\\\s*)${src[t.LONECARET]}\\\\s+`, true)\nexports.caretTrimReplace = '$1^'\n\ncreateToken('CARET', `^${src[t.LONECARET]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('CARETLOOSE', `^${src[t.LONECARET]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\ncreateToken('COMPARATORLOOSE', `^${src[t.GTLT]}\\\\s*(${src[t.LOOSEPLAIN]})$|^$`)\ncreateToken('COMPARATOR', `^${src[t.GTLT]}\\\\s*(${src[t.FULLPLAIN]})$|^$`)\n\n// An expression to strip any whitespace between the gtlt and the thing\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\ncreateToken('COMPARATORTRIM', `(\\\\s*)${src[t.GTLT]\n}\\\\s*(${src[t.LOOSEPLAIN]}|${src[t.XRANGEPLAIN]})`, true)\nexports.comparatorTrimReplace = '$1$2$3'\n\n// Something like `1.2.3 - 1.2.4`\n// Note that these all use the loose form, because they'll be\n// checked against either the strict or loose comparator form\n// later.\ncreateToken('HYPHENRANGE', `^\\\\s*(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s+-\\\\s+` +\n                   `(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s*$`)\n\ncreateToken('HYPHENRANGELOOSE', `^\\\\s*(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s+-\\\\s+` +\n                        `(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s*$`)\n\n// Star ranges basically just allow anything at all.\ncreateToken('STAR', '(<|>)?=?\\\\s*\\\\*')\n// >=0.0.0 is like a star\ncreateToken('GTE0', '^\\\\s*>=\\\\s*0\\\\.0\\\\.0\\\\s*$')\ncreateToken('GTE0PRE', '^\\\\s*>=\\\\s*0\\\\.0\\\\.0-0\\\\s*$')\n","// parse out just the options we care about\nconst looseOption = Object.freeze({ loose: true })\nconst emptyOpts = Object.freeze({ })\nconst parseOptions = options => {\n  if (!options) {\n    return emptyOpts\n  }\n\n  if (typeof options !== 'object') {\n    return looseOption\n  }\n\n  return options\n}\nmodule.exports = parseOptions\n","const numeric = /^[0-9]+$/\nconst compareIdentifiers = (a, b) => {\n  const anum = numeric.test(a)\n  const bnum = numeric.test(b)\n\n  if (anum && bnum) {\n    a = +a\n    b = +b\n  }\n\n  return a === b ? 0\n    : (anum && !bnum) ? -1\n    : (bnum && !anum) ? 1\n    : a < b ? -1\n    : 1\n}\n\nconst rcompareIdentifiers = (a, b) => compareIdentifiers(b, a)\n\nmodule.exports = {\n  compareIdentifiers,\n  rcompareIdentifiers,\n}\n","const debug = require('../internal/debug')\nconst { MAX_LENGTH, MAX_SAFE_INTEGER } = require('../internal/constants')\nconst { safeRe: re, t } = require('../internal/re')\n\nconst parseOptions = require('../internal/parse-options')\nconst { compareIdentifiers } = require('../internal/identifiers')\nclass SemVer {\n  constructor (version, options) {\n    options = parseOptions(options)\n\n    if (version instanceof SemVer) {\n      if (version.loose === !!options.loose &&\n          version.includePrerelease === !!options.includePrerelease) {\n        return version\n      } else {\n        version = version.version\n      }\n    } else if (typeof version !== 'string') {\n      throw new TypeError(`Invalid version. Must be a string. Got type \"${typeof version}\".`)\n    }\n\n    if (version.length > MAX_LENGTH) {\n      throw new TypeError(\n        `version is longer than ${MAX_LENGTH} characters`\n      )\n    }\n\n    debug('SemVer', version, options)\n    this.options = options\n    this.loose = !!options.loose\n    // this isn't actually relevant for versions, but keep it so that we\n    // don't run into trouble passing this.options around.\n    this.includePrerelease = !!options.includePrerelease\n\n    const m = version.trim().match(options.loose ? re[t.LOOSE] : re[t.FULL])\n\n    if (!m) {\n      throw new TypeError(`Invalid Version: ${version}`)\n    }\n\n    this.raw = version\n\n    // these are actually numbers\n    this.major = +m[1]\n    this.minor = +m[2]\n    this.patch = +m[3]\n\n    if (this.major > MAX_SAFE_INTEGER || this.major < 0) {\n      throw new TypeError('Invalid major version')\n    }\n\n    if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) {\n      throw new TypeError('Invalid minor version')\n    }\n\n    if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) {\n      throw new TypeError('Invalid patch version')\n    }\n\n    // numberify any prerelease numeric ids\n    if (!m[4]) {\n      this.prerelease = []\n    } else {\n      this.prerelease = m[4].split('.').map((id) => {\n        if (/^[0-9]+$/.test(id)) {\n          const num = +id\n          if (num >= 0 && num < MAX_SAFE_INTEGER) {\n            return num\n          }\n        }\n        return id\n      })\n    }\n\n    this.build = m[5] ? m[5].split('.') : []\n    this.format()\n  }\n\n  format () {\n    this.version = `${this.major}.${this.minor}.${this.patch}`\n    if (this.prerelease.length) {\n      this.version += `-${this.prerelease.join('.')}`\n    }\n    return this.version\n  }\n\n  toString () {\n    return this.version\n  }\n\n  compare (other) {\n    debug('SemVer.compare', this.version, this.options, other)\n    if (!(other instanceof SemVer)) {\n      if (typeof other === 'string' && other === this.version) {\n        return 0\n      }\n      other = new SemVer(other, this.options)\n    }\n\n    if (other.version === this.version) {\n      return 0\n    }\n\n    return this.compareMain(other) || this.comparePre(other)\n  }\n\n  compareMain (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    return (\n      compareIdentifiers(this.major, other.major) ||\n      compareIdentifiers(this.minor, other.minor) ||\n      compareIdentifiers(this.patch, other.patch)\n    )\n  }\n\n  comparePre (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    // NOT having a prerelease is > having one\n    if (this.prerelease.length && !other.prerelease.length) {\n      return -1\n    } else if (!this.prerelease.length && other.prerelease.length) {\n      return 1\n    } else if (!this.prerelease.length && !other.prerelease.length) {\n      return 0\n    }\n\n    let i = 0\n    do {\n      const a = this.prerelease[i]\n      const b = other.prerelease[i]\n      debug('prerelease compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  compareBuild (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    let i = 0\n    do {\n      const a = this.build[i]\n      const b = other.build[i]\n      debug('build compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  // preminor will bump the version up to the next minor release, and immediately\n  // down to pre-release. premajor and prepatch work the same way.\n  inc (release, identifier, identifierBase) {\n    switch (release) {\n      case 'premajor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor = 0\n        this.major++\n        this.inc('pre', identifier, identifierBase)\n        break\n      case 'preminor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor++\n        this.inc('pre', identifier, identifierBase)\n        break\n      case 'prepatch':\n        // If this is already a prerelease, it will bump to the next version\n        // drop any prereleases that might already exist, since they are not\n        // relevant at this point.\n        this.prerelease.length = 0\n        this.inc('patch', identifier, identifierBase)\n        this.inc('pre', identifier, identifierBase)\n        break\n      // If the input is a non-prerelease version, this acts the same as\n      // prepatch.\n      case 'prerelease':\n        if (this.prerelease.length === 0) {\n          this.inc('patch', identifier, identifierBase)\n        }\n        this.inc('pre', identifier, identifierBase)\n        break\n\n      case 'major':\n        // If this is a pre-major version, bump up to the same major version.\n        // Otherwise increment major.\n        // 1.0.0-5 bumps to 1.0.0\n        // 1.1.0 bumps to 2.0.0\n        if (\n          this.minor !== 0 ||\n          this.patch !== 0 ||\n          this.prerelease.length === 0\n        ) {\n          this.major++\n        }\n        this.minor = 0\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'minor':\n        // If this is a pre-minor version, bump up to the same minor version.\n        // Otherwise increment minor.\n        // 1.2.0-5 bumps to 1.2.0\n        // 1.2.1 bumps to 1.3.0\n        if (this.patch !== 0 || this.prerelease.length === 0) {\n          this.minor++\n        }\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'patch':\n        // If this is not a pre-release version, it will increment the patch.\n        // If it is a pre-release it will bump up to the same patch version.\n        // 1.2.0-5 patches to 1.2.0\n        // 1.2.0 patches to 1.2.1\n        if (this.prerelease.length === 0) {\n          this.patch++\n        }\n        this.prerelease = []\n        break\n      // This probably shouldn't be used publicly.\n      // 1.0.0 'pre' would become 1.0.0-0 which is the wrong direction.\n      case 'pre': {\n        const base = Number(identifierBase) ? 1 : 0\n\n        if (!identifier && identifierBase === false) {\n          throw new Error('invalid increment argument: identifier is empty')\n        }\n\n        if (this.prerelease.length === 0) {\n          this.prerelease = [base]\n        } else {\n          let i = this.prerelease.length\n          while (--i >= 0) {\n            if (typeof this.prerelease[i] === 'number') {\n              this.prerelease[i]++\n              i = -2\n            }\n          }\n          if (i === -1) {\n            // didn't increment anything\n            if (identifier === this.prerelease.join('.') && identifierBase === false) {\n              throw new Error('invalid increment argument: identifier already exists')\n            }\n            this.prerelease.push(base)\n          }\n        }\n        if (identifier) {\n          // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\n          // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\n          let prerelease = [identifier, base]\n          if (identifierBase === false) {\n            prerelease = [identifier]\n          }\n          if (compareIdentifiers(this.prerelease[0], identifier) === 0) {\n            if (isNaN(this.prerelease[1])) {\n              this.prerelease = prerelease\n            }\n          } else {\n            this.prerelease = prerelease\n          }\n        }\n        break\n      }\n      default:\n        throw new Error(`invalid increment argument: ${release}`)\n    }\n    this.raw = this.format()\n    if (this.build.length) {\n      this.raw += `+${this.build.join('.')}`\n    }\n    return this\n  }\n}\n\nmodule.exports = SemVer\n","const SemVer = require('../classes/semver')\nconst parse = (version, options, throwErrors = false) => {\n  if (version instanceof SemVer) {\n    return version\n  }\n  try {\n    return new SemVer(version, options)\n  } catch (er) {\n    if (!throwErrors) {\n      return null\n    }\n    throw er\n  }\n}\n\nmodule.exports = parse\n","const parse = require('./parse')\nconst valid = (version, options) => {\n  const v = parse(version, options)\n  return v ? v.version : null\n}\nmodule.exports = valid\n","const SemVer = require('../classes/semver')\nconst major = (a, loose) => new SemVer(a, loose).major\nmodule.exports = major\n","import valid from \"semver/functions/valid.js\";\nimport major from \"semver/functions/major.js\";\nclass ProxyBus {\n  bus;\n  constructor(bus2) {\n    if (typeof bus2.getVersion !== \"function\" || !valid(bus2.getVersion())) {\n      console.warn(\"Proxying an event bus with an unknown or invalid version\");\n    } else if (major(bus2.getVersion()) !== major(this.getVersion())) {\n      console.warn(\n        \"Proxying an event bus of version \" + bus2.getVersion() + \" with \" + this.getVersion()\n      );\n    }\n    this.bus = bus2;\n  }\n  getVersion() {\n    return \"3.3.1\";\n  }\n  subscribe(name, handler) {\n    this.bus.subscribe(name, handler);\n  }\n  unsubscribe(name, handler) {\n    this.bus.unsubscribe(name, handler);\n  }\n  emit(name, event) {\n    this.bus.emit(name, event);\n  }\n}\nclass SimpleBus {\n  handlers = /* @__PURE__ */ new Map();\n  getVersion() {\n    return \"3.3.1\";\n  }\n  subscribe(name, handler) {\n    this.handlers.set(\n      name,\n      (this.handlers.get(name) || []).concat(\n        handler\n      )\n    );\n  }\n  unsubscribe(name, handler) {\n    this.handlers.set(\n      name,\n      (this.handlers.get(name) || []).filter((h) => h !== handler)\n    );\n  }\n  emit(name, event) {\n    (this.handlers.get(name) || []).forEach((h) => {\n      try {\n        h(event);\n      } catch (e) {\n        console.error(\"could not invoke event listener\", e);\n      }\n    });\n  }\n}\nlet bus = null;\nfunction getBus() {\n  if (bus !== null) {\n    return bus;\n  }\n  if (typeof window === \"undefined\") {\n    return new Proxy({}, {\n      get: () => {\n        return () => console.error(\n          \"Window not available, EventBus can not be established!\"\n        );\n      }\n    });\n  }\n  if (window.OC?._eventBus && typeof window._nc_event_bus === \"undefined\") {\n    console.warn(\n      \"found old event bus instance at OC._eventBus. Update your version!\"\n    );\n    window._nc_event_bus = window.OC._eventBus;\n  }\n  if (typeof window?._nc_event_bus !== \"undefined\") {\n    bus = new ProxyBus(window._nc_event_bus);\n  } else {\n    bus = window._nc_event_bus = new SimpleBus();\n  }\n  return bus;\n}\nfunction subscribe(name, handler) {\n  getBus().subscribe(name, handler);\n}\nfunction unsubscribe(name, handler) {\n  getBus().unsubscribe(name, handler);\n}\nfunction emit(name, event) {\n  getBus().emit(name, event);\n}\nexport {\n  ProxyBus,\n  SimpleBus,\n  emit,\n  subscribe,\n  unsubscribe\n};\n","/*!\n * SPDX-FileCopyrightText: 2023 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\nimport { emit } from '@nextcloud/event-bus'\nimport { TypedEventTarget } from 'typescript-event-target'\nimport { INode } from './files/node'\n\n/**\n * Active filters can provide one or more \"chips\" to show the currently active state.\n * Must at least provide a text representing the filters state and a callback to unset that state (disable this filter).\n */\nexport interface IFileListFilterChip {\n\t/**\n\t * Text of the chip\n\t */\n\ttext: string\n\t/**\n\t * Optional icon to be used on the chip (inline SVG as string)\n\t */\n\ticon?: string\n\t/**\n\t * Handler to be called on click\n\t */\n\tonclick: () => void\n}\n\n/**\n * This event is emitted when the the filter value changed and the file list needs to be updated\n */\nexport interface FilterUpdateEvent extends CustomEvent<never> {\n\ttype: 'update:filter'\n}\n\n/**\n * This event is emitted when the the filter value changed and the file list needs to be updated\n */\nexport interface FilterUpdateChipsEvent extends CustomEvent<IFileListFilterChip[]> {\n\ttype: 'update:chips'\n}\n\ninterface IFileListFilterEvents {\n\t[name: string]: CustomEvent,\n\t'update:filter': FilterUpdateEvent\n\t'update:chips' : FilterUpdateChipsEvent\n}\n\nexport interface IFileListFilter extends TypedEventTarget<IFileListFilterEvents> {\n\n\t/**\n\t * Unique ID of this filter\n\t */\n\treadonly id: string\n\n\t/**\n\t * Order of the filter\n\t *\n\t * Use a low number to make this filter ordered in front.\n\t */\n\treadonly order: number\n\n\t/**\n\t * If the filter needs a visual element for settings it can provide a function to mount it.\n\t */\n\treadonly mount?: (el: HTMLElement) => void\n\n\t/**\n\t * Filter function to decide if a node is shown\n\t * @return The nodes to be shown\n\t */\n\tfilter(node: INode[]): INode[]\n}\n\nexport class FileListFilter extends TypedEventTarget<IFileListFilterEvents> implements IFileListFilter {\n\n\tpublic id: string\n\n\tpublic order: number\n\n\tconstructor(id: string, order: number = 100) {\n\t\tsuper()\n\t\tthis.id = id\n\t\tthis.order = order\n\t}\n\n\tpublic filter(nodes: INode[]): INode[] {\n\t\tthrow new Error('Not implemented')\n\t\treturn nodes\n\t}\n\n\tprotected updateChips(chips: IFileListFilterChip[]) {\n\t\tthis.dispatchTypedEvent('update:chips', new CustomEvent('update:chips', { detail: chips }) as FilterUpdateChipsEvent)\n\t}\n\n\tprotected filterUpdated() {\n\t\tthis.dispatchTypedEvent('update:filter', new CustomEvent('update:filter') as FilterUpdateEvent)\n\t}\n\n}\n\n/**\n * Register a new filter on the file list\n *\n * This only must be called once to register the filter,\n * when the filter state changes you need to call `filterUpdated` on the filter instead.\n *\n * @param filter The filter to register on the file list\n */\nexport function registerFileListFilter(filter: IFileListFilter): void {\n\tif (!window._nc_filelist_filters) {\n\t\twindow._nc_filelist_filters = new Map<string, IFileListFilter>()\n\t}\n\tif (window._nc_filelist_filters.has(filter.id)) {\n\t\tthrow new Error(`File list filter \"${filter.id}\" already registered`)\n\t}\n\twindow._nc_filelist_filters.set(filter.id, filter)\n\temit('files:filter:added', filter)\n}\n\n/**\n * Remove a registered filter from the file list\n * @param filterId The unique ID of the filter to remove\n */\nexport function unregisterFileListFilter(filterId: string): void {\n\tif (window._nc_filelist_filters && window._nc_filelist_filters.has(filterId)) {\n\t\twindow._nc_filelist_filters.delete(filterId)\n\t\temit('files:filter:removed', filterId)\n\t}\n}\n\n/**\n * Get all registered file list filters\n */\nexport function getFileListFilters(): IFileListFilter[] {\n\tif (!window._nc_filelist_filters) {\n\t\treturn []\n\t}\n\treturn [...window._nc_filelist_filters.values()]\n}\n","/**\n * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\nimport { type Entry, getNewFileMenu } from './newFileMenu'\nimport { type Folder } from './files/folder'\n\nexport { FileAction, getFileActions, registerFileAction, DefaultType } from './fileAction'\nexport { Header, getFileListHeaders, registerFileListHeaders } from './fileListHeaders'\nexport { type Entry, NewMenuEntryCategory } from './newFileMenu'\nexport { Permission } from './permissions'\n\nexport * from './dav/davProperties'\nexport * from './dav/davPermissions'\nexport * from './dav/dav'\n\nexport { FileType } from './files/fileType'\nexport { File, type IFile } from './files/file'\nexport { Folder, type IFolder } from './files/folder'\nexport { Node, NodeStatus, type INode } from './files/node'\n\nexport * from './utils/filename-validation'\nexport { getUniqueName } from './utils/filename'\nexport { formatFileSize, parseFileSize } from './utils/fileSize'\nexport { orderBy, type SortingOrder } from './utils/sorting'\nexport { sortNodes, FilesSortingMode, type FilesSortingOptions } from './utils/fileSorting'\n\nexport * from './navigation/index'\nexport * from './fileListFilters'\n\n/**\n * Add a new menu entry to the upload manager menu\n *\n * @param entry The new file menu entry\n */\nexport const addNewFileMenuEntry = function(entry: Entry) {\n\tconst newFileMenu = getNewFileMenu()\n\treturn newFileMenu.registerEntry(entry)\n}\n\n/**\n * Remove a previously registered entry from the upload menu\n *\n * @param entry Entry to remove (or name of entry)\n */\nexport const removeNewFileMenuEntry = function(entry: Entry | string) {\n\tconst newFileMenu = getNewFileMenu()\n\treturn newFileMenu.unregisterEntry(entry)\n}\n\n/**\n * Get the list of registered entries from the upload menu\n *\n * @param {Folder} context the creation context. Usually the current folder FileInfo\n */\nexport const getNewFileMenuEntries = function(context?: Folder) {\n\tconst newFileMenu = getNewFileMenu()\n\treturn newFileMenu.getEntries(context).sort((a: Entry, b: Entry) => {\n\t\t// If defined and different, sort by order\n\t\tif (a.order !== undefined\n\t\t\t&& b.order !== undefined\n\t\t\t&& a.order !== b.order) {\n\t\t\treturn a.order - b.order\n\t\t}\n\t\t// else sort by display name\n\t\treturn a.displayName.localeCompare(b.displayName, undefined, { numeric: true, sensitivity: 'base' })\n\t})\n}\n"],"names":["getLoggerBuilder","NewMenuEntryCategory","DefaultType","Permission","getCurrentUser","FileType","join","NodeStatus","encodePath","basename","extname","dirname","isPublicShare","getSharingToken","generateRemoteUrl","createClient","onRequestTokenUpdate","getRequestToken","getPatcher","headers","path","CancelablePromise","InvalidFilenameErrorReason","capabilities","getCapabilities","getCanonicalLocale","identifiers","getLanguage","FilesSortingMode","TypedEventTarget","exports","util","require$$0","defaultOptions","validator","t","re","val","buildOptions","xmlNode","readDocType","entityName","toNumber","getIgnoreAttributesFn","ignoreAttributes","require$$1","require$$2","require$$3","require$$4","replaceEntitiesValue","result","OrderedObjParser","prettify","propName","XMLParser","attStr","XMLValidator","debug","MAX_LENGTH","MAX_SAFE_INTEGER","MAX_SAFE_COMPONENT_LENGTH","MAX_SAFE_BUILD_LENGTH","module","parseOptions","compareIdentifiers","SemVer","parse","valid","major"],"mappings":"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","x_google_ignoreList":[20,21,22,23,24,25,26,27,28,29,30,31,32,33,35,36,37,38,39,40,41,42,43,44]}