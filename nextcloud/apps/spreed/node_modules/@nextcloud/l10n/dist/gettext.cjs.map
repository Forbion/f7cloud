{"version":3,"file":"gettext.cjs","sources":["../lib/gettext.ts"],"sourcesContent":["/**\n * This module provides functionality to translate applications independent from Nextcloud\n *\n * @packageDocumentation\n * @module @nextcloud/l10n/gettext\n * @example\n * ```js\nimport { getGettextBuilder } from '@nextcloud/l10n/gettext'\nconst gt = getGettextBuilder()\n\t\t\t.detectLocale() // or use setLanguage()\n\t\t\t.addTranslation(/* ... *\\/)\n\t\t\t.build()\ngt.gettext('some string to translate')\n```\n */\nimport GetText from 'node-gettext'\n\nimport { getLanguage } from '.'\n\n/**\n * @notExported\n */\nclass GettextBuilder {\n\n\tprivate locale?: string\n\tprivate translations = {} as Record<string, unknown>\n\tprivate debug = false\n\n\tsetLanguage(language: string): GettextBuilder {\n\t\tthis.locale = language\n\t\treturn this\n\t}\n\n\t/** Try to detect locale from context with `en` as fallback value */\n\tdetectLocale(): GettextBuilder {\n\t\treturn this.setLanguage(getLanguage().replace('-', '_'))\n\t}\n\n\taddTranslation(language: string, data: unknown): GettextBuilder {\n\t\tthis.translations[language] = data\n\t\treturn this\n\t}\n\n\tenableDebugMode(): GettextBuilder {\n\t\tthis.debug = true\n\t\treturn this\n\t}\n\n\tbuild(): GettextWrapper {\n\t\treturn new GettextWrapper(this.locale || 'en', this.translations, this.debug)\n\t}\n\n}\n\n/**\n * @notExported\n */\nclass GettextWrapper {\n\n\tprivate gt: GetText\n\n\tconstructor(locale: string, data: Record<string|symbol|number, unknown>, debug: boolean) {\n\t\tthis.gt = new GetText({\n\t\t\tdebug,\n\t\t\tsourceLocale: 'en',\n\t\t})\n\n\t\tfor (const key in data) {\n\t\t\tthis.gt.addTranslations(key, 'messages', data[key] as object)\n\t\t}\n\n\t\tthis.gt.setLocale(locale)\n\t}\n\n\tprivate subtitudePlaceholders(translated: string, vars: Record<string, string | number>): string {\n\t\treturn translated.replace(/{([^{}]*)}/g, (a, b) => {\n\t\t\tconst r = vars[b]\n\t\t\tif (typeof r === 'string' || typeof r === 'number') {\n\t\t\t\treturn r.toString()\n\t\t\t} else {\n\t\t\t\treturn a\n\t\t\t}\n\t\t})\n\t}\n\n\t/**\n\t * Get translated string (singular form), optionally with placeholders\n\t *\n\t * @param original original string to translate\n\t * @param placeholders map of placeholder key to value\n\t */\n\tgettext(original: string, placeholders: Record<string, string | number> = {}): string {\n\t\treturn this.subtitudePlaceholders(\n\t\t\tthis.gt.gettext(original),\n\t\t\tplaceholders,\n\t\t)\n\t}\n\n\t/**\n\t * Get translated string with plural forms\n\t *\n\t * @param singular Singular text form\n\t * @param plural Plural text form to be used if `count` requires it\n\t * @param count The number to insert into the text\n\t * @param placeholders optional map of placeholder key to value\n\t */\n\tngettext(singular: string, plural: string, count: number, placeholders: Record<string, string | number> = {}): string {\n\t\treturn this.subtitudePlaceholders(\n\t\t\tthis.gt.ngettext(singular, plural, count).replace(/%n/g, count.toString()),\n\t\t\tplaceholders,\n\t\t)\n\t}\n\n}\n\n/**\n * Create a new GettextBuilder instance\n */\nexport function getGettextBuilder() {\n\treturn new GettextBuilder()\n}\n"],"names":["getLanguage","locale","GetText"],"mappings":";;;;;;;;;;;;;;;AAsBA,MAAM,eAAe;AAAA,EAArB,cAAA;AAES,kBAAA,MAAA,QAAA;AACR,kBAAA,MAAQ,gBAAe,CAAA,CAAC;AACxB,kBAAA,MAAQ,SAAQ,KAAA;AAAA,EAAA;AAAA,EAEhB,YAAY,UAAkC;AAC7C,SAAK,SAAS;AACP,WAAA;AAAA,EACR;AAAA;AAAA,EAGA,eAA+B;AAC9B,WAAO,KAAK,YAAYA,OAAA,YAAA,EAAc,QAAQ,KAAK,GAAG,CAAC;AAAA,EACxD;AAAA,EAEA,eAAe,UAAkB,MAA+B;AAC1D,SAAA,aAAa,QAAQ,IAAI;AACvB,WAAA;AAAA,EACR;AAAA,EAEA,kBAAkC;AACjC,SAAK,QAAQ;AACN,WAAA;AAAA,EACR;AAAA,EAEA,QAAwB;AAChB,WAAA,IAAI,eAAe,KAAK,UAAU,MAAM,KAAK,cAAc,KAAK,KAAK;AAAA,EAC7E;AAED;AAKA,MAAM,eAAe;AAAA,EAIpB,YAAYC,SAAgB,MAA6C,OAAgB;AAFjF,kBAAA,MAAA,IAAA;AAGF,SAAA,KAAK,IAAIC,yBAAQ;AAAA,MACrB;AAAA,MACA,cAAc;AAAA,IAAA,CACd;AAED,eAAW,OAAO,MAAM;AACvB,WAAK,GAAG,gBAAgB,KAAK,YAAY,KAAK,GAAG,CAAW;AAAA,IAC7D;AAEK,SAAA,GAAG,UAAUD,OAAM;AAAA,EACzB;AAAA,EAEQ,sBAAsB,YAAoB,MAA+C;AAChG,WAAO,WAAW,QAAQ,eAAe,CAAC,GAAG,MAAM;AAC5C,YAAA,IAAI,KAAK,CAAC;AAChB,UAAI,OAAO,MAAM,YAAY,OAAO,MAAM,UAAU;AACnD,eAAO,EAAE;MAAS,OACZ;AACC,eAAA;AAAA,MACR;AAAA,IAAA,CACA;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,QAAQ,UAAkB,eAAgD,IAAY;AACrF,WAAO,KAAK;AAAA,MACX,KAAK,GAAG,QAAQ,QAAQ;AAAA,MACxB;AAAA,IAAA;AAAA,EAEF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUA,SAAS,UAAkB,QAAgB,OAAe,eAAgD,CAAA,GAAY;AACrH,WAAO,KAAK;AAAA,MACX,KAAK,GAAG,SAAS,UAAU,QAAQ,KAAK,EAAE,QAAQ,OAAO,MAAM,SAAA,CAAU;AAAA,MACzE;AAAA,IAAA;AAAA,EAEF;AAED;AAKO,SAAS,oBAAoB;AACnC,SAAO,IAAI,eAAe;AAC3B;;"}