{"version":3,"file":"PublicAuthPrompt-P1AJteoi.cjs","sources":["../../lib/utils/guestNameValidity.ts","../../lib/components/PublicAuthPrompt.vue"],"sourcesContent":["/*!\n * SPDX-FileCopyrightText: 2024 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\nimport { InvalidFilenameError, InvalidFilenameErrorReason, validateFilename } from '@nextcloud/files'\nimport { t } from '../utils/l10n.ts'\n\n/**\n * Get the validity of a filename (empty if valid).\n * This can be used for `setCustomValidity` on input elements\n *\n * @param name The filename\n */\nexport function getGuestNameValidity(name: string): string {\n\tif (name.trim() === '') {\n\t\treturn t('Names must not be empty.')\n\t}\n\n\tif (name.startsWith('.')) {\n\t\treturn t('Names must not start with a dot.')\n\t}\n\n\ttry {\n\t\tvalidateFilename(name)\n\t\treturn ''\n\t} catch (error) {\n\t\tif (!(error instanceof InvalidFilenameError)) {\n\t\t\tthrow error\n\t\t}\n\n\t\tswitch (error.reason) {\n\t\t\tcase InvalidFilenameErrorReason.Character:\n\t\t\t\treturn t('\"{char}\" is not allowed inside a name.', { char: error.segment })\n\t\t\tcase InvalidFilenameErrorReason.ReservedName:\n\t\t\t\treturn t('\"{segment}\" is a reserved name and not allowed.', { segment: error.segment })\n\t\t\tcase InvalidFilenameErrorReason.Extension:\n\t\t\t\tif (error.segment.match(/\\.[a-z]/i)) {\n\t\t\t\t\treturn t('\"{extension}\" is not an allowed name.', { extension: error.segment })\n\t\t\t\t}\n\t\t\t\treturn t('Names must not end with \"{extension}\".', { extension: error.segment })\n\t\t\tdefault:\n\t\t\t\treturn t('Invalid name.')\n\t\t}\n\t}\n}\n","<!--\n  - SPDX-FileCopyrightText: 2024 Nextcloud GmbH and Nextcloud contributors\n  - SPDX-License-Identifier: AGPL-3.0-or-later\n-->\n\n<template>\n\t<NcDialog :buttons=\"dialogButtons\"\n\t\tclass=\"public-auth-prompt\"\n\t\tdata-cy-public-auth-prompt-dialog\n\t\tis-form\n\t\tno-close\n\t\t:name=\"title\"\n\t\t@submit=\"onSubmit\">\n\t\t<p v-if=\"text\" class=\"public-auth-prompt__text\">\n\t\t\t{{ text }}\n\t\t</p>\n\n\t\t<!-- Header -->\n\t\t<NcNoteCard class=\"public-auth-prompt__header\"\n\t\t\t:text=\"notice\"\n\t\t\ttype=\"info\" />\n\n\t\t<!-- Form -->\n\t\t<NcTextField ref=\"input\"\n\t\t\tclass=\"public-auth-prompt__input\"\n\t\t\tdata-cy-public-auth-prompt-dialog-name\n\t\t\t:label=\"t('Name')\"\n\t\t\t:placeholder=\"t('Enter your name')\"\n\t\t\t:required=\"!cancellable\"\n\t\t\tv-model=\"name\"\n\t\t\tminlength=\"2\"\n\t\t\tname=\"name\" />\n\t</NcDialog>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue'\nimport { getBuilder } from '@nextcloud/browser-storage'\nimport { setGuestNickname } from '@nextcloud/auth'\nimport { showError } from '@nextcloud/dialogs'\n\nimport NcDialog from '@nextcloud/vue/components/NcDialog'\nimport NcNoteCard from '@nextcloud/vue/components/NcNoteCard'\nimport NcTextField from '@nextcloud/vue/components/NcTextField'\n\nimport { t } from '../utils/l10n.ts'\nimport { getGuestNameValidity } from '../utils/guestNameValidity.ts'\n\nconst storage = getBuilder('public').build()\n\nexport default defineComponent({\n\tname: 'PublicAuthPrompt',\n\n\tcomponents: {\n\t\tNcDialog,\n\t\tNcNoteCard,\n\t\tNcTextField,\n\t},\n\n\tprops: {\n\t\t/**\n\t\t * Preselected nickname\n\t\t * @default '' No name preselected by default\n\t\t */\n\t\tnickname: {\n\t\t\ttype: String,\n\t\t\tdefault: '',\n\t\t},\n\n\t\t/**\n\t\t * Dialog title\n\t\t */\n\t\ttitle: {\n\t\t\ttype: String,\n\t\t\tdefault: t('Guest identification'),\n\t\t},\n\n\t\t/**\n\t\t * Dialog text under the dialog title\n\t\t * e.g 'Enter your name to access the file'\n\t\t * @default '' Not shown by default\n\t\t */\n\t\t text: {\n\t\t\ttype: String,\n\t\t\tdefault: '',\n\t\t},\n\n\t\t/**\n\t\t * Dialog notice\n\t\t * @default 'You are currently not identified.'\n\t\t */\n\t\tnotice: {\n\t\t\ttype: String,\n\t\t\tdefault: t('You are currently not identified.'),\n\t\t},\n\n\t\t/**\n\t\t * Dialog submit button label\n\t\t * @default 'Submit name'\n\t\t */\n\t\tsubmitLabel: {\n\t\t\ttype: String,\n\t\t\tdefault: t('Submit name'),\n\t\t},\n\n\t\t/**\n\t\t * Whether the dialog is cancellable\n\t\t * @default false\n\t\t */\n\t\tcancellable: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: false,\n\t\t},\n\t},\n\n\tsetup() {\n\t\treturn {\n\t\t\tt,\n\t\t}\n\t},\n\n\temits: ['close'],\n\n\tdata() {\n\t\treturn {\n\t\t\tname: '',\n\t\t}\n\t},\n\n\tcomputed: {\n\t\tdialogButtons() {\n\t\t\tconst cancelButton = {\n\t\t\t\tlabel: t('Cancel'),\n\t\t\t\tvariant: 'tertiary',\n\t\t\t\tcallback: () => this.$emit('close'),\n\t\t\t}\n\n\t\t\tconst submitButton = {\n\t\t\t\tlabel: this.submitLabel,\n\t\t\t\ttype: 'submit',\n\t\t\t\tvariant: 'primary',\n\t\t\t}\n\n\t\t\t// If the dialog is cancellable, add a cancel button\n\t\t\tif (this.cancellable) {\n\t\t\t\treturn [cancelButton, submitButton]\n\t\t\t}\n\n\t\t\treturn [submitButton]\n\t\t},\n\t},\n\n\twatch: {\n\t\t/** Reset name to pre-selected nickname (e.g. Talk / Collabora ) */\n\t\tnickname: {\n\t\t\thandler() {\n\t\t\t\tthis.name = this.nickname\n\t\t\t},\n\t\t\timmediate: true,\n\t\t},\n\t\t\n\t\tname() {\n\t\t\t// Check validity of the new name\n\t\t\tconst newName = this.name.trim?.() || ''\n\t\t\tconst input = (this.$refs.input as Vue|undefined)?.$el.querySelector('input')\n\t\t\tif (!input) {\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tconst validity = getGuestNameValidity(newName)\n\t\t\tinput.setCustomValidity(validity)\n\t\t\tinput.reportValidity()\n\t\t},\n\t},\n\n\tmethods: {\n\t\tonSubmit() {\n\t\t\tconst input = this.$refs.input as HTMLInputElement\n\t\t\tconst nickname = this.name.trim()\n\n\t\t\tif (nickname === '') {\n\t\t\t\t// Show error if the nickname is empty\n\t\t\t\tinput.setCustomValidity(t('You cannot leave the name empty.'))\n\t\t\t\tinput.reportValidity()\n\t\t\t\tinput.focus()\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tif (nickname.length < 2) {\n\t\t\t\t// Show error if the nickname is too short\n\t\t\t\tinput.setCustomValidity(t('Please enter a name with at least 2 characters.'))\n\t\t\t\tinput.reportValidity()\n\t\t\t\tinput.focus()\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\t// Set the nickname\n\t\t\t\tsetGuestNickname(nickname)\n\t\t\t} catch (e) {\n\t\t\t\tshowError(t('Failed to set nickname.'))\n\t\t\t\tconsole.error('Failed to set nickname', e)\n\t\t\t\tinput.focus()\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\t// Set the dialog as shown\n\t\t\tstorage.setItem('public-auth-prompt-shown', 'true')\n\n\t\t\t// Close the dialog\n\t\t\tthis.$emit('close', this.name)\n\t\t},\n\t},\n})\n</script>\n<style scoped lang=\"scss\">\n.public-auth-prompt {\n\t&__text {\n\t\t// Smaller than dialog title\n\t\tfont-size: 1.25em;\n\t\tmargin-block: 0 calc(3 * var(--default-grid-baseline));\n\t}\n\n\t&__header {\n\t\tmargin-block: 0 calc(3 * var(--default-grid-baseline));\n\t\t// No extra top margin for the first child\n\t\t&:first-child {\n\t\t\tmargin-top: 0;\n\t\t}\n\t}\n\n\t&__input {\n\t\tmargin-block: calc(4 * var(--default-grid-baseline)) calc(2 * var(--default-grid-baseline));\n\t}\n}\n</style>\n"],"names":["t","validateFilename","InvalidFilenameError","InvalidFilenameErrorReason","getBuilder","defineComponent","NcDialog","NcNoteCard","NcTextField","setGuestNickname","showError"],"mappings":"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"}