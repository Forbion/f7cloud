import '../assets/NcMentionBubble-UsTMm5VD.css';
import '../assets/NcAppNavigationSettings-_Qi3rUlw.css';
import { g as mdiCogOutline, h as mdiCog } from "./mdi-DoaiuWye.mjs";
import { vOnClickOutside } from "@vueuse/components";
import { N as NcIconSvgWrapper } from "./NcIconSvgWrapper-Cb-cPj1R.mjs";
import clickOutsideOptions from "../Mixins/clickOutsideOptions.mjs";
import "../Composables/useIsFullscreen.mjs";
import "../Composables/useIsMobile.mjs";
import "../Composables/useIsDarkTheme.mjs";
import "@nextcloud/router";
import "../Functions/isDarkTheme.mjs";
/* empty css                                                                          */
import { n as normalizeComponent } from "./_plugin-vue2_normalizer-DU4iP6Vu.mjs";
import "escape-html";
import "striptags";
import "vue";
import "@nextcloud/auth";
import "@nextcloud/axios";
import "@nextcloud/capabilities";
import { i as isLegacy32 } from "./legacy-MK4GvP26.mjs";
import { r as register, p as t45, a as t } from "./_l10n-CW0YfIWk.mjs";
register(t45);
const _sfc_main = {
  directives: {
    ClickOutside: vOnClickOutside
  },
  components: {
    NcIconSvgWrapper
  },
  mixins: [
    clickOutsideOptions
  ],
  props: {
    name: {
      type: String,
      required: false,
      default: t("Settings")
    }
  },
  setup() {
    return {
      isLegacy32,
      mdiCog,
      mdiCogOutline
    };
  },
  data() {
    return {
      open: false
    };
  },
  computed: {
    clickOutsideConfig() {
      return [
        this.closeMenu,
        this.clickOutsideOptions
      ];
    }
  },
  methods: {
    toggleMenu() {
      this.open = !this.open;
    },
    closeMenu() {
      this.open = false;
    }
  }
};
var _sfc_render = function render() {
  var _vm = this, _c = _vm._self._c;
  return _c("div", { directives: [{ name: "click-outside", rawName: "v-click-outside", value: _vm.clickOutsideConfig, expression: "clickOutsideConfig" }], class: { open: _vm.open }, attrs: { "id": "app-settings" } }, [_c("div", { attrs: { "id": "app-settings__header" } }, [_c("button", { staticClass: "settings-button", attrs: { "type": "button", "aria-expanded": _vm.open ? "true" : "false", "aria-controls": "app-settings__content" }, on: { "click": _vm.toggleMenu } }, [_c("NcIconSvgWrapper", { staticClass: "settings-button__icon", attrs: { "path": _vm.isLegacy32 ? _vm.mdiCog : _vm.mdiCogOutline } }), _c("span", { staticClass: "settings-button__label" }, [_vm._v(_vm._s(_vm.name))])], 1)]), _c("Transition", { attrs: { "name": "slide-up" } }, [_c("div", { directives: [{ name: "show", rawName: "v-show", value: _vm.open, expression: "open" }], attrs: { "id": "app-settings__content" } }, [_vm._t("default")], 2)])], 1);
};
var _sfc_staticRenderFns = [];
var __component__ = /* @__PURE__ */ normalizeComponent(
  _sfc_main,
  _sfc_render,
  _sfc_staticRenderFns,
  false,
  null,
  "3862a820"
);
const NcAppNavigationSettings = __component__.exports;
export {
  NcAppNavigationSettings as N
};
//# sourceMappingURL=NcAppNavigationSettings-BV34ogWP.mjs.map
