import { AxiosInstance } from '@nextcloud/axios';

/**
 * Add axios interceptors to an axios instance that will ask for
 * password confirmation to add it as Basic Auth for every requests.
 * @param axios
 */
export declare function addPasswordConfirmationInterceptors(axios: AxiosInstance): void;

/**
 * Confirm password if needed.
 * Replacement of deprecated `OC.PasswordConfirmation.requirePasswordConfirmation(callback)`
 *
 * @return {Promise<void>} Promise that resolves when password is confirmed or not needed.
 *                         Rejects if password confirmation was cancelled
 *                         or confirmation is already in process.
 */
export declare const confirmPassword: () => Promise<void>;

/**
 * Check if password confirmation is required according to the last confirmation time.
 * Use as a replacement of deprecated `OC.PasswordConfirmation.requiresPasswordConfirmation()`.
 * Not needed if `confirmPassword()` can be used, because it checks requirements itself.
 *
 * @param mode
 * @return {boolean} Whether password confirmation is required or was confirmed recently
 */
export declare const isPasswordConfirmationRequired: (mode: PwdConfirmationMode) => boolean;

export declare enum PwdConfirmationMode {
    Lax = "lax",
    Strict = "strict"
}

export { }


declare module '@nextcloud/axios' {
    interface AxiosRequestConfig {
        /** To use this property you need to use the addPasswordConfirmationInterceptors function. */
        confirmPassword?: PwdConfirmationMode;
    }
}


declare global {
    interface Window {
        _nc_password_confirmation_dialog?: Vue;
    }
}

