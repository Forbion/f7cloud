{"version":3,"file":"2142-2142.js?v=65c13ac82e4559640fd4","mappings":"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","sources":["webpack:///nextcloud/apps/files_sharing/src/views/PublicAuthPrompt.vue","webpack:///nextcloud/apps/files_sharing/src/views/PublicAuthPrompt.vue?vue&type=script&lang=ts","webpack:///nextcloud/apps/files/src/utils/filenameValidity.ts","webpack://nextcloud/./apps/files_sharing/src/views/PublicAuthPrompt.vue?c8b8","webpack://nextcloud/./apps/files_sharing/src/views/PublicAuthPrompt.vue?d1c2","webpack:///nextcloud/node_modules/@nextcloud/files/dist/index.mjs","webpack:///nextcloud/apps/files_sharing/src/views/PublicAuthPrompt.vue?vue&type=style&index=0&id=02165a8b&prod&lang=scss"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('NcDialog',{staticClass:\"public-auth-prompt\",attrs:{\"data-cy-public-auth-prompt-dialog\":\"\",\"dialog-classes\":\"public-auth-prompt__dialog\",\"can-close\":false,\"name\":_vm.dialogName},scopedSlots:_vm._u([{key:\"actions\",fn:function(){return [_c('NcButton',{ref:\"submit\",attrs:{\"data-cy-public-auth-prompt-dialog-submit\":\"\",\"disabled\":_vm.name.trim() === ''},on:{\"click\":_vm.onSubmit}},[_vm._v(\"\\n\\t\\t\\t\"+_vm._s(_vm.t('files_sharing', 'Submit name'))+\"\\n\\t\\t\")])]},proxy:true}])},[(_vm.owner)?_c('h3',{staticClass:\"public-auth-prompt__subtitle\"},[_vm._v(\"\\n\\t\\t\"+_vm._s(_vm.t('files_sharing', '{ownerDisplayName} shared a folder with you.', { ownerDisplayName: _vm.ownerDisplayName }))+\"\\n\\t\")]):_vm._e(),_vm._v(\" \"),_c('NcNoteCard',{staticClass:\"public-auth-prompt__header\",attrs:{\"type\":\"info\"}},[_c('p',{staticClass:\"public-auth-prompt__description\",attrs:{\"id\":\"public-auth-prompt-dialog-description\"}},[_vm._v(\"\\n\\t\\t\\t\"+_vm._s(_vm.t('files_sharing', 'To upload files, you need to provide your name first.'))+\"\\n\\t\\t\")])]),_vm._v(\" \"),_c('form',{ref:\"form\",staticClass:\"public-auth-prompt__form\",attrs:{\"aria-describedby\":\"public-auth-prompt-dialog-description\"},on:{\"submit\":function($event){$event.preventDefault();$event.stopPropagation();}}},[_c('NcTextField',{ref:\"input\",staticClass:\"public-auth-prompt__input\",attrs:{\"data-cy-public-auth-prompt-dialog-name\":\"\",\"label\":_vm.t('files_sharing', 'Enter your name'),\"minlength\":2,\"required\":true,\"value\":_vm.name,\"name\":\"name\"},on:{\"update:value\":function($event){_vm.name=$event}}})],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import mod from \"-!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/ts-loader/index.js??clonedRuleSet-4.use[1]!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PublicAuthPrompt.vue?vue&type=script&lang=ts\"; export default mod; export * from \"-!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/ts-loader/index.js??clonedRuleSet-4.use[1]!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PublicAuthPrompt.vue?vue&type=script&lang=ts\"","/*!\n * SPDX-FileCopyrightText: 2024 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\nimport { InvalidFilenameError, InvalidFilenameErrorReason, validateFilename } from '@nextcloud/files';\nimport { t } from '@nextcloud/l10n';\n/**\n * Get the validity of a filename (empty if valid).\n * This can be used for `setCustomValidity` on input elements\n * @param name The filename\n * @param escape Escape the matched string in the error (only set when used in HTML)\n */\nexport function getFilenameValidity(name, escape = false) {\n    if (name.trim() === '') {\n        return t('files', 'Filename must not be empty.');\n    }\n    try {\n        validateFilename(name);\n        return '';\n    }\n    catch (error) {\n        if (!(error instanceof InvalidFilenameError)) {\n            throw error;\n        }\n        switch (error.reason) {\n            case InvalidFilenameErrorReason.Character:\n                return t('files', '\"{char}\" is not allowed inside a filename.', { char: error.segment }, undefined, { escape });\n            case InvalidFilenameErrorReason.ReservedName:\n                return t('files', '\"{segment}\" is a reserved name and not allowed for filenames.', { segment: error.segment }, undefined, { escape: false });\n            case InvalidFilenameErrorReason.Extension:\n                if (error.segment.match(/\\.[a-z]/i)) {\n                    return t('files', '\"{extension}\" is not an allowed filetype.', { extension: error.segment }, undefined, { escape: false });\n                }\n                return t('files', 'Filenames must not end with \"{extension}\".', { extension: error.segment }, undefined, { escape: false });\n            default:\n                return t('files', 'Invalid filename.');\n        }\n    }\n}\n","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/sass-loader/dist/cjs.js!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PublicAuthPrompt.vue?vue&type=style&index=0&id=02165a8b&prod&lang=scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/sass-loader/dist/cjs.js!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PublicAuthPrompt.vue?vue&type=style&index=0&id=02165a8b&prod&lang=scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import { render, staticRenderFns } from \"./PublicAuthPrompt.vue?vue&type=template&id=02165a8b\"\nimport script from \"./PublicAuthPrompt.vue?vue&type=script&lang=ts\"\nexport * from \"./PublicAuthPrompt.vue?vue&type=script&lang=ts\"\nimport style0 from \"./PublicAuthPrompt.vue?vue&type=style&index=0&id=02165a8b&prod&lang=scss\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import { o as logger } from \"./chunks/dav-Co9y-hkg.mjs\";\nimport { q, F, s, N, t, P, c, l, m, n, a, g, p, b, r, d, h, f, k, j, e, i } from \"./chunks/dav-Co9y-hkg.mjs\";\nimport { getCapabilities } from \"@nextcloud/capabilities\";\nimport { extname, basename } from \"path\";\nimport { getCanonicalLocale, getLanguage } from \"@nextcloud/l10n\";\nimport { TypedEventTarget } from \"typescript-event-target\";\nvar NewMenuEntryCategory = /* @__PURE__ */ ((NewMenuEntryCategory2) => {\n  NewMenuEntryCategory2[NewMenuEntryCategory2[\"UploadFromDevice\"] = 0] = \"UploadFromDevice\";\n  NewMenuEntryCategory2[NewMenuEntryCategory2[\"CreateNew\"] = 1] = \"CreateNew\";\n  NewMenuEntryCategory2[NewMenuEntryCategory2[\"Other\"] = 2] = \"Other\";\n  return NewMenuEntryCategory2;\n})(NewMenuEntryCategory || {});\nclass NewFileMenu {\n  _entries = [];\n  registerEntry(entry) {\n    this.validateEntry(entry);\n    entry.category = entry.category ?? 1;\n    this._entries.push(entry);\n  }\n  unregisterEntry(entry) {\n    const entryIndex = typeof entry === \"string\" ? this.getEntryIndex(entry) : this.getEntryIndex(entry.id);\n    if (entryIndex === -1) {\n      logger.warn(\"Entry not found, nothing removed\", { entry, entries: this.getEntries() });\n      return;\n    }\n    this._entries.splice(entryIndex, 1);\n  }\n  /**\n   * Get the list of registered entries\n   *\n   * @param {Folder} context the creation context. Usually the current folder\n   */\n  getEntries(context) {\n    if (context) {\n      return this._entries.filter((entry) => typeof entry.enabled === \"function\" ? entry.enabled(context) : true);\n    }\n    return this._entries;\n  }\n  getEntryIndex(id) {\n    return this._entries.findIndex((entry) => entry.id === id);\n  }\n  validateEntry(entry) {\n    if (!entry.id || !entry.displayName || !(entry.iconSvgInline || entry.iconClass) || !entry.handler) {\n      throw new Error(\"Invalid entry\");\n    }\n    if (typeof entry.id !== \"string\" || typeof entry.displayName !== \"string\") {\n      throw new Error(\"Invalid id or displayName property\");\n    }\n    if (entry.iconClass && typeof entry.iconClass !== \"string\" || entry.iconSvgInline && typeof entry.iconSvgInline !== \"string\") {\n      throw new Error(\"Invalid icon provided\");\n    }\n    if (entry.enabled !== void 0 && typeof entry.enabled !== \"function\") {\n      throw new Error(\"Invalid enabled property\");\n    }\n    if (typeof entry.handler !== \"function\") {\n      throw new Error(\"Invalid handler property\");\n    }\n    if (\"order\" in entry && typeof entry.order !== \"number\") {\n      throw new Error(\"Invalid order property\");\n    }\n    if (this.getEntryIndex(entry.id) !== -1) {\n      throw new Error(\"Duplicate entry\");\n    }\n  }\n}\nconst getNewFileMenu = function() {\n  if (typeof window._nc_newfilemenu === \"undefined\") {\n    window._nc_newfilemenu = new NewFileMenu();\n    logger.debug(\"NewFileMenu initialized\");\n  }\n  return window._nc_newfilemenu;\n};\nvar DefaultType = /* @__PURE__ */ ((DefaultType2) => {\n  DefaultType2[\"DEFAULT\"] = \"default\";\n  DefaultType2[\"HIDDEN\"] = \"hidden\";\n  return DefaultType2;\n})(DefaultType || {});\nclass FileAction {\n  _action;\n  constructor(action) {\n    this.validateAction(action);\n    this._action = action;\n  }\n  get id() {\n    return this._action.id;\n  }\n  get displayName() {\n    return this._action.displayName;\n  }\n  get title() {\n    return this._action.title;\n  }\n  get iconSvgInline() {\n    return this._action.iconSvgInline;\n  }\n  get enabled() {\n    return this._action.enabled;\n  }\n  get exec() {\n    return this._action.exec;\n  }\n  get execBatch() {\n    return this._action.execBatch;\n  }\n  get order() {\n    return this._action.order;\n  }\n  get parent() {\n    return this._action.parent;\n  }\n  get default() {\n    return this._action.default;\n  }\n  get destructive() {\n    return this._action.destructive;\n  }\n  get inline() {\n    return this._action.inline;\n  }\n  get renderInline() {\n    return this._action.renderInline;\n  }\n  validateAction(action) {\n    if (!action.id || typeof action.id !== \"string\") {\n      throw new Error(\"Invalid id\");\n    }\n    if (!action.displayName || typeof action.displayName !== \"function\") {\n      throw new Error(\"Invalid displayName function\");\n    }\n    if (\"title\" in action && typeof action.title !== \"function\") {\n      throw new Error(\"Invalid title function\");\n    }\n    if (!action.iconSvgInline || typeof action.iconSvgInline !== \"function\") {\n      throw new Error(\"Invalid iconSvgInline function\");\n    }\n    if (!action.exec || typeof action.exec !== \"function\") {\n      throw new Error(\"Invalid exec function\");\n    }\n    if (\"enabled\" in action && typeof action.enabled !== \"function\") {\n      throw new Error(\"Invalid enabled function\");\n    }\n    if (\"execBatch\" in action && typeof action.execBatch !== \"function\") {\n      throw new Error(\"Invalid execBatch function\");\n    }\n    if (\"order\" in action && typeof action.order !== \"number\") {\n      throw new Error(\"Invalid order\");\n    }\n    if (action.destructive !== void 0 && typeof action.destructive !== \"boolean\") {\n      throw new Error(\"Invalid destructive flag\");\n    }\n    if (\"parent\" in action && typeof action.parent !== \"string\") {\n      throw new Error(\"Invalid parent\");\n    }\n    if (action.default && !Object.values(DefaultType).includes(action.default)) {\n      throw new Error(\"Invalid default\");\n    }\n    if (\"inline\" in action && typeof action.inline !== \"function\") {\n      throw new Error(\"Invalid inline function\");\n    }\n    if (\"renderInline\" in action && typeof action.renderInline !== \"function\") {\n      throw new Error(\"Invalid renderInline function\");\n    }\n  }\n}\nconst registerFileAction = function(action) {\n  if (typeof window._nc_fileactions === \"undefined\") {\n    window._nc_fileactions = [];\n    logger.debug(\"FileActions initialized\");\n  }\n  if (window._nc_fileactions.find((search) => search.id === action.id)) {\n    logger.error(`FileAction ${action.id} already registered`, { action });\n    return;\n  }\n  window._nc_fileactions.push(action);\n};\nconst getFileActions = function() {\n  if (typeof window._nc_fileactions === \"undefined\") {\n    window._nc_fileactions = [];\n    logger.debug(\"FileActions initialized\");\n  }\n  return window._nc_fileactions;\n};\nclass FileListAction {\n  _action;\n  constructor(action) {\n    this.validateAction(action);\n    this._action = action;\n  }\n  get id() {\n    return this._action.id;\n  }\n  get displayName() {\n    return this._action.displayName;\n  }\n  get iconSvgInline() {\n    return this._action.iconSvgInline;\n  }\n  get order() {\n    return this._action.order;\n  }\n  get enabled() {\n    return this._action.enabled;\n  }\n  get exec() {\n    return this._action.exec;\n  }\n  validateAction(action) {\n    if (!action.id || typeof action.id !== \"string\") {\n      throw new Error(\"Invalid id\");\n    }\n    if (!action.displayName || typeof action.displayName !== \"function\") {\n      throw new Error(\"Invalid displayName function\");\n    }\n    if (\"iconSvgInline\" in action && typeof action.iconSvgInline !== \"function\") {\n      throw new Error(\"Invalid iconSvgInline function\");\n    }\n    if (\"order\" in action && typeof action.order !== \"number\") {\n      throw new Error(\"Invalid order\");\n    }\n    if (\"enabled\" in action && typeof action.enabled !== \"function\") {\n      throw new Error(\"Invalid enabled function\");\n    }\n    if (!action.exec || typeof action.exec !== \"function\") {\n      throw new Error(\"Invalid exec function\");\n    }\n  }\n}\nconst registerFileListAction = (action) => {\n  if (typeof window._nc_filelistactions === \"undefined\") {\n    window._nc_filelistactions = [];\n  }\n  if (window._nc_filelistactions.find((listAction) => listAction.id === action.id)) {\n    logger.error(`FileListAction with id \"${action.id}\" is already registered`, { action });\n    return;\n  }\n  window._nc_filelistactions.push(action);\n};\nconst getFileListActions = () => {\n  if (typeof window._nc_filelistactions === \"undefined\") {\n    window._nc_filelistactions = [];\n  }\n  return window._nc_filelistactions;\n};\nclass Header {\n  _header;\n  constructor(header) {\n    this.validateHeader(header);\n    this._header = header;\n  }\n  get id() {\n    return this._header.id;\n  }\n  get order() {\n    return this._header.order;\n  }\n  get enabled() {\n    return this._header.enabled;\n  }\n  get render() {\n    return this._header.render;\n  }\n  get updated() {\n    return this._header.updated;\n  }\n  validateHeader(header) {\n    if (!header.id || !header.render || !header.updated) {\n      throw new Error(\"Invalid header: id, render and updated are required\");\n    }\n    if (typeof header.id !== \"string\") {\n      throw new Error(\"Invalid id property\");\n    }\n    if (header.enabled !== void 0 && typeof header.enabled !== \"function\") {\n      throw new Error(\"Invalid enabled property\");\n    }\n    if (header.render && typeof header.render !== \"function\") {\n      throw new Error(\"Invalid render property\");\n    }\n    if (header.updated && typeof header.updated !== \"function\") {\n      throw new Error(\"Invalid updated property\");\n    }\n  }\n}\nconst registerFileListHeaders = function(header) {\n  if (typeof window._nc_filelistheader === \"undefined\") {\n    window._nc_filelistheader = [];\n    logger.debug(\"FileListHeaders initialized\");\n  }\n  if (window._nc_filelistheader.find((search) => search.id === header.id)) {\n    logger.error(`Header ${header.id} already registered`, { header });\n    return;\n  }\n  window._nc_filelistheader.push(header);\n};\nconst getFileListHeaders = function() {\n  if (typeof window._nc_filelistheader === \"undefined\") {\n    window._nc_filelistheader = [];\n    logger.debug(\"FileListHeaders initialized\");\n  }\n  return window._nc_filelistheader;\n};\nvar InvalidFilenameErrorReason = /* @__PURE__ */ ((InvalidFilenameErrorReason2) => {\n  InvalidFilenameErrorReason2[\"ReservedName\"] = \"reserved name\";\n  InvalidFilenameErrorReason2[\"Character\"] = \"character\";\n  InvalidFilenameErrorReason2[\"Extension\"] = \"extension\";\n  return InvalidFilenameErrorReason2;\n})(InvalidFilenameErrorReason || {});\nclass InvalidFilenameError extends Error {\n  constructor(options) {\n    super(`Invalid ${options.reason} '${options.segment}' in filename '${options.filename}'`, { cause: options });\n  }\n  /**\n   * The filename that was validated\n   */\n  get filename() {\n    return this.cause.filename;\n  }\n  /**\n   * Reason why the validation failed\n   */\n  get reason() {\n    return this.cause.reason;\n  }\n  /**\n   * Part of the filename that caused this error\n   */\n  get segment() {\n    return this.cause.segment;\n  }\n}\nfunction validateFilename(filename) {\n  const capabilities = getCapabilities().files;\n  const forbiddenCharacters = capabilities.forbidden_filename_characters ?? window._oc_config?.forbidden_filenames_characters ?? [\"/\", \"\\\\\"];\n  for (const character of forbiddenCharacters) {\n    if (filename.includes(character)) {\n      throw new InvalidFilenameError({ segment: character, reason: \"character\", filename });\n    }\n  }\n  filename = filename.toLocaleLowerCase();\n  const forbiddenFilenames = capabilities.forbidden_filenames ?? [\".htaccess\"];\n  if (forbiddenFilenames.includes(filename)) {\n    throw new InvalidFilenameError({\n      filename,\n      segment: filename,\n      reason: \"reserved name\"\n      /* ReservedName */\n    });\n  }\n  const endOfBasename = filename.indexOf(\".\", 1);\n  const basename2 = filename.substring(0, endOfBasename === -1 ? void 0 : endOfBasename);\n  const forbiddenFilenameBasenames = capabilities.forbidden_filename_basenames ?? [];\n  if (forbiddenFilenameBasenames.includes(basename2)) {\n    throw new InvalidFilenameError({\n      filename,\n      segment: basename2,\n      reason: \"reserved name\"\n      /* ReservedName */\n    });\n  }\n  const forbiddenFilenameExtensions = capabilities.forbidden_filename_extensions ?? [\".part\", \".filepart\"];\n  for (const extension of forbiddenFilenameExtensions) {\n    if (filename.length > extension.length && filename.endsWith(extension)) {\n      throw new InvalidFilenameError({ segment: extension, reason: \"extension\", filename });\n    }\n  }\n}\nfunction isFilenameValid(filename) {\n  try {\n    validateFilename(filename);\n    return true;\n  } catch (error) {\n    if (error instanceof InvalidFilenameError) {\n      return false;\n    }\n    throw error;\n  }\n}\nfunction getUniqueName(name, otherNames, options) {\n  const opts = {\n    suffix: (n2) => `(${n2})`,\n    ignoreFileExtension: false,\n    ...options\n  };\n  let newName = name;\n  let i2 = 1;\n  while (otherNames.includes(newName)) {\n    const ext = opts.ignoreFileExtension ? \"\" : extname(name);\n    const base = basename(name, ext);\n    newName = `${base} ${opts.suffix(i2++)}${ext}`;\n  }\n  return newName;\n}\nconst humanList = [\"B\", \"KB\", \"MB\", \"GB\", \"TB\", \"PB\"];\nconst humanListBinary = [\"B\", \"KiB\", \"MiB\", \"GiB\", \"TiB\", \"PiB\"];\nfunction formatFileSize(size, skipSmallSizes = false, binaryPrefixes = false, base1000 = false) {\n  binaryPrefixes = binaryPrefixes && !base1000;\n  if (typeof size === \"string\") {\n    size = Number(size);\n  }\n  let order = size > 0 ? Math.floor(Math.log(size) / Math.log(base1000 ? 1e3 : 1024)) : 0;\n  order = Math.min((binaryPrefixes ? humanListBinary.length : humanList.length) - 1, order);\n  const readableFormat = binaryPrefixes ? humanListBinary[order] : humanList[order];\n  let relativeSize = (size / Math.pow(base1000 ? 1e3 : 1024, order)).toFixed(1);\n  if (skipSmallSizes === true && order === 0) {\n    return (relativeSize !== \"0.0\" ? \"< 1 \" : \"0 \") + (binaryPrefixes ? humanListBinary[1] : humanList[1]);\n  }\n  if (order < 2) {\n    relativeSize = parseFloat(relativeSize).toFixed(0);\n  } else {\n    relativeSize = parseFloat(relativeSize).toLocaleString(getCanonicalLocale());\n  }\n  return relativeSize + \" \" + readableFormat;\n}\nfunction parseFileSize(value, forceBinary = false) {\n  try {\n    value = `${value}`.toLocaleLowerCase().replaceAll(/\\s+/g, \"\").replaceAll(\",\", \".\");\n  } catch (e2) {\n    return null;\n  }\n  const match = value.match(/^([0-9]*(\\.[0-9]*)?)([kmgtp]?)(i?)b?$/);\n  if (match === null || match[1] === \".\" || match[1] === \"\") {\n    return null;\n  }\n  const bytesArray = {\n    \"\": 0,\n    k: 1,\n    m: 2,\n    g: 3,\n    t: 4,\n    p: 5,\n    e: 6\n  };\n  const decimalString = `${match[1]}`;\n  const base = match[4] === \"i\" || forceBinary ? 1024 : 1e3;\n  return Math.round(Number.parseFloat(decimalString) * base ** bytesArray[match[3]]);\n}\nfunction stringify(value) {\n  if (value instanceof Date) {\n    return value.toISOString();\n  }\n  return String(value);\n}\nfunction orderBy(collection, identifiers2, orders) {\n  identifiers2 = identifiers2 ?? [(value) => value];\n  orders = orders ?? [];\n  const sorting = identifiers2.map((_, index) => (orders[index] ?? \"asc\") === \"asc\" ? 1 : -1);\n  const collator = Intl.Collator(\n    [getLanguage(), getCanonicalLocale()],\n    {\n      // handle 10 as ten and not as one-zero\n      numeric: true,\n      usage: \"sort\"\n    }\n  );\n  return [...collection].sort((a2, b2) => {\n    for (const [index, identifier] of identifiers2.entries()) {\n      const value = collator.compare(stringify(identifier(a2)), stringify(identifier(b2)));\n      if (value !== 0) {\n        return value * sorting[index];\n      }\n    }\n    return 0;\n  });\n}\nvar FilesSortingMode = /* @__PURE__ */ ((FilesSortingMode2) => {\n  FilesSortingMode2[\"Name\"] = \"basename\";\n  FilesSortingMode2[\"Modified\"] = \"mtime\";\n  FilesSortingMode2[\"Size\"] = \"size\";\n  return FilesSortingMode2;\n})(FilesSortingMode || {});\nfunction sortNodes(nodes, options = {}) {\n  const sortingOptions = {\n    // Default to sort by name\n    sortingMode: \"basename\",\n    // Default to sort ascending\n    sortingOrder: \"asc\",\n    ...options\n  };\n  const basename2 = (name) => name.lastIndexOf(\".\") > 0 ? name.slice(0, name.lastIndexOf(\".\")) : name;\n  const identifiers2 = [\n    // 1: Sort favorites first if enabled\n    ...sortingOptions.sortFavoritesFirst ? [(v) => v.attributes?.favorite !== 1] : [],\n    // 2: Sort folders first if sorting by name\n    ...sortingOptions.sortFoldersFirst ? [(v) => v.type !== \"folder\"] : [],\n    // 3: Use sorting mode if NOT basename (to be able to use display name too)\n    ...sortingOptions.sortingMode !== \"basename\" ? [(v) => v[sortingOptions.sortingMode]] : [],\n    // 4: Use display name if available, fallback to name\n    (v) => basename2(v.displayname || v.attributes?.displayname || v.basename),\n    // 5: Finally, use basename if all previous sorting methods failed\n    (v) => v.basename\n  ];\n  const orders = [\n    // (for 1): always sort favorites before normal files\n    ...sortingOptions.sortFavoritesFirst ? [\"asc\"] : [],\n    // (for 2): always sort folders before files\n    ...sortingOptions.sortFoldersFirst ? [\"asc\"] : [],\n    // (for 3): Reverse if sorting by mtime as mtime higher means edited more recent -> lower\n    ...sortingOptions.sortingMode === \"mtime\" ? [sortingOptions.sortingOrder === \"asc\" ? \"desc\" : \"asc\"] : [],\n    // (also for 3 so make sure not to conflict with 2 and 3)\n    ...sortingOptions.sortingMode !== \"mtime\" && sortingOptions.sortingMode !== \"basename\" ? [sortingOptions.sortingOrder] : [],\n    // for 4: use configured sorting direction\n    sortingOptions.sortingOrder,\n    // for 5: use configured sorting direction\n    sortingOptions.sortingOrder\n  ];\n  return orderBy(nodes, identifiers2, orders);\n}\nclass Navigation extends TypedEventTarget {\n  _views = [];\n  _currentView = null;\n  /**\n   * Register a new view on the navigation\n   * @param view The view to register\n   * @throws `Error` is thrown if a view with the same id is already registered\n   */\n  register(view) {\n    if (this._views.find((search) => search.id === view.id)) {\n      throw new Error(`View id ${view.id} is already registered`);\n    }\n    this._views.push(view);\n    this.dispatchTypedEvent(\"update\", new CustomEvent(\"update\"));\n  }\n  /**\n   * Remove a registered view\n   * @param id The id of the view to remove\n   */\n  remove(id) {\n    const index = this._views.findIndex((view) => view.id === id);\n    if (index !== -1) {\n      this._views.splice(index, 1);\n      this.dispatchTypedEvent(\"update\", new CustomEvent(\"update\"));\n    }\n  }\n  /**\n   * Set the currently active view\n   * @fires UpdateActiveViewEvent\n   * @param view New active view\n   */\n  setActive(view) {\n    this._currentView = view;\n    const event = new CustomEvent(\"updateActive\", { detail: view });\n    this.dispatchTypedEvent(\"updateActive\", event);\n  }\n  /**\n   * The currently active files view\n   */\n  get active() {\n    return this._currentView;\n  }\n  /**\n   * All registered views\n   */\n  get views() {\n    return this._views;\n  }\n}\nconst getNavigation = function() {\n  if (typeof window._nc_navigation === \"undefined\") {\n    window._nc_navigation = new Navigation();\n    logger.debug(\"Navigation service initialized\");\n  }\n  return window._nc_navigation;\n};\nclass Column {\n  _column;\n  constructor(column) {\n    isValidColumn(column);\n    this._column = column;\n  }\n  get id() {\n    return this._column.id;\n  }\n  get title() {\n    return this._column.title;\n  }\n  get render() {\n    return this._column.render;\n  }\n  get sort() {\n    return this._column.sort;\n  }\n  get summary() {\n    return this._column.summary;\n  }\n}\nconst isValidColumn = function(column) {\n  if (!column.id || typeof column.id !== \"string\") {\n    throw new Error(\"A column id is required\");\n  }\n  if (!column.title || typeof column.title !== \"string\") {\n    throw new Error(\"A column title is required\");\n  }\n  if (!column.render || typeof column.render !== \"function\") {\n    throw new Error(\"A render function is required\");\n  }\n  if (column.sort && typeof column.sort !== \"function\") {\n    throw new Error(\"Column sortFunction must be a function\");\n  }\n  if (column.summary && typeof column.summary !== \"function\") {\n    throw new Error(\"Column summary must be a function\");\n  }\n  return true;\n};\nfunction getDefaultExportFromCjs(x) {\n  return x && x.__esModule && Object.prototype.hasOwnProperty.call(x, \"default\") ? x[\"default\"] : x;\n}\nvar validator = {};\nvar util = {};\nvar hasRequiredUtil;\nfunction requireUtil() {\n  if (hasRequiredUtil) return util;\n  hasRequiredUtil = 1;\n  (function(exports) {\n    const nameStartChar = \":A-Za-z_\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD\";\n    const nameChar = nameStartChar + \"\\\\-.\\\\d\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040\";\n    const nameRegexp = \"[\" + nameStartChar + \"][\" + nameChar + \"]*\";\n    const regexName = new RegExp(\"^\" + nameRegexp + \"$\");\n    const getAllMatches = function(string, regex) {\n      const matches = [];\n      let match = regex.exec(string);\n      while (match) {\n        const allmatches = [];\n        allmatches.startIndex = regex.lastIndex - match[0].length;\n        const len = match.length;\n        for (let index = 0; index < len; index++) {\n          allmatches.push(match[index]);\n        }\n        matches.push(allmatches);\n        match = regex.exec(string);\n      }\n      return matches;\n    };\n    const isName = function(string) {\n      const match = regexName.exec(string);\n      return !(match === null || typeof match === \"undefined\");\n    };\n    exports.isExist = function(v) {\n      return typeof v !== \"undefined\";\n    };\n    exports.isEmptyObject = function(obj) {\n      return Object.keys(obj).length === 0;\n    };\n    exports.merge = function(target, a2, arrayMode) {\n      if (a2) {\n        const keys = Object.keys(a2);\n        const len = keys.length;\n        for (let i2 = 0; i2 < len; i2++) {\n          if (arrayMode === \"strict\") {\n            target[keys[i2]] = [a2[keys[i2]]];\n          } else {\n            target[keys[i2]] = a2[keys[i2]];\n          }\n        }\n      }\n    };\n    exports.getValue = function(v) {\n      if (exports.isExist(v)) {\n        return v;\n      } else {\n        return \"\";\n      }\n    };\n    exports.isName = isName;\n    exports.getAllMatches = getAllMatches;\n    exports.nameRegexp = nameRegexp;\n  })(util);\n  return util;\n}\nvar hasRequiredValidator;\nfunction requireValidator() {\n  if (hasRequiredValidator) return validator;\n  hasRequiredValidator = 1;\n  const util2 = requireUtil();\n  const defaultOptions = {\n    allowBooleanAttributes: false,\n    //A tag can have attributes without any value\n    unpairedTags: []\n  };\n  validator.validate = function(xmlData, options) {\n    options = Object.assign({}, defaultOptions, options);\n    const tags = [];\n    let tagFound = false;\n    let reachedRoot = false;\n    if (xmlData[0] === \"\\uFEFF\") {\n      xmlData = xmlData.substr(1);\n    }\n    for (let i2 = 0; i2 < xmlData.length; i2++) {\n      if (xmlData[i2] === \"<\" && xmlData[i2 + 1] === \"?\") {\n        i2 += 2;\n        i2 = readPI(xmlData, i2);\n        if (i2.err) return i2;\n      } else if (xmlData[i2] === \"<\") {\n        let tagStartPos = i2;\n        i2++;\n        if (xmlData[i2] === \"!\") {\n          i2 = readCommentAndCDATA(xmlData, i2);\n          continue;\n        } else {\n          let closingTag = false;\n          if (xmlData[i2] === \"/\") {\n            closingTag = true;\n            i2++;\n          }\n          let tagName = \"\";\n          for (; i2 < xmlData.length && xmlData[i2] !== \">\" && xmlData[i2] !== \" \" && xmlData[i2] !== \"\t\" && xmlData[i2] !== \"\\n\" && xmlData[i2] !== \"\\r\"; i2++) {\n            tagName += xmlData[i2];\n          }\n          tagName = tagName.trim();\n          if (tagName[tagName.length - 1] === \"/\") {\n            tagName = tagName.substring(0, tagName.length - 1);\n            i2--;\n          }\n          if (!validateTagName(tagName)) {\n            let msg;\n            if (tagName.trim().length === 0) {\n              msg = \"Invalid space after '<'.\";\n            } else {\n              msg = \"Tag '\" + tagName + \"' is an invalid name.\";\n            }\n            return getErrorObject(\"InvalidTag\", msg, getLineNumberForPosition(xmlData, i2));\n          }\n          const result = readAttributeStr(xmlData, i2);\n          if (result === false) {\n            return getErrorObject(\"InvalidAttr\", \"Attributes for '\" + tagName + \"' have open quote.\", getLineNumberForPosition(xmlData, i2));\n          }\n          let attrStr = result.value;\n          i2 = result.index;\n          if (attrStr[attrStr.length - 1] === \"/\") {\n            const attrStrStart = i2 - attrStr.length;\n            attrStr = attrStr.substring(0, attrStr.length - 1);\n            const isValid = validateAttributeString(attrStr, options);\n            if (isValid === true) {\n              tagFound = true;\n            } else {\n              return getErrorObject(isValid.err.code, isValid.err.msg, getLineNumberForPosition(xmlData, attrStrStart + isValid.err.line));\n            }\n          } else if (closingTag) {\n            if (!result.tagClosed) {\n              return getErrorObject(\"InvalidTag\", \"Closing tag '\" + tagName + \"' doesn't have proper closing.\", getLineNumberForPosition(xmlData, i2));\n            } else if (attrStr.trim().length > 0) {\n              return getErrorObject(\"InvalidTag\", \"Closing tag '\" + tagName + \"' can't have attributes or invalid starting.\", getLineNumberForPosition(xmlData, tagStartPos));\n            } else if (tags.length === 0) {\n              return getErrorObject(\"InvalidTag\", \"Closing tag '\" + tagName + \"' has not been opened.\", getLineNumberForPosition(xmlData, tagStartPos));\n            } else {\n              const otg = tags.pop();\n              if (tagName !== otg.tagName) {\n                let openPos = getLineNumberForPosition(xmlData, otg.tagStartPos);\n                return getErrorObject(\n                  \"InvalidTag\",\n                  \"Expected closing tag '\" + otg.tagName + \"' (opened in line \" + openPos.line + \", col \" + openPos.col + \") instead of closing tag '\" + tagName + \"'.\",\n                  getLineNumberForPosition(xmlData, tagStartPos)\n                );\n              }\n              if (tags.length == 0) {\n                reachedRoot = true;\n              }\n            }\n          } else {\n            const isValid = validateAttributeString(attrStr, options);\n            if (isValid !== true) {\n              return getErrorObject(isValid.err.code, isValid.err.msg, getLineNumberForPosition(xmlData, i2 - attrStr.length + isValid.err.line));\n            }\n            if (reachedRoot === true) {\n              return getErrorObject(\"InvalidXml\", \"Multiple possible root nodes found.\", getLineNumberForPosition(xmlData, i2));\n            } else if (options.unpairedTags.indexOf(tagName) !== -1) ;\n            else {\n              tags.push({ tagName, tagStartPos });\n            }\n            tagFound = true;\n          }\n          for (i2++; i2 < xmlData.length; i2++) {\n            if (xmlData[i2] === \"<\") {\n              if (xmlData[i2 + 1] === \"!\") {\n                i2++;\n                i2 = readCommentAndCDATA(xmlData, i2);\n                continue;\n              } else if (xmlData[i2 + 1] === \"?\") {\n                i2 = readPI(xmlData, ++i2);\n                if (i2.err) return i2;\n              } else {\n                break;\n              }\n            } else if (xmlData[i2] === \"&\") {\n              const afterAmp = validateAmpersand(xmlData, i2);\n              if (afterAmp == -1)\n                return getErrorObject(\"InvalidChar\", \"char '&' is not expected.\", getLineNumberForPosition(xmlData, i2));\n              i2 = afterAmp;\n            } else {\n              if (reachedRoot === true && !isWhiteSpace(xmlData[i2])) {\n                return getErrorObject(\"InvalidXml\", \"Extra text at the end\", getLineNumberForPosition(xmlData, i2));\n              }\n            }\n          }\n          if (xmlData[i2] === \"<\") {\n            i2--;\n          }\n        }\n      } else {\n        if (isWhiteSpace(xmlData[i2])) {\n          continue;\n        }\n        return getErrorObject(\"InvalidChar\", \"char '\" + xmlData[i2] + \"' is not expected.\", getLineNumberForPosition(xmlData, i2));\n      }\n    }\n    if (!tagFound) {\n      return getErrorObject(\"InvalidXml\", \"Start tag expected.\", 1);\n    } else if (tags.length == 1) {\n      return getErrorObject(\"InvalidTag\", \"Unclosed tag '\" + tags[0].tagName + \"'.\", getLineNumberForPosition(xmlData, tags[0].tagStartPos));\n    } else if (tags.length > 0) {\n      return getErrorObject(\"InvalidXml\", \"Invalid '\" + JSON.stringify(tags.map((t2) => t2.tagName), null, 4).replace(/\\r?\\n/g, \"\") + \"' found.\", { line: 1, col: 1 });\n    }\n    return true;\n  };\n  function isWhiteSpace(char) {\n    return char === \" \" || char === \"\t\" || char === \"\\n\" || char === \"\\r\";\n  }\n  function readPI(xmlData, i2) {\n    const start = i2;\n    for (; i2 < xmlData.length; i2++) {\n      if (xmlData[i2] == \"?\" || xmlData[i2] == \" \") {\n        const tagname = xmlData.substr(start, i2 - start);\n        if (i2 > 5 && tagname === \"xml\") {\n          return getErrorObject(\"InvalidXml\", \"XML declaration allowed only at the start of the document.\", getLineNumberForPosition(xmlData, i2));\n        } else if (xmlData[i2] == \"?\" && xmlData[i2 + 1] == \">\") {\n          i2++;\n          break;\n        } else {\n          continue;\n        }\n      }\n    }\n    return i2;\n  }\n  function readCommentAndCDATA(xmlData, i2) {\n    if (xmlData.length > i2 + 5 && xmlData[i2 + 1] === \"-\" && xmlData[i2 + 2] === \"-\") {\n      for (i2 += 3; i2 < xmlData.length; i2++) {\n        if (xmlData[i2] === \"-\" && xmlData[i2 + 1] === \"-\" && xmlData[i2 + 2] === \">\") {\n          i2 += 2;\n          break;\n        }\n      }\n    } else if (xmlData.length > i2 + 8 && xmlData[i2 + 1] === \"D\" && xmlData[i2 + 2] === \"O\" && xmlData[i2 + 3] === \"C\" && xmlData[i2 + 4] === \"T\" && xmlData[i2 + 5] === \"Y\" && xmlData[i2 + 6] === \"P\" && xmlData[i2 + 7] === \"E\") {\n      let angleBracketsCount = 1;\n      for (i2 += 8; i2 < xmlData.length; i2++) {\n        if (xmlData[i2] === \"<\") {\n          angleBracketsCount++;\n        } else if (xmlData[i2] === \">\") {\n          angleBracketsCount--;\n          if (angleBracketsCount === 0) {\n            break;\n          }\n        }\n      }\n    } else if (xmlData.length > i2 + 9 && xmlData[i2 + 1] === \"[\" && xmlData[i2 + 2] === \"C\" && xmlData[i2 + 3] === \"D\" && xmlData[i2 + 4] === \"A\" && xmlData[i2 + 5] === \"T\" && xmlData[i2 + 6] === \"A\" && xmlData[i2 + 7] === \"[\") {\n      for (i2 += 8; i2 < xmlData.length; i2++) {\n        if (xmlData[i2] === \"]\" && xmlData[i2 + 1] === \"]\" && xmlData[i2 + 2] === \">\") {\n          i2 += 2;\n          break;\n        }\n      }\n    }\n    return i2;\n  }\n  const doubleQuote = '\"';\n  const singleQuote = \"'\";\n  function readAttributeStr(xmlData, i2) {\n    let attrStr = \"\";\n    let startChar = \"\";\n    let tagClosed = false;\n    for (; i2 < xmlData.length; i2++) {\n      if (xmlData[i2] === doubleQuote || xmlData[i2] === singleQuote) {\n        if (startChar === \"\") {\n          startChar = xmlData[i2];\n        } else if (startChar !== xmlData[i2]) ;\n        else {\n          startChar = \"\";\n        }\n      } else if (xmlData[i2] === \">\") {\n        if (startChar === \"\") {\n          tagClosed = true;\n          break;\n        }\n      }\n      attrStr += xmlData[i2];\n    }\n    if (startChar !== \"\") {\n      return false;\n    }\n    return {\n      value: attrStr,\n      index: i2,\n      tagClosed\n    };\n  }\n  const validAttrStrRegxp = new RegExp(`(\\\\s*)([^\\\\s=]+)(\\\\s*=)?(\\\\s*(['\"])(([\\\\s\\\\S])*?)\\\\5)?`, \"g\");\n  function validateAttributeString(attrStr, options) {\n    const matches = util2.getAllMatches(attrStr, validAttrStrRegxp);\n    const attrNames = {};\n    for (let i2 = 0; i2 < matches.length; i2++) {\n      if (matches[i2][1].length === 0) {\n        return getErrorObject(\"InvalidAttr\", \"Attribute '\" + matches[i2][2] + \"' has no space in starting.\", getPositionFromMatch(matches[i2]));\n      } else if (matches[i2][3] !== void 0 && matches[i2][4] === void 0) {\n        return getErrorObject(\"InvalidAttr\", \"Attribute '\" + matches[i2][2] + \"' is without value.\", getPositionFromMatch(matches[i2]));\n      } else if (matches[i2][3] === void 0 && !options.allowBooleanAttributes) {\n        return getErrorObject(\"InvalidAttr\", \"boolean attribute '\" + matches[i2][2] + \"' is not allowed.\", getPositionFromMatch(matches[i2]));\n      }\n      const attrName = matches[i2][2];\n      if (!validateAttrName(attrName)) {\n        return getErrorObject(\"InvalidAttr\", \"Attribute '\" + attrName + \"' is an invalid name.\", getPositionFromMatch(matches[i2]));\n      }\n      if (!attrNames.hasOwnProperty(attrName)) {\n        attrNames[attrName] = 1;\n      } else {\n        return getErrorObject(\"InvalidAttr\", \"Attribute '\" + attrName + \"' is repeated.\", getPositionFromMatch(matches[i2]));\n      }\n    }\n    return true;\n  }\n  function validateNumberAmpersand(xmlData, i2) {\n    let re2 = /\\d/;\n    if (xmlData[i2] === \"x\") {\n      i2++;\n      re2 = /[\\da-fA-F]/;\n    }\n    for (; i2 < xmlData.length; i2++) {\n      if (xmlData[i2] === \";\")\n        return i2;\n      if (!xmlData[i2].match(re2))\n        break;\n    }\n    return -1;\n  }\n  function validateAmpersand(xmlData, i2) {\n    i2++;\n    if (xmlData[i2] === \";\")\n      return -1;\n    if (xmlData[i2] === \"#\") {\n      i2++;\n      return validateNumberAmpersand(xmlData, i2);\n    }\n    let count = 0;\n    for (; i2 < xmlData.length; i2++, count++) {\n      if (xmlData[i2].match(/\\w/) && count < 20)\n        continue;\n      if (xmlData[i2] === \";\")\n        break;\n      return -1;\n    }\n    return i2;\n  }\n  function getErrorObject(code, message, lineNumber) {\n    return {\n      err: {\n        code,\n        msg: message,\n        line: lineNumber.line || lineNumber,\n        col: lineNumber.col\n      }\n    };\n  }\n  function validateAttrName(attrName) {\n    return util2.isName(attrName);\n  }\n  function validateTagName(tagname) {\n    return util2.isName(tagname);\n  }\n  function getLineNumberForPosition(xmlData, index) {\n    const lines = xmlData.substring(0, index).split(/\\r?\\n/);\n    return {\n      line: lines.length,\n      // column number is last line's length + 1, because column numbering starts at 1:\n      col: lines[lines.length - 1].length + 1\n    };\n  }\n  function getPositionFromMatch(match) {\n    return match.startIndex + match[1].length;\n  }\n  return validator;\n}\nvar OptionsBuilder = {};\nvar hasRequiredOptionsBuilder;\nfunction requireOptionsBuilder() {\n  if (hasRequiredOptionsBuilder) return OptionsBuilder;\n  hasRequiredOptionsBuilder = 1;\n  const defaultOptions = {\n    preserveOrder: false,\n    attributeNamePrefix: \"@_\",\n    attributesGroupName: false,\n    textNodeName: \"#text\",\n    ignoreAttributes: true,\n    removeNSPrefix: false,\n    // remove NS from tag name or attribute name if true\n    allowBooleanAttributes: false,\n    //a tag can have attributes without any value\n    //ignoreRootElement : false,\n    parseTagValue: true,\n    parseAttributeValue: false,\n    trimValues: true,\n    //Trim string values of tag and attributes\n    cdataPropName: false,\n    numberParseOptions: {\n      hex: true,\n      leadingZeros: true,\n      eNotation: true\n    },\n    tagValueProcessor: function(tagName, val) {\n      return val;\n    },\n    attributeValueProcessor: function(attrName, val) {\n      return val;\n    },\n    stopNodes: [],\n    //nested tags will not be parsed even for errors\n    alwaysCreateTextNode: false,\n    isArray: () => false,\n    commentPropName: false,\n    unpairedTags: [],\n    processEntities: true,\n    htmlEntities: false,\n    ignoreDeclaration: false,\n    ignorePiTags: false,\n    transformTagName: false,\n    transformAttributeName: false,\n    updateTag: function(tagName, jPath, attrs) {\n      return tagName;\n    }\n    // skipEmptyListItem: false\n  };\n  const buildOptions = function(options) {\n    return Object.assign({}, defaultOptions, options);\n  };\n  OptionsBuilder.buildOptions = buildOptions;\n  OptionsBuilder.defaultOptions = defaultOptions;\n  return OptionsBuilder;\n}\nvar xmlNode;\nvar hasRequiredXmlNode;\nfunction requireXmlNode() {\n  if (hasRequiredXmlNode) return xmlNode;\n  hasRequiredXmlNode = 1;\n  class XmlNode {\n    constructor(tagname) {\n      this.tagname = tagname;\n      this.child = [];\n      this[\":@\"] = {};\n    }\n    add(key, val) {\n      if (key === \"__proto__\") key = \"#__proto__\";\n      this.child.push({ [key]: val });\n    }\n    addChild(node) {\n      if (node.tagname === \"__proto__\") node.tagname = \"#__proto__\";\n      if (node[\":@\"] && Object.keys(node[\":@\"]).length > 0) {\n        this.child.push({ [node.tagname]: node.child, [\":@\"]: node[\":@\"] });\n      } else {\n        this.child.push({ [node.tagname]: node.child });\n      }\n    }\n  }\n  xmlNode = XmlNode;\n  return xmlNode;\n}\nvar DocTypeReader;\nvar hasRequiredDocTypeReader;\nfunction requireDocTypeReader() {\n  if (hasRequiredDocTypeReader) return DocTypeReader;\n  hasRequiredDocTypeReader = 1;\n  const util2 = requireUtil();\n  function readDocType(xmlData, i2) {\n    const entities = {};\n    if (xmlData[i2 + 3] === \"O\" && xmlData[i2 + 4] === \"C\" && xmlData[i2 + 5] === \"T\" && xmlData[i2 + 6] === \"Y\" && xmlData[i2 + 7] === \"P\" && xmlData[i2 + 8] === \"E\") {\n      i2 = i2 + 9;\n      let angleBracketsCount = 1;\n      let hasBody = false, comment = false;\n      let exp = \"\";\n      for (; i2 < xmlData.length; i2++) {\n        if (xmlData[i2] === \"<\" && !comment) {\n          if (hasBody && isEntity(xmlData, i2)) {\n            i2 += 7;\n            let entityName, val;\n            [entityName, val, i2] = readEntityExp(xmlData, i2 + 1);\n            if (val.indexOf(\"&\") === -1)\n              entities[validateEntityName(entityName)] = {\n                regx: RegExp(`&${entityName};`, \"g\"),\n                val\n              };\n          } else if (hasBody && isElement(xmlData, i2)) i2 += 8;\n          else if (hasBody && isAttlist(xmlData, i2)) i2 += 8;\n          else if (hasBody && isNotation(xmlData, i2)) i2 += 9;\n          else comment = true;\n          angleBracketsCount++;\n          exp = \"\";\n        } else if (xmlData[i2] === \">\") {\n          if (comment) {\n            if (xmlData[i2 - 1] === \"-\" && xmlData[i2 - 2] === \"-\") {\n              comment = false;\n              angleBracketsCount--;\n            }\n          } else {\n            angleBracketsCount--;\n          }\n          if (angleBracketsCount === 0) {\n            break;\n          }\n        } else if (xmlData[i2] === \"[\") {\n          hasBody = true;\n        } else {\n          exp += xmlData[i2];\n        }\n      }\n      if (angleBracketsCount !== 0) {\n        throw new Error(`Unclosed DOCTYPE`);\n      }\n    } else {\n      throw new Error(`Invalid Tag instead of DOCTYPE`);\n    }\n    return { entities, i: i2 };\n  }\n  function readEntityExp(xmlData, i2) {\n    let entityName = \"\";\n    for (; i2 < xmlData.length && (xmlData[i2] !== \"'\" && xmlData[i2] !== '\"'); i2++) {\n      entityName += xmlData[i2];\n    }\n    entityName = entityName.trim();\n    if (entityName.indexOf(\" \") !== -1) throw new Error(\"External entites are not supported\");\n    const startChar = xmlData[i2++];\n    let val = \"\";\n    for (; i2 < xmlData.length && xmlData[i2] !== startChar; i2++) {\n      val += xmlData[i2];\n    }\n    return [entityName, val, i2];\n  }\n  function isEntity(xmlData, i2) {\n    if (xmlData[i2 + 1] === \"!\" && xmlData[i2 + 2] === \"E\" && xmlData[i2 + 3] === \"N\" && xmlData[i2 + 4] === \"T\" && xmlData[i2 + 5] === \"I\" && xmlData[i2 + 6] === \"T\" && xmlData[i2 + 7] === \"Y\") return true;\n    return false;\n  }\n  function isElement(xmlData, i2) {\n    if (xmlData[i2 + 1] === \"!\" && xmlData[i2 + 2] === \"E\" && xmlData[i2 + 3] === \"L\" && xmlData[i2 + 4] === \"E\" && xmlData[i2 + 5] === \"M\" && xmlData[i2 + 6] === \"E\" && xmlData[i2 + 7] === \"N\" && xmlData[i2 + 8] === \"T\") return true;\n    return false;\n  }\n  function isAttlist(xmlData, i2) {\n    if (xmlData[i2 + 1] === \"!\" && xmlData[i2 + 2] === \"A\" && xmlData[i2 + 3] === \"T\" && xmlData[i2 + 4] === \"T\" && xmlData[i2 + 5] === \"L\" && xmlData[i2 + 6] === \"I\" && xmlData[i2 + 7] === \"S\" && xmlData[i2 + 8] === \"T\") return true;\n    return false;\n  }\n  function isNotation(xmlData, i2) {\n    if (xmlData[i2 + 1] === \"!\" && xmlData[i2 + 2] === \"N\" && xmlData[i2 + 3] === \"O\" && xmlData[i2 + 4] === \"T\" && xmlData[i2 + 5] === \"A\" && xmlData[i2 + 6] === \"T\" && xmlData[i2 + 7] === \"I\" && xmlData[i2 + 8] === \"O\" && xmlData[i2 + 9] === \"N\") return true;\n    return false;\n  }\n  function validateEntityName(name) {\n    if (util2.isName(name))\n      return name;\n    else\n      throw new Error(`Invalid entity name ${name}`);\n  }\n  DocTypeReader = readDocType;\n  return DocTypeReader;\n}\nvar strnum;\nvar hasRequiredStrnum;\nfunction requireStrnum() {\n  if (hasRequiredStrnum) return strnum;\n  hasRequiredStrnum = 1;\n  const hexRegex = /^[-+]?0x[a-fA-F0-9]+$/;\n  const numRegex = /^([\\-\\+])?(0*)(\\.[0-9]+([eE]\\-?[0-9]+)?|[0-9]+(\\.[0-9]+([eE]\\-?[0-9]+)?)?)$/;\n  if (!Number.parseInt && window.parseInt) {\n    Number.parseInt = window.parseInt;\n  }\n  if (!Number.parseFloat && window.parseFloat) {\n    Number.parseFloat = window.parseFloat;\n  }\n  const consider = {\n    hex: true,\n    leadingZeros: true,\n    decimalPoint: \".\",\n    eNotation: true\n    //skipLike: /regex/\n  };\n  function toNumber(str, options = {}) {\n    options = Object.assign({}, consider, options);\n    if (!str || typeof str !== \"string\") return str;\n    let trimmedStr = str.trim();\n    if (options.skipLike !== void 0 && options.skipLike.test(trimmedStr)) return str;\n    else if (options.hex && hexRegex.test(trimmedStr)) {\n      return Number.parseInt(trimmedStr, 16);\n    } else {\n      const match = numRegex.exec(trimmedStr);\n      if (match) {\n        const sign = match[1];\n        const leadingZeros = match[2];\n        let numTrimmedByZeros = trimZeros(match[3]);\n        const eNotation = match[4] || match[6];\n        if (!options.leadingZeros && leadingZeros.length > 0 && sign && trimmedStr[2] !== \".\") return str;\n        else if (!options.leadingZeros && leadingZeros.length > 0 && !sign && trimmedStr[1] !== \".\") return str;\n        else {\n          const num = Number(trimmedStr);\n          const numStr = \"\" + num;\n          if (numStr.search(/[eE]/) !== -1) {\n            if (options.eNotation) return num;\n            else return str;\n          } else if (eNotation) {\n            if (options.eNotation) return num;\n            else return str;\n          } else if (trimmedStr.indexOf(\".\") !== -1) {\n            if (numStr === \"0\" && numTrimmedByZeros === \"\") return num;\n            else if (numStr === numTrimmedByZeros) return num;\n            else if (sign && numStr === \"-\" + numTrimmedByZeros) return num;\n            else return str;\n          }\n          if (leadingZeros) {\n            if (numTrimmedByZeros === numStr) return num;\n            else if (sign + numTrimmedByZeros === numStr) return num;\n            else return str;\n          }\n          if (trimmedStr === numStr) return num;\n          else if (trimmedStr === sign + numStr) return num;\n          return str;\n        }\n      } else {\n        return str;\n      }\n    }\n  }\n  function trimZeros(numStr) {\n    if (numStr && numStr.indexOf(\".\") !== -1) {\n      numStr = numStr.replace(/0+$/, \"\");\n      if (numStr === \".\") numStr = \"0\";\n      else if (numStr[0] === \".\") numStr = \"0\" + numStr;\n      else if (numStr[numStr.length - 1] === \".\") numStr = numStr.substr(0, numStr.length - 1);\n      return numStr;\n    }\n    return numStr;\n  }\n  strnum = toNumber;\n  return strnum;\n}\nvar ignoreAttributes;\nvar hasRequiredIgnoreAttributes;\nfunction requireIgnoreAttributes() {\n  if (hasRequiredIgnoreAttributes) return ignoreAttributes;\n  hasRequiredIgnoreAttributes = 1;\n  function getIgnoreAttributesFn(ignoreAttributes2) {\n    if (typeof ignoreAttributes2 === \"function\") {\n      return ignoreAttributes2;\n    }\n    if (Array.isArray(ignoreAttributes2)) {\n      return (attrName) => {\n        for (const pattern of ignoreAttributes2) {\n          if (typeof pattern === \"string\" && attrName === pattern) {\n            return true;\n          }\n          if (pattern instanceof RegExp && pattern.test(attrName)) {\n            return true;\n          }\n        }\n      };\n    }\n    return () => false;\n  }\n  ignoreAttributes = getIgnoreAttributesFn;\n  return ignoreAttributes;\n}\nvar OrderedObjParser_1;\nvar hasRequiredOrderedObjParser;\nfunction requireOrderedObjParser() {\n  if (hasRequiredOrderedObjParser) return OrderedObjParser_1;\n  hasRequiredOrderedObjParser = 1;\n  const util2 = requireUtil();\n  const xmlNode2 = requireXmlNode();\n  const readDocType = requireDocTypeReader();\n  const toNumber = requireStrnum();\n  const getIgnoreAttributesFn = requireIgnoreAttributes();\n  class OrderedObjParser {\n    constructor(options) {\n      this.options = options;\n      this.currentNode = null;\n      this.tagsNodeStack = [];\n      this.docTypeEntities = {};\n      this.lastEntities = {\n        \"apos\": { regex: /&(apos|#39|#x27);/g, val: \"'\" },\n        \"gt\": { regex: /&(gt|#62|#x3E);/g, val: \">\" },\n        \"lt\": { regex: /&(lt|#60|#x3C);/g, val: \"<\" },\n        \"quot\": { regex: /&(quot|#34|#x22);/g, val: '\"' }\n      };\n      this.ampEntity = { regex: /&(amp|#38|#x26);/g, val: \"&\" };\n      this.htmlEntities = {\n        \"space\": { regex: /&(nbsp|#160);/g, val: \" \" },\n        // \"lt\" : { regex: /&(lt|#60);/g, val: \"<\" },\n        // \"gt\" : { regex: /&(gt|#62);/g, val: \">\" },\n        // \"amp\" : { regex: /&(amp|#38);/g, val: \"&\" },\n        // \"quot\" : { regex: /&(quot|#34);/g, val: \"\\\"\" },\n        // \"apos\" : { regex: /&(apos|#39);/g, val: \"'\" },\n        \"cent\": { regex: /&(cent|#162);/g, val: \"¢\" },\n        \"pound\": { regex: /&(pound|#163);/g, val: \"£\" },\n        \"yen\": { regex: /&(yen|#165);/g, val: \"¥\" },\n        \"euro\": { regex: /&(euro|#8364);/g, val: \"€\" },\n        \"copyright\": { regex: /&(copy|#169);/g, val: \"©\" },\n        \"reg\": { regex: /&(reg|#174);/g, val: \"®\" },\n        \"inr\": { regex: /&(inr|#8377);/g, val: \"₹\" },\n        \"num_dec\": { regex: /&#([0-9]{1,7});/g, val: (_, str) => String.fromCharCode(Number.parseInt(str, 10)) },\n        \"num_hex\": { regex: /&#x([0-9a-fA-F]{1,6});/g, val: (_, str) => String.fromCharCode(Number.parseInt(str, 16)) }\n      };\n      this.addExternalEntities = addExternalEntities;\n      this.parseXml = parseXml;\n      this.parseTextData = parseTextData;\n      this.resolveNameSpace = resolveNameSpace;\n      this.buildAttributesMap = buildAttributesMap;\n      this.isItStopNode = isItStopNode;\n      this.replaceEntitiesValue = replaceEntitiesValue;\n      this.readStopNodeData = readStopNodeData;\n      this.saveTextToParentTag = saveTextToParentTag;\n      this.addChild = addChild;\n      this.ignoreAttributesFn = getIgnoreAttributesFn(this.options.ignoreAttributes);\n    }\n  }\n  function addExternalEntities(externalEntities) {\n    const entKeys = Object.keys(externalEntities);\n    for (let i2 = 0; i2 < entKeys.length; i2++) {\n      const ent = entKeys[i2];\n      this.lastEntities[ent] = {\n        regex: new RegExp(\"&\" + ent + \";\", \"g\"),\n        val: externalEntities[ent]\n      };\n    }\n  }\n  function parseTextData(val, tagName, jPath, dontTrim, hasAttributes, isLeafNode, escapeEntities) {\n    if (val !== void 0) {\n      if (this.options.trimValues && !dontTrim) {\n        val = val.trim();\n      }\n      if (val.length > 0) {\n        if (!escapeEntities) val = this.replaceEntitiesValue(val);\n        const newval = this.options.tagValueProcessor(tagName, val, jPath, hasAttributes, isLeafNode);\n        if (newval === null || newval === void 0) {\n          return val;\n        } else if (typeof newval !== typeof val || newval !== val) {\n          return newval;\n        } else if (this.options.trimValues) {\n          return parseValue(val, this.options.parseTagValue, this.options.numberParseOptions);\n        } else {\n          const trimmedVal = val.trim();\n          if (trimmedVal === val) {\n            return parseValue(val, this.options.parseTagValue, this.options.numberParseOptions);\n          } else {\n            return val;\n          }\n        }\n      }\n    }\n  }\n  function resolveNameSpace(tagname) {\n    if (this.options.removeNSPrefix) {\n      const tags = tagname.split(\":\");\n      const prefix = tagname.charAt(0) === \"/\" ? \"/\" : \"\";\n      if (tags[0] === \"xmlns\") {\n        return \"\";\n      }\n      if (tags.length === 2) {\n        tagname = prefix + tags[1];\n      }\n    }\n    return tagname;\n  }\n  const attrsRegx = new RegExp(`([^\\\\s=]+)\\\\s*(=\\\\s*(['\"])([\\\\s\\\\S]*?)\\\\3)?`, \"gm\");\n  function buildAttributesMap(attrStr, jPath, tagName) {\n    if (this.options.ignoreAttributes !== true && typeof attrStr === \"string\") {\n      const matches = util2.getAllMatches(attrStr, attrsRegx);\n      const len = matches.length;\n      const attrs = {};\n      for (let i2 = 0; i2 < len; i2++) {\n        const attrName = this.resolveNameSpace(matches[i2][1]);\n        if (this.ignoreAttributesFn(attrName, jPath)) {\n          continue;\n        }\n        let oldVal = matches[i2][4];\n        let aName = this.options.attributeNamePrefix + attrName;\n        if (attrName.length) {\n          if (this.options.transformAttributeName) {\n            aName = this.options.transformAttributeName(aName);\n          }\n          if (aName === \"__proto__\") aName = \"#__proto__\";\n          if (oldVal !== void 0) {\n            if (this.options.trimValues) {\n              oldVal = oldVal.trim();\n            }\n            oldVal = this.replaceEntitiesValue(oldVal);\n            const newVal = this.options.attributeValueProcessor(attrName, oldVal, jPath);\n            if (newVal === null || newVal === void 0) {\n              attrs[aName] = oldVal;\n            } else if (typeof newVal !== typeof oldVal || newVal !== oldVal) {\n              attrs[aName] = newVal;\n            } else {\n              attrs[aName] = parseValue(\n                oldVal,\n                this.options.parseAttributeValue,\n                this.options.numberParseOptions\n              );\n            }\n          } else if (this.options.allowBooleanAttributes) {\n            attrs[aName] = true;\n          }\n        }\n      }\n      if (!Object.keys(attrs).length) {\n        return;\n      }\n      if (this.options.attributesGroupName) {\n        const attrCollection = {};\n        attrCollection[this.options.attributesGroupName] = attrs;\n        return attrCollection;\n      }\n      return attrs;\n    }\n  }\n  const parseXml = function(xmlData) {\n    xmlData = xmlData.replace(/\\r\\n?/g, \"\\n\");\n    const xmlObj = new xmlNode2(\"!xml\");\n    let currentNode = xmlObj;\n    let textData = \"\";\n    let jPath = \"\";\n    for (let i2 = 0; i2 < xmlData.length; i2++) {\n      const ch = xmlData[i2];\n      if (ch === \"<\") {\n        if (xmlData[i2 + 1] === \"/\") {\n          const closeIndex = findClosingIndex(xmlData, \">\", i2, \"Closing Tag is not closed.\");\n          let tagName = xmlData.substring(i2 + 2, closeIndex).trim();\n          if (this.options.removeNSPrefix) {\n            const colonIndex = tagName.indexOf(\":\");\n            if (colonIndex !== -1) {\n              tagName = tagName.substr(colonIndex + 1);\n            }\n          }\n          if (this.options.transformTagName) {\n            tagName = this.options.transformTagName(tagName);\n          }\n          if (currentNode) {\n            textData = this.saveTextToParentTag(textData, currentNode, jPath);\n          }\n          const lastTagName = jPath.substring(jPath.lastIndexOf(\".\") + 1);\n          if (tagName && this.options.unpairedTags.indexOf(tagName) !== -1) {\n            throw new Error(`Unpaired tag can not be used as closing tag: </${tagName}>`);\n          }\n          let propIndex = 0;\n          if (lastTagName && this.options.unpairedTags.indexOf(lastTagName) !== -1) {\n            propIndex = jPath.lastIndexOf(\".\", jPath.lastIndexOf(\".\") - 1);\n            this.tagsNodeStack.pop();\n          } else {\n            propIndex = jPath.lastIndexOf(\".\");\n          }\n          jPath = jPath.substring(0, propIndex);\n          currentNode = this.tagsNodeStack.pop();\n          textData = \"\";\n          i2 = closeIndex;\n        } else if (xmlData[i2 + 1] === \"?\") {\n          let tagData = readTagExp(xmlData, i2, false, \"?>\");\n          if (!tagData) throw new Error(\"Pi Tag is not closed.\");\n          textData = this.saveTextToParentTag(textData, currentNode, jPath);\n          if (this.options.ignoreDeclaration && tagData.tagName === \"?xml\" || this.options.ignorePiTags) ;\n          else {\n            const childNode = new xmlNode2(tagData.tagName);\n            childNode.add(this.options.textNodeName, \"\");\n            if (tagData.tagName !== tagData.tagExp && tagData.attrExpPresent) {\n              childNode[\":@\"] = this.buildAttributesMap(tagData.tagExp, jPath, tagData.tagName);\n            }\n            this.addChild(currentNode, childNode, jPath);\n          }\n          i2 = tagData.closeIndex + 1;\n        } else if (xmlData.substr(i2 + 1, 3) === \"!--\") {\n          const endIndex = findClosingIndex(xmlData, \"-->\", i2 + 4, \"Comment is not closed.\");\n          if (this.options.commentPropName) {\n            const comment = xmlData.substring(i2 + 4, endIndex - 2);\n            textData = this.saveTextToParentTag(textData, currentNode, jPath);\n            currentNode.add(this.options.commentPropName, [{ [this.options.textNodeName]: comment }]);\n          }\n          i2 = endIndex;\n        } else if (xmlData.substr(i2 + 1, 2) === \"!D\") {\n          const result = readDocType(xmlData, i2);\n          this.docTypeEntities = result.entities;\n          i2 = result.i;\n        } else if (xmlData.substr(i2 + 1, 2) === \"![\") {\n          const closeIndex = findClosingIndex(xmlData, \"]]>\", i2, \"CDATA is not closed.\") - 2;\n          const tagExp = xmlData.substring(i2 + 9, closeIndex);\n          textData = this.saveTextToParentTag(textData, currentNode, jPath);\n          let val = this.parseTextData(tagExp, currentNode.tagname, jPath, true, false, true, true);\n          if (val == void 0) val = \"\";\n          if (this.options.cdataPropName) {\n            currentNode.add(this.options.cdataPropName, [{ [this.options.textNodeName]: tagExp }]);\n          } else {\n            currentNode.add(this.options.textNodeName, val);\n          }\n          i2 = closeIndex + 2;\n        } else {\n          let result = readTagExp(xmlData, i2, this.options.removeNSPrefix);\n          let tagName = result.tagName;\n          const rawTagName = result.rawTagName;\n          let tagExp = result.tagExp;\n          let attrExpPresent = result.attrExpPresent;\n          let closeIndex = result.closeIndex;\n          if (this.options.transformTagName) {\n            tagName = this.options.transformTagName(tagName);\n          }\n          if (currentNode && textData) {\n            if (currentNode.tagname !== \"!xml\") {\n              textData = this.saveTextToParentTag(textData, currentNode, jPath, false);\n            }\n          }\n          const lastTag = currentNode;\n          if (lastTag && this.options.unpairedTags.indexOf(lastTag.tagname) !== -1) {\n            currentNode = this.tagsNodeStack.pop();\n            jPath = jPath.substring(0, jPath.lastIndexOf(\".\"));\n          }\n          if (tagName !== xmlObj.tagname) {\n            jPath += jPath ? \".\" + tagName : tagName;\n          }\n          if (this.isItStopNode(this.options.stopNodes, jPath, tagName)) {\n            let tagContent = \"\";\n            if (tagExp.length > 0 && tagExp.lastIndexOf(\"/\") === tagExp.length - 1) {\n              if (tagName[tagName.length - 1] === \"/\") {\n                tagName = tagName.substr(0, tagName.length - 1);\n                jPath = jPath.substr(0, jPath.length - 1);\n                tagExp = tagName;\n              } else {\n                tagExp = tagExp.substr(0, tagExp.length - 1);\n              }\n              i2 = result.closeIndex;\n            } else if (this.options.unpairedTags.indexOf(tagName) !== -1) {\n              i2 = result.closeIndex;\n            } else {\n              const result2 = this.readStopNodeData(xmlData, rawTagName, closeIndex + 1);\n              if (!result2) throw new Error(`Unexpected end of ${rawTagName}`);\n              i2 = result2.i;\n              tagContent = result2.tagContent;\n            }\n            const childNode = new xmlNode2(tagName);\n            if (tagName !== tagExp && attrExpPresent) {\n              childNode[\":@\"] = this.buildAttributesMap(tagExp, jPath, tagName);\n            }\n            if (tagContent) {\n              tagContent = this.parseTextData(tagContent, tagName, jPath, true, attrExpPresent, true, true);\n            }\n            jPath = jPath.substr(0, jPath.lastIndexOf(\".\"));\n            childNode.add(this.options.textNodeName, tagContent);\n            this.addChild(currentNode, childNode, jPath);\n          } else {\n            if (tagExp.length > 0 && tagExp.lastIndexOf(\"/\") === tagExp.length - 1) {\n              if (tagName[tagName.length - 1] === \"/\") {\n                tagName = tagName.substr(0, tagName.length - 1);\n                jPath = jPath.substr(0, jPath.length - 1);\n                tagExp = tagName;\n              } else {\n                tagExp = tagExp.substr(0, tagExp.length - 1);\n              }\n              if (this.options.transformTagName) {\n                tagName = this.options.transformTagName(tagName);\n              }\n              const childNode = new xmlNode2(tagName);\n              if (tagName !== tagExp && attrExpPresent) {\n                childNode[\":@\"] = this.buildAttributesMap(tagExp, jPath, tagName);\n              }\n              this.addChild(currentNode, childNode, jPath);\n              jPath = jPath.substr(0, jPath.lastIndexOf(\".\"));\n            } else {\n              const childNode = new xmlNode2(tagName);\n              this.tagsNodeStack.push(currentNode);\n              if (tagName !== tagExp && attrExpPresent) {\n                childNode[\":@\"] = this.buildAttributesMap(tagExp, jPath, tagName);\n              }\n              this.addChild(currentNode, childNode, jPath);\n              currentNode = childNode;\n            }\n            textData = \"\";\n            i2 = closeIndex;\n          }\n        }\n      } else {\n        textData += xmlData[i2];\n      }\n    }\n    return xmlObj.child;\n  };\n  function addChild(currentNode, childNode, jPath) {\n    const result = this.options.updateTag(childNode.tagname, jPath, childNode[\":@\"]);\n    if (result === false) ;\n    else if (typeof result === \"string\") {\n      childNode.tagname = result;\n      currentNode.addChild(childNode);\n    } else {\n      currentNode.addChild(childNode);\n    }\n  }\n  const replaceEntitiesValue = function(val) {\n    if (this.options.processEntities) {\n      for (let entityName in this.docTypeEntities) {\n        const entity = this.docTypeEntities[entityName];\n        val = val.replace(entity.regx, entity.val);\n      }\n      for (let entityName in this.lastEntities) {\n        const entity = this.lastEntities[entityName];\n        val = val.replace(entity.regex, entity.val);\n      }\n      if (this.options.htmlEntities) {\n        for (let entityName in this.htmlEntities) {\n          const entity = this.htmlEntities[entityName];\n          val = val.replace(entity.regex, entity.val);\n        }\n      }\n      val = val.replace(this.ampEntity.regex, this.ampEntity.val);\n    }\n    return val;\n  };\n  function saveTextToParentTag(textData, currentNode, jPath, isLeafNode) {\n    if (textData) {\n      if (isLeafNode === void 0) isLeafNode = Object.keys(currentNode.child).length === 0;\n      textData = this.parseTextData(\n        textData,\n        currentNode.tagname,\n        jPath,\n        false,\n        currentNode[\":@\"] ? Object.keys(currentNode[\":@\"]).length !== 0 : false,\n        isLeafNode\n      );\n      if (textData !== void 0 && textData !== \"\")\n        currentNode.add(this.options.textNodeName, textData);\n      textData = \"\";\n    }\n    return textData;\n  }\n  function isItStopNode(stopNodes, jPath, currentTagName) {\n    const allNodesExp = \"*.\" + currentTagName;\n    for (const stopNodePath in stopNodes) {\n      const stopNodeExp = stopNodes[stopNodePath];\n      if (allNodesExp === stopNodeExp || jPath === stopNodeExp) return true;\n    }\n    return false;\n  }\n  function tagExpWithClosingIndex(xmlData, i2, closingChar = \">\") {\n    let attrBoundary;\n    let tagExp = \"\";\n    for (let index = i2; index < xmlData.length; index++) {\n      let ch = xmlData[index];\n      if (attrBoundary) {\n        if (ch === attrBoundary) attrBoundary = \"\";\n      } else if (ch === '\"' || ch === \"'\") {\n        attrBoundary = ch;\n      } else if (ch === closingChar[0]) {\n        if (closingChar[1]) {\n          if (xmlData[index + 1] === closingChar[1]) {\n            return {\n              data: tagExp,\n              index\n            };\n          }\n        } else {\n          return {\n            data: tagExp,\n            index\n          };\n        }\n      } else if (ch === \"\t\") {\n        ch = \" \";\n      }\n      tagExp += ch;\n    }\n  }\n  function findClosingIndex(xmlData, str, i2, errMsg) {\n    const closingIndex = xmlData.indexOf(str, i2);\n    if (closingIndex === -1) {\n      throw new Error(errMsg);\n    } else {\n      return closingIndex + str.length - 1;\n    }\n  }\n  function readTagExp(xmlData, i2, removeNSPrefix, closingChar = \">\") {\n    const result = tagExpWithClosingIndex(xmlData, i2 + 1, closingChar);\n    if (!result) return;\n    let tagExp = result.data;\n    const closeIndex = result.index;\n    const separatorIndex = tagExp.search(/\\s/);\n    let tagName = tagExp;\n    let attrExpPresent = true;\n    if (separatorIndex !== -1) {\n      tagName = tagExp.substring(0, separatorIndex);\n      tagExp = tagExp.substring(separatorIndex + 1).trimStart();\n    }\n    const rawTagName = tagName;\n    if (removeNSPrefix) {\n      const colonIndex = tagName.indexOf(\":\");\n      if (colonIndex !== -1) {\n        tagName = tagName.substr(colonIndex + 1);\n        attrExpPresent = tagName !== result.data.substr(colonIndex + 1);\n      }\n    }\n    return {\n      tagName,\n      tagExp,\n      closeIndex,\n      attrExpPresent,\n      rawTagName\n    };\n  }\n  function readStopNodeData(xmlData, tagName, i2) {\n    const startIndex = i2;\n    let openTagCount = 1;\n    for (; i2 < xmlData.length; i2++) {\n      if (xmlData[i2] === \"<\") {\n        if (xmlData[i2 + 1] === \"/\") {\n          const closeIndex = findClosingIndex(xmlData, \">\", i2, `${tagName} is not closed`);\n          let closeTagName = xmlData.substring(i2 + 2, closeIndex).trim();\n          if (closeTagName === tagName) {\n            openTagCount--;\n            if (openTagCount === 0) {\n              return {\n                tagContent: xmlData.substring(startIndex, i2),\n                i: closeIndex\n              };\n            }\n          }\n          i2 = closeIndex;\n        } else if (xmlData[i2 + 1] === \"?\") {\n          const closeIndex = findClosingIndex(xmlData, \"?>\", i2 + 1, \"StopNode is not closed.\");\n          i2 = closeIndex;\n        } else if (xmlData.substr(i2 + 1, 3) === \"!--\") {\n          const closeIndex = findClosingIndex(xmlData, \"-->\", i2 + 3, \"StopNode is not closed.\");\n          i2 = closeIndex;\n        } else if (xmlData.substr(i2 + 1, 2) === \"![\") {\n          const closeIndex = findClosingIndex(xmlData, \"]]>\", i2, \"StopNode is not closed.\") - 2;\n          i2 = closeIndex;\n        } else {\n          const tagData = readTagExp(xmlData, i2, \">\");\n          if (tagData) {\n            const openTagName = tagData && tagData.tagName;\n            if (openTagName === tagName && tagData.tagExp[tagData.tagExp.length - 1] !== \"/\") {\n              openTagCount++;\n            }\n            i2 = tagData.closeIndex;\n          }\n        }\n      }\n    }\n  }\n  function parseValue(val, shouldParse, options) {\n    if (shouldParse && typeof val === \"string\") {\n      const newval = val.trim();\n      if (newval === \"true\") return true;\n      else if (newval === \"false\") return false;\n      else return toNumber(val, options);\n    } else {\n      if (util2.isExist(val)) {\n        return val;\n      } else {\n        return \"\";\n      }\n    }\n  }\n  OrderedObjParser_1 = OrderedObjParser;\n  return OrderedObjParser_1;\n}\nvar node2json = {};\nvar hasRequiredNode2json;\nfunction requireNode2json() {\n  if (hasRequiredNode2json) return node2json;\n  hasRequiredNode2json = 1;\n  function prettify(node, options) {\n    return compress(node, options);\n  }\n  function compress(arr, options, jPath) {\n    let text;\n    const compressedObj = {};\n    for (let i2 = 0; i2 < arr.length; i2++) {\n      const tagObj = arr[i2];\n      const property = propName(tagObj);\n      let newJpath = \"\";\n      if (jPath === void 0) newJpath = property;\n      else newJpath = jPath + \".\" + property;\n      if (property === options.textNodeName) {\n        if (text === void 0) text = tagObj[property];\n        else text += \"\" + tagObj[property];\n      } else if (property === void 0) {\n        continue;\n      } else if (tagObj[property]) {\n        let val = compress(tagObj[property], options, newJpath);\n        const isLeaf = isLeafTag(val, options);\n        if (tagObj[\":@\"]) {\n          assignAttributes(val, tagObj[\":@\"], newJpath, options);\n        } else if (Object.keys(val).length === 1 && val[options.textNodeName] !== void 0 && !options.alwaysCreateTextNode) {\n          val = val[options.textNodeName];\n        } else if (Object.keys(val).length === 0) {\n          if (options.alwaysCreateTextNode) val[options.textNodeName] = \"\";\n          else val = \"\";\n        }\n        if (compressedObj[property] !== void 0 && compressedObj.hasOwnProperty(property)) {\n          if (!Array.isArray(compressedObj[property])) {\n            compressedObj[property] = [compressedObj[property]];\n          }\n          compressedObj[property].push(val);\n        } else {\n          if (options.isArray(property, newJpath, isLeaf)) {\n            compressedObj[property] = [val];\n          } else {\n            compressedObj[property] = val;\n          }\n        }\n      }\n    }\n    if (typeof text === \"string\") {\n      if (text.length > 0) compressedObj[options.textNodeName] = text;\n    } else if (text !== void 0) compressedObj[options.textNodeName] = text;\n    return compressedObj;\n  }\n  function propName(obj) {\n    const keys = Object.keys(obj);\n    for (let i2 = 0; i2 < keys.length; i2++) {\n      const key = keys[i2];\n      if (key !== \":@\") return key;\n    }\n  }\n  function assignAttributes(obj, attrMap, jpath, options) {\n    if (attrMap) {\n      const keys = Object.keys(attrMap);\n      const len = keys.length;\n      for (let i2 = 0; i2 < len; i2++) {\n        const atrrName = keys[i2];\n        if (options.isArray(atrrName, jpath + \".\" + atrrName, true, true)) {\n          obj[atrrName] = [attrMap[atrrName]];\n        } else {\n          obj[atrrName] = attrMap[atrrName];\n        }\n      }\n    }\n  }\n  function isLeafTag(obj, options) {\n    const { textNodeName } = options;\n    const propCount = Object.keys(obj).length;\n    if (propCount === 0) {\n      return true;\n    }\n    if (propCount === 1 && (obj[textNodeName] || typeof obj[textNodeName] === \"boolean\" || obj[textNodeName] === 0)) {\n      return true;\n    }\n    return false;\n  }\n  node2json.prettify = prettify;\n  return node2json;\n}\nvar XMLParser_1;\nvar hasRequiredXMLParser;\nfunction requireXMLParser() {\n  if (hasRequiredXMLParser) return XMLParser_1;\n  hasRequiredXMLParser = 1;\n  const { buildOptions } = requireOptionsBuilder();\n  const OrderedObjParser = requireOrderedObjParser();\n  const { prettify } = requireNode2json();\n  const validator2 = requireValidator();\n  class XMLParser {\n    constructor(options) {\n      this.externalEntities = {};\n      this.options = buildOptions(options);\n    }\n    /**\n     * Parse XML dats to JS object \n     * @param {string|Buffer} xmlData \n     * @param {boolean|Object} validationOption \n     */\n    parse(xmlData, validationOption) {\n      if (typeof xmlData === \"string\") ;\n      else if (xmlData.toString) {\n        xmlData = xmlData.toString();\n      } else {\n        throw new Error(\"XML data is accepted in String or Bytes[] form.\");\n      }\n      if (validationOption) {\n        if (validationOption === true) validationOption = {};\n        const result = validator2.validate(xmlData, validationOption);\n        if (result !== true) {\n          throw Error(`${result.err.msg}:${result.err.line}:${result.err.col}`);\n        }\n      }\n      const orderedObjParser = new OrderedObjParser(this.options);\n      orderedObjParser.addExternalEntities(this.externalEntities);\n      const orderedResult = orderedObjParser.parseXml(xmlData);\n      if (this.options.preserveOrder || orderedResult === void 0) return orderedResult;\n      else return prettify(orderedResult, this.options);\n    }\n    /**\n     * Add Entity which is not by default supported by this library\n     * @param {string} key \n     * @param {string} value \n     */\n    addEntity(key, value) {\n      if (value.indexOf(\"&\") !== -1) {\n        throw new Error(\"Entity value can't have '&'\");\n      } else if (key.indexOf(\"&\") !== -1 || key.indexOf(\";\") !== -1) {\n        throw new Error(\"An entity must be set without '&' and ';'. Eg. use '#xD' for '&#xD;'\");\n      } else if (value === \"&\") {\n        throw new Error(\"An entity with value '&' is not permitted\");\n      } else {\n        this.externalEntities[key] = value;\n      }\n    }\n  }\n  XMLParser_1 = XMLParser;\n  return XMLParser_1;\n}\nvar orderedJs2Xml;\nvar hasRequiredOrderedJs2Xml;\nfunction requireOrderedJs2Xml() {\n  if (hasRequiredOrderedJs2Xml) return orderedJs2Xml;\n  hasRequiredOrderedJs2Xml = 1;\n  const EOL = \"\\n\";\n  function toXml(jArray, options) {\n    let indentation = \"\";\n    if (options.format && options.indentBy.length > 0) {\n      indentation = EOL;\n    }\n    return arrToStr(jArray, options, \"\", indentation);\n  }\n  function arrToStr(arr, options, jPath, indentation) {\n    let xmlStr = \"\";\n    let isPreviousElementTag = false;\n    for (let i2 = 0; i2 < arr.length; i2++) {\n      const tagObj = arr[i2];\n      const tagName = propName(tagObj);\n      if (tagName === void 0) continue;\n      let newJPath = \"\";\n      if (jPath.length === 0) newJPath = tagName;\n      else newJPath = `${jPath}.${tagName}`;\n      if (tagName === options.textNodeName) {\n        let tagText = tagObj[tagName];\n        if (!isStopNode(newJPath, options)) {\n          tagText = options.tagValueProcessor(tagName, tagText);\n          tagText = replaceEntitiesValue(tagText, options);\n        }\n        if (isPreviousElementTag) {\n          xmlStr += indentation;\n        }\n        xmlStr += tagText;\n        isPreviousElementTag = false;\n        continue;\n      } else if (tagName === options.cdataPropName) {\n        if (isPreviousElementTag) {\n          xmlStr += indentation;\n        }\n        xmlStr += `<![CDATA[${tagObj[tagName][0][options.textNodeName]}]]>`;\n        isPreviousElementTag = false;\n        continue;\n      } else if (tagName === options.commentPropName) {\n        xmlStr += indentation + `<!--${tagObj[tagName][0][options.textNodeName]}-->`;\n        isPreviousElementTag = true;\n        continue;\n      } else if (tagName[0] === \"?\") {\n        const attStr2 = attr_to_str(tagObj[\":@\"], options);\n        const tempInd = tagName === \"?xml\" ? \"\" : indentation;\n        let piTextNodeName = tagObj[tagName][0][options.textNodeName];\n        piTextNodeName = piTextNodeName.length !== 0 ? \" \" + piTextNodeName : \"\";\n        xmlStr += tempInd + `<${tagName}${piTextNodeName}${attStr2}?>`;\n        isPreviousElementTag = true;\n        continue;\n      }\n      let newIdentation = indentation;\n      if (newIdentation !== \"\") {\n        newIdentation += options.indentBy;\n      }\n      const attStr = attr_to_str(tagObj[\":@\"], options);\n      const tagStart = indentation + `<${tagName}${attStr}`;\n      const tagValue = arrToStr(tagObj[tagName], options, newJPath, newIdentation);\n      if (options.unpairedTags.indexOf(tagName) !== -1) {\n        if (options.suppressUnpairedNode) xmlStr += tagStart + \">\";\n        else xmlStr += tagStart + \"/>\";\n      } else if ((!tagValue || tagValue.length === 0) && options.suppressEmptyNode) {\n        xmlStr += tagStart + \"/>\";\n      } else if (tagValue && tagValue.endsWith(\">\")) {\n        xmlStr += tagStart + `>${tagValue}${indentation}</${tagName}>`;\n      } else {\n        xmlStr += tagStart + \">\";\n        if (tagValue && indentation !== \"\" && (tagValue.includes(\"/>\") || tagValue.includes(\"</\"))) {\n          xmlStr += indentation + options.indentBy + tagValue + indentation;\n        } else {\n          xmlStr += tagValue;\n        }\n        xmlStr += `</${tagName}>`;\n      }\n      isPreviousElementTag = true;\n    }\n    return xmlStr;\n  }\n  function propName(obj) {\n    const keys = Object.keys(obj);\n    for (let i2 = 0; i2 < keys.length; i2++) {\n      const key = keys[i2];\n      if (!obj.hasOwnProperty(key)) continue;\n      if (key !== \":@\") return key;\n    }\n  }\n  function attr_to_str(attrMap, options) {\n    let attrStr = \"\";\n    if (attrMap && !options.ignoreAttributes) {\n      for (let attr in attrMap) {\n        if (!attrMap.hasOwnProperty(attr)) continue;\n        let attrVal = options.attributeValueProcessor(attr, attrMap[attr]);\n        attrVal = replaceEntitiesValue(attrVal, options);\n        if (attrVal === true && options.suppressBooleanAttributes) {\n          attrStr += ` ${attr.substr(options.attributeNamePrefix.length)}`;\n        } else {\n          attrStr += ` ${attr.substr(options.attributeNamePrefix.length)}=\"${attrVal}\"`;\n        }\n      }\n    }\n    return attrStr;\n  }\n  function isStopNode(jPath, options) {\n    jPath = jPath.substr(0, jPath.length - options.textNodeName.length - 1);\n    let tagName = jPath.substr(jPath.lastIndexOf(\".\") + 1);\n    for (let index in options.stopNodes) {\n      if (options.stopNodes[index] === jPath || options.stopNodes[index] === \"*.\" + tagName) return true;\n    }\n    return false;\n  }\n  function replaceEntitiesValue(textValue, options) {\n    if (textValue && textValue.length > 0 && options.processEntities) {\n      for (let i2 = 0; i2 < options.entities.length; i2++) {\n        const entity = options.entities[i2];\n        textValue = textValue.replace(entity.regex, entity.val);\n      }\n    }\n    return textValue;\n  }\n  orderedJs2Xml = toXml;\n  return orderedJs2Xml;\n}\nvar json2xml;\nvar hasRequiredJson2xml;\nfunction requireJson2xml() {\n  if (hasRequiredJson2xml) return json2xml;\n  hasRequiredJson2xml = 1;\n  const buildFromOrderedJs = requireOrderedJs2Xml();\n  const getIgnoreAttributesFn = requireIgnoreAttributes();\n  const defaultOptions = {\n    attributeNamePrefix: \"@_\",\n    attributesGroupName: false,\n    textNodeName: \"#text\",\n    ignoreAttributes: true,\n    cdataPropName: false,\n    format: false,\n    indentBy: \"  \",\n    suppressEmptyNode: false,\n    suppressUnpairedNode: true,\n    suppressBooleanAttributes: true,\n    tagValueProcessor: function(key, a2) {\n      return a2;\n    },\n    attributeValueProcessor: function(attrName, a2) {\n      return a2;\n    },\n    preserveOrder: false,\n    commentPropName: false,\n    unpairedTags: [],\n    entities: [\n      { regex: new RegExp(\"&\", \"g\"), val: \"&amp;\" },\n      //it must be on top\n      { regex: new RegExp(\">\", \"g\"), val: \"&gt;\" },\n      { regex: new RegExp(\"<\", \"g\"), val: \"&lt;\" },\n      { regex: new RegExp(\"'\", \"g\"), val: \"&apos;\" },\n      { regex: new RegExp('\"', \"g\"), val: \"&quot;\" }\n    ],\n    processEntities: true,\n    stopNodes: [],\n    // transformTagName: false,\n    // transformAttributeName: false,\n    oneListGroup: false\n  };\n  function Builder(options) {\n    this.options = Object.assign({}, defaultOptions, options);\n    if (this.options.ignoreAttributes === true || this.options.attributesGroupName) {\n      this.isAttribute = function() {\n        return false;\n      };\n    } else {\n      this.ignoreAttributesFn = getIgnoreAttributesFn(this.options.ignoreAttributes);\n      this.attrPrefixLen = this.options.attributeNamePrefix.length;\n      this.isAttribute = isAttribute;\n    }\n    this.processTextOrObjNode = processTextOrObjNode;\n    if (this.options.format) {\n      this.indentate = indentate;\n      this.tagEndChar = \">\\n\";\n      this.newLine = \"\\n\";\n    } else {\n      this.indentate = function() {\n        return \"\";\n      };\n      this.tagEndChar = \">\";\n      this.newLine = \"\";\n    }\n  }\n  Builder.prototype.build = function(jObj) {\n    if (this.options.preserveOrder) {\n      return buildFromOrderedJs(jObj, this.options);\n    } else {\n      if (Array.isArray(jObj) && this.options.arrayNodeName && this.options.arrayNodeName.length > 1) {\n        jObj = {\n          [this.options.arrayNodeName]: jObj\n        };\n      }\n      return this.j2x(jObj, 0, []).val;\n    }\n  };\n  Builder.prototype.j2x = function(jObj, level, ajPath) {\n    let attrStr = \"\";\n    let val = \"\";\n    const jPath = ajPath.join(\".\");\n    for (let key in jObj) {\n      if (!Object.prototype.hasOwnProperty.call(jObj, key)) continue;\n      if (typeof jObj[key] === \"undefined\") {\n        if (this.isAttribute(key)) {\n          val += \"\";\n        }\n      } else if (jObj[key] === null) {\n        if (this.isAttribute(key)) {\n          val += \"\";\n        } else if (key[0] === \"?\") {\n          val += this.indentate(level) + \"<\" + key + \"?\" + this.tagEndChar;\n        } else {\n          val += this.indentate(level) + \"<\" + key + \"/\" + this.tagEndChar;\n        }\n      } else if (jObj[key] instanceof Date) {\n        val += this.buildTextValNode(jObj[key], key, \"\", level);\n      } else if (typeof jObj[key] !== \"object\") {\n        const attr = this.isAttribute(key);\n        if (attr && !this.ignoreAttributesFn(attr, jPath)) {\n          attrStr += this.buildAttrPairStr(attr, \"\" + jObj[key]);\n        } else if (!attr) {\n          if (key === this.options.textNodeName) {\n            let newval = this.options.tagValueProcessor(key, \"\" + jObj[key]);\n            val += this.replaceEntitiesValue(newval);\n          } else {\n            val += this.buildTextValNode(jObj[key], key, \"\", level);\n          }\n        }\n      } else if (Array.isArray(jObj[key])) {\n        const arrLen = jObj[key].length;\n        let listTagVal = \"\";\n        let listTagAttr = \"\";\n        for (let j2 = 0; j2 < arrLen; j2++) {\n          const item = jObj[key][j2];\n          if (typeof item === \"undefined\") ;\n          else if (item === null) {\n            if (key[0] === \"?\") val += this.indentate(level) + \"<\" + key + \"?\" + this.tagEndChar;\n            else val += this.indentate(level) + \"<\" + key + \"/\" + this.tagEndChar;\n          } else if (typeof item === \"object\") {\n            if (this.options.oneListGroup) {\n              const result = this.j2x(item, level + 1, ajPath.concat(key));\n              listTagVal += result.val;\n              if (this.options.attributesGroupName && item.hasOwnProperty(this.options.attributesGroupName)) {\n                listTagAttr += result.attrStr;\n              }\n            } else {\n              listTagVal += this.processTextOrObjNode(item, key, level, ajPath);\n            }\n          } else {\n            if (this.options.oneListGroup) {\n              let textValue = this.options.tagValueProcessor(key, item);\n              textValue = this.replaceEntitiesValue(textValue);\n              listTagVal += textValue;\n            } else {\n              listTagVal += this.buildTextValNode(item, key, \"\", level);\n            }\n          }\n        }\n        if (this.options.oneListGroup) {\n          listTagVal = this.buildObjectNode(listTagVal, key, listTagAttr, level);\n        }\n        val += listTagVal;\n      } else {\n        if (this.options.attributesGroupName && key === this.options.attributesGroupName) {\n          const Ks = Object.keys(jObj[key]);\n          const L = Ks.length;\n          for (let j2 = 0; j2 < L; j2++) {\n            attrStr += this.buildAttrPairStr(Ks[j2], \"\" + jObj[key][Ks[j2]]);\n          }\n        } else {\n          val += this.processTextOrObjNode(jObj[key], key, level, ajPath);\n        }\n      }\n    }\n    return { attrStr, val };\n  };\n  Builder.prototype.buildAttrPairStr = function(attrName, val) {\n    val = this.options.attributeValueProcessor(attrName, \"\" + val);\n    val = this.replaceEntitiesValue(val);\n    if (this.options.suppressBooleanAttributes && val === \"true\") {\n      return \" \" + attrName;\n    } else return \" \" + attrName + '=\"' + val + '\"';\n  };\n  function processTextOrObjNode(object, key, level, ajPath) {\n    const result = this.j2x(object, level + 1, ajPath.concat(key));\n    if (object[this.options.textNodeName] !== void 0 && Object.keys(object).length === 1) {\n      return this.buildTextValNode(object[this.options.textNodeName], key, result.attrStr, level);\n    } else {\n      return this.buildObjectNode(result.val, key, result.attrStr, level);\n    }\n  }\n  Builder.prototype.buildObjectNode = function(val, key, attrStr, level) {\n    if (val === \"\") {\n      if (key[0] === \"?\") return this.indentate(level) + \"<\" + key + attrStr + \"?\" + this.tagEndChar;\n      else {\n        return this.indentate(level) + \"<\" + key + attrStr + this.closeTag(key) + this.tagEndChar;\n      }\n    } else {\n      let tagEndExp = \"</\" + key + this.tagEndChar;\n      let piClosingChar = \"\";\n      if (key[0] === \"?\") {\n        piClosingChar = \"?\";\n        tagEndExp = \"\";\n      }\n      if ((attrStr || attrStr === \"\") && val.indexOf(\"<\") === -1) {\n        return this.indentate(level) + \"<\" + key + attrStr + piClosingChar + \">\" + val + tagEndExp;\n      } else if (this.options.commentPropName !== false && key === this.options.commentPropName && piClosingChar.length === 0) {\n        return this.indentate(level) + `<!--${val}-->` + this.newLine;\n      } else {\n        return this.indentate(level) + \"<\" + key + attrStr + piClosingChar + this.tagEndChar + val + this.indentate(level) + tagEndExp;\n      }\n    }\n  };\n  Builder.prototype.closeTag = function(key) {\n    let closeTag = \"\";\n    if (this.options.unpairedTags.indexOf(key) !== -1) {\n      if (!this.options.suppressUnpairedNode) closeTag = \"/\";\n    } else if (this.options.suppressEmptyNode) {\n      closeTag = \"/\";\n    } else {\n      closeTag = `></${key}`;\n    }\n    return closeTag;\n  };\n  Builder.prototype.buildTextValNode = function(val, key, attrStr, level) {\n    if (this.options.cdataPropName !== false && key === this.options.cdataPropName) {\n      return this.indentate(level) + `<![CDATA[${val}]]>` + this.newLine;\n    } else if (this.options.commentPropName !== false && key === this.options.commentPropName) {\n      return this.indentate(level) + `<!--${val}-->` + this.newLine;\n    } else if (key[0] === \"?\") {\n      return this.indentate(level) + \"<\" + key + attrStr + \"?\" + this.tagEndChar;\n    } else {\n      let textValue = this.options.tagValueProcessor(key, val);\n      textValue = this.replaceEntitiesValue(textValue);\n      if (textValue === \"\") {\n        return this.indentate(level) + \"<\" + key + attrStr + this.closeTag(key) + this.tagEndChar;\n      } else {\n        return this.indentate(level) + \"<\" + key + attrStr + \">\" + textValue + \"</\" + key + this.tagEndChar;\n      }\n    }\n  };\n  Builder.prototype.replaceEntitiesValue = function(textValue) {\n    if (textValue && textValue.length > 0 && this.options.processEntities) {\n      for (let i2 = 0; i2 < this.options.entities.length; i2++) {\n        const entity = this.options.entities[i2];\n        textValue = textValue.replace(entity.regex, entity.val);\n      }\n    }\n    return textValue;\n  };\n  function indentate(level) {\n    return this.options.indentBy.repeat(level);\n  }\n  function isAttribute(name) {\n    if (name.startsWith(this.options.attributeNamePrefix) && name !== this.options.textNodeName) {\n      return name.substr(this.attrPrefixLen);\n    } else {\n      return false;\n    }\n  }\n  json2xml = Builder;\n  return json2xml;\n}\nvar fxp;\nvar hasRequiredFxp;\nfunction requireFxp() {\n  if (hasRequiredFxp) return fxp;\n  hasRequiredFxp = 1;\n  const validator2 = requireValidator();\n  const XMLParser = requireXMLParser();\n  const XMLBuilder = requireJson2xml();\n  fxp = {\n    XMLParser,\n    XMLValidator: validator2,\n    XMLBuilder\n  };\n  return fxp;\n}\nvar fxpExports = requireFxp();\nfunction isSvg(string) {\n  if (typeof string !== \"string\") {\n    throw new TypeError(`Expected a \\`string\\`, got \\`${typeof string}\\``);\n  }\n  string = string.trim();\n  if (string.length === 0) {\n    return false;\n  }\n  if (fxpExports.XMLValidator.validate(string) !== true) {\n    return false;\n  }\n  let jsonObject;\n  const parser = new fxpExports.XMLParser();\n  try {\n    jsonObject = parser.parse(string);\n  } catch {\n    return false;\n  }\n  if (!jsonObject) {\n    return false;\n  }\n  if (!Object.keys(jsonObject).some((x) => x.toLowerCase() === \"svg\")) {\n    return false;\n  }\n  return true;\n}\nclass View {\n  _view;\n  constructor(view) {\n    isValidView(view);\n    this._view = view;\n  }\n  get id() {\n    return this._view.id;\n  }\n  get name() {\n    return this._view.name;\n  }\n  get caption() {\n    return this._view.caption;\n  }\n  get emptyTitle() {\n    return this._view.emptyTitle;\n  }\n  get emptyCaption() {\n    return this._view.emptyCaption;\n  }\n  get getContents() {\n    return this._view.getContents;\n  }\n  get icon() {\n    return this._view.icon;\n  }\n  set icon(icon) {\n    this._view.icon = icon;\n  }\n  get order() {\n    return this._view.order;\n  }\n  set order(order) {\n    this._view.order = order;\n  }\n  get params() {\n    return this._view.params;\n  }\n  set params(params) {\n    this._view.params = params;\n  }\n  get columns() {\n    return this._view.columns;\n  }\n  get emptyView() {\n    return this._view.emptyView;\n  }\n  get parent() {\n    return this._view.parent;\n  }\n  get sticky() {\n    return this._view.sticky;\n  }\n  get expanded() {\n    return this._view.expanded;\n  }\n  set expanded(expanded) {\n    this._view.expanded = expanded;\n  }\n  get defaultSortKey() {\n    return this._view.defaultSortKey;\n  }\n  get loadChildViews() {\n    return this._view.loadChildViews;\n  }\n}\nconst isValidView = function(view) {\n  if (!view.id || typeof view.id !== \"string\") {\n    throw new Error(\"View id is required and must be a string\");\n  }\n  if (!view.name || typeof view.name !== \"string\") {\n    throw new Error(\"View name is required and must be a string\");\n  }\n  if (\"caption\" in view && typeof view.caption !== \"string\") {\n    throw new Error(\"View caption must be a string\");\n  }\n  if (!view.getContents || typeof view.getContents !== \"function\") {\n    throw new Error(\"View getContents is required and must be a function\");\n  }\n  if (!view.icon || typeof view.icon !== \"string\" || !isSvg(view.icon)) {\n    throw new Error(\"View icon is required and must be a valid svg string\");\n  }\n  if (\"order\" in view && typeof view.order !== \"number\") {\n    throw new Error(\"View order must be a number\");\n  }\n  if (view.columns) {\n    view.columns.forEach((column) => {\n      if (!(column instanceof Column)) {\n        throw new Error(\"View columns must be an array of Column. Invalid column found\");\n      }\n    });\n  }\n  if (view.emptyView && typeof view.emptyView !== \"function\") {\n    throw new Error(\"View emptyView must be a function\");\n  }\n  if (view.parent && typeof view.parent !== \"string\") {\n    throw new Error(\"View parent must be a string\");\n  }\n  if (\"sticky\" in view && typeof view.sticky !== \"boolean\") {\n    throw new Error(\"View sticky must be a boolean\");\n  }\n  if (\"expanded\" in view && typeof view.expanded !== \"boolean\") {\n    throw new Error(\"View expanded must be a boolean\");\n  }\n  if (view.defaultSortKey && typeof view.defaultSortKey !== \"string\") {\n    throw new Error(\"View defaultSortKey must be a string\");\n  }\n  if (view.loadChildViews && typeof view.loadChildViews !== \"function\") {\n    throw new Error(\"View loadChildViews must be a function\");\n  }\n  return true;\n};\nvar debug_1;\nvar hasRequiredDebug;\nfunction requireDebug() {\n  if (hasRequiredDebug) return debug_1;\n  hasRequiredDebug = 1;\n  const debug = typeof process === \"object\" && process.env && process.env.NODE_DEBUG && /\\bsemver\\b/i.test(process.env.NODE_DEBUG) ? (...args) => console.error(\"SEMVER\", ...args) : () => {\n  };\n  debug_1 = debug;\n  return debug_1;\n}\nvar constants;\nvar hasRequiredConstants;\nfunction requireConstants() {\n  if (hasRequiredConstants) return constants;\n  hasRequiredConstants = 1;\n  const SEMVER_SPEC_VERSION = \"2.0.0\";\n  const MAX_LENGTH = 256;\n  const MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER || /* istanbul ignore next */\n  9007199254740991;\n  const MAX_SAFE_COMPONENT_LENGTH = 16;\n  const MAX_SAFE_BUILD_LENGTH = MAX_LENGTH - 6;\n  const RELEASE_TYPES = [\n    \"major\",\n    \"premajor\",\n    \"minor\",\n    \"preminor\",\n    \"patch\",\n    \"prepatch\",\n    \"prerelease\"\n  ];\n  constants = {\n    MAX_LENGTH,\n    MAX_SAFE_COMPONENT_LENGTH,\n    MAX_SAFE_BUILD_LENGTH,\n    MAX_SAFE_INTEGER,\n    RELEASE_TYPES,\n    SEMVER_SPEC_VERSION,\n    FLAG_INCLUDE_PRERELEASE: 1,\n    FLAG_LOOSE: 2\n  };\n  return constants;\n}\nvar re = { exports: {} };\nvar hasRequiredRe;\nfunction requireRe() {\n  if (hasRequiredRe) return re.exports;\n  hasRequiredRe = 1;\n  (function(module, exports) {\n    const {\n      MAX_SAFE_COMPONENT_LENGTH,\n      MAX_SAFE_BUILD_LENGTH,\n      MAX_LENGTH\n    } = requireConstants();\n    const debug = requireDebug();\n    exports = module.exports = {};\n    const re2 = exports.re = [];\n    const safeRe = exports.safeRe = [];\n    const src = exports.src = [];\n    const t2 = exports.t = {};\n    let R = 0;\n    const LETTERDASHNUMBER = \"[a-zA-Z0-9-]\";\n    const safeRegexReplacements = [\n      [\"\\\\s\", 1],\n      [\"\\\\d\", MAX_LENGTH],\n      [LETTERDASHNUMBER, MAX_SAFE_BUILD_LENGTH]\n    ];\n    const makeSafeRegex = (value) => {\n      for (const [token, max] of safeRegexReplacements) {\n        value = value.split(`${token}*`).join(`${token}{0,${max}}`).split(`${token}+`).join(`${token}{1,${max}}`);\n      }\n      return value;\n    };\n    const createToken = (name, value, isGlobal) => {\n      const safe = makeSafeRegex(value);\n      const index = R++;\n      debug(name, index, value);\n      t2[name] = index;\n      src[index] = value;\n      re2[index] = new RegExp(value, isGlobal ? \"g\" : void 0);\n      safeRe[index] = new RegExp(safe, isGlobal ? \"g\" : void 0);\n    };\n    createToken(\"NUMERICIDENTIFIER\", \"0|[1-9]\\\\d*\");\n    createToken(\"NUMERICIDENTIFIERLOOSE\", \"\\\\d+\");\n    createToken(\"NONNUMERICIDENTIFIER\", `\\\\d*[a-zA-Z-]${LETTERDASHNUMBER}*`);\n    createToken(\"MAINVERSION\", `(${src[t2.NUMERICIDENTIFIER]})\\\\.(${src[t2.NUMERICIDENTIFIER]})\\\\.(${src[t2.NUMERICIDENTIFIER]})`);\n    createToken(\"MAINVERSIONLOOSE\", `(${src[t2.NUMERICIDENTIFIERLOOSE]})\\\\.(${src[t2.NUMERICIDENTIFIERLOOSE]})\\\\.(${src[t2.NUMERICIDENTIFIERLOOSE]})`);\n    createToken(\"PRERELEASEIDENTIFIER\", `(?:${src[t2.NUMERICIDENTIFIER]}|${src[t2.NONNUMERICIDENTIFIER]})`);\n    createToken(\"PRERELEASEIDENTIFIERLOOSE\", `(?:${src[t2.NUMERICIDENTIFIERLOOSE]}|${src[t2.NONNUMERICIDENTIFIER]})`);\n    createToken(\"PRERELEASE\", `(?:-(${src[t2.PRERELEASEIDENTIFIER]}(?:\\\\.${src[t2.PRERELEASEIDENTIFIER]})*))`);\n    createToken(\"PRERELEASELOOSE\", `(?:-?(${src[t2.PRERELEASEIDENTIFIERLOOSE]}(?:\\\\.${src[t2.PRERELEASEIDENTIFIERLOOSE]})*))`);\n    createToken(\"BUILDIDENTIFIER\", `${LETTERDASHNUMBER}+`);\n    createToken(\"BUILD\", `(?:\\\\+(${src[t2.BUILDIDENTIFIER]}(?:\\\\.${src[t2.BUILDIDENTIFIER]})*))`);\n    createToken(\"FULLPLAIN\", `v?${src[t2.MAINVERSION]}${src[t2.PRERELEASE]}?${src[t2.BUILD]}?`);\n    createToken(\"FULL\", `^${src[t2.FULLPLAIN]}$`);\n    createToken(\"LOOSEPLAIN\", `[v=\\\\s]*${src[t2.MAINVERSIONLOOSE]}${src[t2.PRERELEASELOOSE]}?${src[t2.BUILD]}?`);\n    createToken(\"LOOSE\", `^${src[t2.LOOSEPLAIN]}$`);\n    createToken(\"GTLT\", \"((?:<|>)?=?)\");\n    createToken(\"XRANGEIDENTIFIERLOOSE\", `${src[t2.NUMERICIDENTIFIERLOOSE]}|x|X|\\\\*`);\n    createToken(\"XRANGEIDENTIFIER\", `${src[t2.NUMERICIDENTIFIER]}|x|X|\\\\*`);\n    createToken(\"XRANGEPLAIN\", `[v=\\\\s]*(${src[t2.XRANGEIDENTIFIER]})(?:\\\\.(${src[t2.XRANGEIDENTIFIER]})(?:\\\\.(${src[t2.XRANGEIDENTIFIER]})(?:${src[t2.PRERELEASE]})?${src[t2.BUILD]}?)?)?`);\n    createToken(\"XRANGEPLAINLOOSE\", `[v=\\\\s]*(${src[t2.XRANGEIDENTIFIERLOOSE]})(?:\\\\.(${src[t2.XRANGEIDENTIFIERLOOSE]})(?:\\\\.(${src[t2.XRANGEIDENTIFIERLOOSE]})(?:${src[t2.PRERELEASELOOSE]})?${src[t2.BUILD]}?)?)?`);\n    createToken(\"XRANGE\", `^${src[t2.GTLT]}\\\\s*${src[t2.XRANGEPLAIN]}$`);\n    createToken(\"XRANGELOOSE\", `^${src[t2.GTLT]}\\\\s*${src[t2.XRANGEPLAINLOOSE]}$`);\n    createToken(\"COERCEPLAIN\", `${\"(^|[^\\\\d])(\\\\d{1,\"}${MAX_SAFE_COMPONENT_LENGTH}})(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?`);\n    createToken(\"COERCE\", `${src[t2.COERCEPLAIN]}(?:$|[^\\\\d])`);\n    createToken(\"COERCEFULL\", src[t2.COERCEPLAIN] + `(?:${src[t2.PRERELEASE]})?(?:${src[t2.BUILD]})?(?:$|[^\\\\d])`);\n    createToken(\"COERCERTL\", src[t2.COERCE], true);\n    createToken(\"COERCERTLFULL\", src[t2.COERCEFULL], true);\n    createToken(\"LONETILDE\", \"(?:~>?)\");\n    createToken(\"TILDETRIM\", `(\\\\s*)${src[t2.LONETILDE]}\\\\s+`, true);\n    exports.tildeTrimReplace = \"$1~\";\n    createToken(\"TILDE\", `^${src[t2.LONETILDE]}${src[t2.XRANGEPLAIN]}$`);\n    createToken(\"TILDELOOSE\", `^${src[t2.LONETILDE]}${src[t2.XRANGEPLAINLOOSE]}$`);\n    createToken(\"LONECARET\", \"(?:\\\\^)\");\n    createToken(\"CARETTRIM\", `(\\\\s*)${src[t2.LONECARET]}\\\\s+`, true);\n    exports.caretTrimReplace = \"$1^\";\n    createToken(\"CARET\", `^${src[t2.LONECARET]}${src[t2.XRANGEPLAIN]}$`);\n    createToken(\"CARETLOOSE\", `^${src[t2.LONECARET]}${src[t2.XRANGEPLAINLOOSE]}$`);\n    createToken(\"COMPARATORLOOSE\", `^${src[t2.GTLT]}\\\\s*(${src[t2.LOOSEPLAIN]})$|^$`);\n    createToken(\"COMPARATOR\", `^${src[t2.GTLT]}\\\\s*(${src[t2.FULLPLAIN]})$|^$`);\n    createToken(\"COMPARATORTRIM\", `(\\\\s*)${src[t2.GTLT]}\\\\s*(${src[t2.LOOSEPLAIN]}|${src[t2.XRANGEPLAIN]})`, true);\n    exports.comparatorTrimReplace = \"$1$2$3\";\n    createToken(\"HYPHENRANGE\", `^\\\\s*(${src[t2.XRANGEPLAIN]})\\\\s+-\\\\s+(${src[t2.XRANGEPLAIN]})\\\\s*$`);\n    createToken(\"HYPHENRANGELOOSE\", `^\\\\s*(${src[t2.XRANGEPLAINLOOSE]})\\\\s+-\\\\s+(${src[t2.XRANGEPLAINLOOSE]})\\\\s*$`);\n    createToken(\"STAR\", \"(<|>)?=?\\\\s*\\\\*\");\n    createToken(\"GTE0\", \"^\\\\s*>=\\\\s*0\\\\.0\\\\.0\\\\s*$\");\n    createToken(\"GTE0PRE\", \"^\\\\s*>=\\\\s*0\\\\.0\\\\.0-0\\\\s*$\");\n  })(re, re.exports);\n  return re.exports;\n}\nvar parseOptions_1;\nvar hasRequiredParseOptions;\nfunction requireParseOptions() {\n  if (hasRequiredParseOptions) return parseOptions_1;\n  hasRequiredParseOptions = 1;\n  const looseOption = Object.freeze({ loose: true });\n  const emptyOpts = Object.freeze({});\n  const parseOptions = (options) => {\n    if (!options) {\n      return emptyOpts;\n    }\n    if (typeof options !== \"object\") {\n      return looseOption;\n    }\n    return options;\n  };\n  parseOptions_1 = parseOptions;\n  return parseOptions_1;\n}\nvar identifiers;\nvar hasRequiredIdentifiers;\nfunction requireIdentifiers() {\n  if (hasRequiredIdentifiers) return identifiers;\n  hasRequiredIdentifiers = 1;\n  const numeric = /^[0-9]+$/;\n  const compareIdentifiers = (a2, b2) => {\n    const anum = numeric.test(a2);\n    const bnum = numeric.test(b2);\n    if (anum && bnum) {\n      a2 = +a2;\n      b2 = +b2;\n    }\n    return a2 === b2 ? 0 : anum && !bnum ? -1 : bnum && !anum ? 1 : a2 < b2 ? -1 : 1;\n  };\n  const rcompareIdentifiers = (a2, b2) => compareIdentifiers(b2, a2);\n  identifiers = {\n    compareIdentifiers,\n    rcompareIdentifiers\n  };\n  return identifiers;\n}\nvar semver;\nvar hasRequiredSemver;\nfunction requireSemver() {\n  if (hasRequiredSemver) return semver;\n  hasRequiredSemver = 1;\n  const debug = requireDebug();\n  const { MAX_LENGTH, MAX_SAFE_INTEGER } = requireConstants();\n  const { safeRe: re2, t: t2 } = requireRe();\n  const parseOptions = requireParseOptions();\n  const { compareIdentifiers } = requireIdentifiers();\n  class SemVer {\n    constructor(version, options) {\n      options = parseOptions(options);\n      if (version instanceof SemVer) {\n        if (version.loose === !!options.loose && version.includePrerelease === !!options.includePrerelease) {\n          return version;\n        } else {\n          version = version.version;\n        }\n      } else if (typeof version !== \"string\") {\n        throw new TypeError(`Invalid version. Must be a string. Got type \"${typeof version}\".`);\n      }\n      if (version.length > MAX_LENGTH) {\n        throw new TypeError(\n          `version is longer than ${MAX_LENGTH} characters`\n        );\n      }\n      debug(\"SemVer\", version, options);\n      this.options = options;\n      this.loose = !!options.loose;\n      this.includePrerelease = !!options.includePrerelease;\n      const m2 = version.trim().match(options.loose ? re2[t2.LOOSE] : re2[t2.FULL]);\n      if (!m2) {\n        throw new TypeError(`Invalid Version: ${version}`);\n      }\n      this.raw = version;\n      this.major = +m2[1];\n      this.minor = +m2[2];\n      this.patch = +m2[3];\n      if (this.major > MAX_SAFE_INTEGER || this.major < 0) {\n        throw new TypeError(\"Invalid major version\");\n      }\n      if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) {\n        throw new TypeError(\"Invalid minor version\");\n      }\n      if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) {\n        throw new TypeError(\"Invalid patch version\");\n      }\n      if (!m2[4]) {\n        this.prerelease = [];\n      } else {\n        this.prerelease = m2[4].split(\".\").map((id) => {\n          if (/^[0-9]+$/.test(id)) {\n            const num = +id;\n            if (num >= 0 && num < MAX_SAFE_INTEGER) {\n              return num;\n            }\n          }\n          return id;\n        });\n      }\n      this.build = m2[5] ? m2[5].split(\".\") : [];\n      this.format();\n    }\n    format() {\n      this.version = `${this.major}.${this.minor}.${this.patch}`;\n      if (this.prerelease.length) {\n        this.version += `-${this.prerelease.join(\".\")}`;\n      }\n      return this.version;\n    }\n    toString() {\n      return this.version;\n    }\n    compare(other) {\n      debug(\"SemVer.compare\", this.version, this.options, other);\n      if (!(other instanceof SemVer)) {\n        if (typeof other === \"string\" && other === this.version) {\n          return 0;\n        }\n        other = new SemVer(other, this.options);\n      }\n      if (other.version === this.version) {\n        return 0;\n      }\n      return this.compareMain(other) || this.comparePre(other);\n    }\n    compareMain(other) {\n      if (!(other instanceof SemVer)) {\n        other = new SemVer(other, this.options);\n      }\n      return compareIdentifiers(this.major, other.major) || compareIdentifiers(this.minor, other.minor) || compareIdentifiers(this.patch, other.patch);\n    }\n    comparePre(other) {\n      if (!(other instanceof SemVer)) {\n        other = new SemVer(other, this.options);\n      }\n      if (this.prerelease.length && !other.prerelease.length) {\n        return -1;\n      } else if (!this.prerelease.length && other.prerelease.length) {\n        return 1;\n      } else if (!this.prerelease.length && !other.prerelease.length) {\n        return 0;\n      }\n      let i2 = 0;\n      do {\n        const a2 = this.prerelease[i2];\n        const b2 = other.prerelease[i2];\n        debug(\"prerelease compare\", i2, a2, b2);\n        if (a2 === void 0 && b2 === void 0) {\n          return 0;\n        } else if (b2 === void 0) {\n          return 1;\n        } else if (a2 === void 0) {\n          return -1;\n        } else if (a2 === b2) {\n          continue;\n        } else {\n          return compareIdentifiers(a2, b2);\n        }\n      } while (++i2);\n    }\n    compareBuild(other) {\n      if (!(other instanceof SemVer)) {\n        other = new SemVer(other, this.options);\n      }\n      let i2 = 0;\n      do {\n        const a2 = this.build[i2];\n        const b2 = other.build[i2];\n        debug(\"build compare\", i2, a2, b2);\n        if (a2 === void 0 && b2 === void 0) {\n          return 0;\n        } else if (b2 === void 0) {\n          return 1;\n        } else if (a2 === void 0) {\n          return -1;\n        } else if (a2 === b2) {\n          continue;\n        } else {\n          return compareIdentifiers(a2, b2);\n        }\n      } while (++i2);\n    }\n    // preminor will bump the version up to the next minor release, and immediately\n    // down to pre-release. premajor and prepatch work the same way.\n    inc(release, identifier, identifierBase) {\n      switch (release) {\n        case \"premajor\":\n          this.prerelease.length = 0;\n          this.patch = 0;\n          this.minor = 0;\n          this.major++;\n          this.inc(\"pre\", identifier, identifierBase);\n          break;\n        case \"preminor\":\n          this.prerelease.length = 0;\n          this.patch = 0;\n          this.minor++;\n          this.inc(\"pre\", identifier, identifierBase);\n          break;\n        case \"prepatch\":\n          this.prerelease.length = 0;\n          this.inc(\"patch\", identifier, identifierBase);\n          this.inc(\"pre\", identifier, identifierBase);\n          break;\n        // If the input is a non-prerelease version, this acts the same as\n        // prepatch.\n        case \"prerelease\":\n          if (this.prerelease.length === 0) {\n            this.inc(\"patch\", identifier, identifierBase);\n          }\n          this.inc(\"pre\", identifier, identifierBase);\n          break;\n        case \"major\":\n          if (this.minor !== 0 || this.patch !== 0 || this.prerelease.length === 0) {\n            this.major++;\n          }\n          this.minor = 0;\n          this.patch = 0;\n          this.prerelease = [];\n          break;\n        case \"minor\":\n          if (this.patch !== 0 || this.prerelease.length === 0) {\n            this.minor++;\n          }\n          this.patch = 0;\n          this.prerelease = [];\n          break;\n        case \"patch\":\n          if (this.prerelease.length === 0) {\n            this.patch++;\n          }\n          this.prerelease = [];\n          break;\n        // This probably shouldn't be used publicly.\n        // 1.0.0 'pre' would become 1.0.0-0 which is the wrong direction.\n        case \"pre\": {\n          const base = Number(identifierBase) ? 1 : 0;\n          if (!identifier && identifierBase === false) {\n            throw new Error(\"invalid increment argument: identifier is empty\");\n          }\n          if (this.prerelease.length === 0) {\n            this.prerelease = [base];\n          } else {\n            let i2 = this.prerelease.length;\n            while (--i2 >= 0) {\n              if (typeof this.prerelease[i2] === \"number\") {\n                this.prerelease[i2]++;\n                i2 = -2;\n              }\n            }\n            if (i2 === -1) {\n              if (identifier === this.prerelease.join(\".\") && identifierBase === false) {\n                throw new Error(\"invalid increment argument: identifier already exists\");\n              }\n              this.prerelease.push(base);\n            }\n          }\n          if (identifier) {\n            let prerelease = [identifier, base];\n            if (identifierBase === false) {\n              prerelease = [identifier];\n            }\n            if (compareIdentifiers(this.prerelease[0], identifier) === 0) {\n              if (isNaN(this.prerelease[1])) {\n                this.prerelease = prerelease;\n              }\n            } else {\n              this.prerelease = prerelease;\n            }\n          }\n          break;\n        }\n        default:\n          throw new Error(`invalid increment argument: ${release}`);\n      }\n      this.raw = this.format();\n      if (this.build.length) {\n        this.raw += `+${this.build.join(\".\")}`;\n      }\n      return this;\n    }\n  }\n  semver = SemVer;\n  return semver;\n}\nvar parse_1;\nvar hasRequiredParse;\nfunction requireParse() {\n  if (hasRequiredParse) return parse_1;\n  hasRequiredParse = 1;\n  const SemVer = requireSemver();\n  const parse = (version, options, throwErrors = false) => {\n    if (version instanceof SemVer) {\n      return version;\n    }\n    try {\n      return new SemVer(version, options);\n    } catch (er) {\n      if (!throwErrors) {\n        return null;\n      }\n      throw er;\n    }\n  };\n  parse_1 = parse;\n  return parse_1;\n}\nvar valid_1;\nvar hasRequiredValid;\nfunction requireValid() {\n  if (hasRequiredValid) return valid_1;\n  hasRequiredValid = 1;\n  const parse = requireParse();\n  const valid2 = (version, options) => {\n    const v = parse(version, options);\n    return v ? v.version : null;\n  };\n  valid_1 = valid2;\n  return valid_1;\n}\nvar validExports = requireValid();\nconst valid = /* @__PURE__ */ getDefaultExportFromCjs(validExports);\nvar major_1;\nvar hasRequiredMajor;\nfunction requireMajor() {\n  if (hasRequiredMajor) return major_1;\n  hasRequiredMajor = 1;\n  const SemVer = requireSemver();\n  const major2 = (a2, loose) => new SemVer(a2, loose).major;\n  major_1 = major2;\n  return major_1;\n}\nvar majorExports = requireMajor();\nconst major = /* @__PURE__ */ getDefaultExportFromCjs(majorExports);\nclass ProxyBus {\n  bus;\n  constructor(bus2) {\n    if (typeof bus2.getVersion !== \"function\" || !valid(bus2.getVersion())) {\n      console.warn(\"Proxying an event bus with an unknown or invalid version\");\n    } else if (major(bus2.getVersion()) !== major(this.getVersion())) {\n      console.warn(\n        \"Proxying an event bus of version \" + bus2.getVersion() + \" with \" + this.getVersion()\n      );\n    }\n    this.bus = bus2;\n  }\n  getVersion() {\n    return \"3.3.1\";\n  }\n  subscribe(name, handler) {\n    this.bus.subscribe(name, handler);\n  }\n  unsubscribe(name, handler) {\n    this.bus.unsubscribe(name, handler);\n  }\n  emit(name, event) {\n    this.bus.emit(name, event);\n  }\n}\nclass SimpleBus {\n  handlers = /* @__PURE__ */ new Map();\n  getVersion() {\n    return \"3.3.1\";\n  }\n  subscribe(name, handler) {\n    this.handlers.set(\n      name,\n      (this.handlers.get(name) || []).concat(\n        handler\n      )\n    );\n  }\n  unsubscribe(name, handler) {\n    this.handlers.set(\n      name,\n      (this.handlers.get(name) || []).filter((h2) => h2 !== handler)\n    );\n  }\n  emit(name, event) {\n    (this.handlers.get(name) || []).forEach((h2) => {\n      try {\n        h2(event);\n      } catch (e2) {\n        console.error(\"could not invoke event listener\", e2);\n      }\n    });\n  }\n}\nlet bus = null;\nfunction getBus() {\n  if (bus !== null) {\n    return bus;\n  }\n  if (typeof window === \"undefined\") {\n    return new Proxy({}, {\n      get: () => {\n        return () => console.error(\n          \"Window not available, EventBus can not be established!\"\n        );\n      }\n    });\n  }\n  if (window.OC?._eventBus && typeof window._nc_event_bus === \"undefined\") {\n    console.warn(\n      \"found old event bus instance at OC._eventBus. Update your version!\"\n    );\n    window._nc_event_bus = window.OC._eventBus;\n  }\n  if (typeof window?._nc_event_bus !== \"undefined\") {\n    bus = new ProxyBus(window._nc_event_bus);\n  } else {\n    bus = window._nc_event_bus = new SimpleBus();\n  }\n  return bus;\n}\nfunction emit(name, event) {\n  getBus().emit(name, event);\n}\n/*!\n * SPDX-FileCopyrightText: 2023 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\nclass FileListFilter extends TypedEventTarget {\n  id;\n  order;\n  constructor(id, order = 100) {\n    super();\n    this.id = id;\n    this.order = order;\n  }\n  filter(nodes) {\n    throw new Error(\"Not implemented\");\n  }\n  updateChips(chips) {\n    this.dispatchTypedEvent(\"update:chips\", new CustomEvent(\"update:chips\", { detail: chips }));\n  }\n  filterUpdated() {\n    this.dispatchTypedEvent(\"update:filter\", new CustomEvent(\"update:filter\"));\n  }\n}\nfunction registerFileListFilter(filter) {\n  if (!window._nc_filelist_filters) {\n    window._nc_filelist_filters = /* @__PURE__ */ new Map();\n  }\n  if (window._nc_filelist_filters.has(filter.id)) {\n    throw new Error(`File list filter \"${filter.id}\" already registered`);\n  }\n  window._nc_filelist_filters.set(filter.id, filter);\n  emit(\"files:filter:added\", filter);\n}\nfunction unregisterFileListFilter(filterId) {\n  if (window._nc_filelist_filters && window._nc_filelist_filters.has(filterId)) {\n    window._nc_filelist_filters.delete(filterId);\n    emit(\"files:filter:removed\", filterId);\n  }\n}\nfunction getFileListFilters() {\n  if (!window._nc_filelist_filters) {\n    return [];\n  }\n  return [...window._nc_filelist_filters.values()];\n}\nconst addNewFileMenuEntry = function(entry) {\n  const newFileMenu = getNewFileMenu();\n  return newFileMenu.registerEntry(entry);\n};\nconst removeNewFileMenuEntry = function(entry) {\n  const newFileMenu = getNewFileMenu();\n  return newFileMenu.unregisterEntry(entry);\n};\nconst getNewFileMenuEntries = function(context) {\n  const newFileMenu = getNewFileMenu();\n  return newFileMenu.getEntries(context).sort((a2, b2) => {\n    if (a2.order !== void 0 && b2.order !== void 0 && a2.order !== b2.order) {\n      return a2.order - b2.order;\n    }\n    return a2.displayName.localeCompare(b2.displayName, void 0, { numeric: true, sensitivity: \"base\" });\n  });\n};\nexport {\n  Column,\n  DefaultType,\n  q as File,\n  FileAction,\n  FileListAction,\n  FileListFilter,\n  F as FileType,\n  FilesSortingMode,\n  s as Folder,\n  Header,\n  InvalidFilenameError,\n  InvalidFilenameErrorReason,\n  Navigation,\n  NewMenuEntryCategory,\n  N as Node,\n  t as NodeStatus,\n  P as Permission,\n  View,\n  addNewFileMenuEntry,\n  c as davGetClient,\n  l as davGetDefaultPropfind,\n  m as davGetFavoritesReport,\n  n as davGetRecentSearch,\n  a as davGetRemoteURL,\n  g as davGetRootPath,\n  p as davParsePermissions,\n  b as davRemoteURL,\n  r as davResultToNode,\n  d as davRootPath,\n  h as defaultDavNamespaces,\n  f as defaultDavProperties,\n  formatFileSize,\n  k as getDavNameSpaces,\n  j as getDavProperties,\n  e as getFavoriteNodes,\n  getFileActions,\n  getFileListActions,\n  getFileListFilters,\n  getFileListHeaders,\n  getNavigation,\n  getNewFileMenuEntries,\n  getUniqueName,\n  isFilenameValid,\n  orderBy,\n  parseFileSize,\n  i as registerDavProperty,\n  registerFileAction,\n  registerFileListAction,\n  registerFileListFilter,\n  registerFileListHeaders,\n  removeNewFileMenuEntry,\n  sortNodes,\n  unregisterFileListFilter,\n  validateFilename\n};\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.public-auth-prompt__subtitle{font-size:16px;margin-block:12px}.public-auth-prompt__header{margin-block:12px}.public-auth-prompt__form{margin-block:24px}`, \"\",{\"version\":3,\"sources\":[\"webpack://./apps/files_sharing/src/views/PublicAuthPrompt.vue\"],\"names\":[],\"mappings\":\"AAEC,8BAEC,cAAA,CACA,iBAAA,CAGD,4BAEC,iBAAA,CAGD,0BAEC,iBAAA\",\"sourcesContent\":[\"\\n.public-auth-prompt {\\n\\t&__subtitle {\\n\\t\\t// Smaller than dialog title\\n\\t\\tfont-size: 16px;\\n\\t\\tmargin-block: 12px;\\n\\t}\\n\\n\\t&__header {\\n\\t\\t// Fix extra margin generating an unwanted gap\\n\\t\\tmargin-block: 12px;\\n\\t}\\n\\n\\t&__form {\\n\\t\\t// Double the margin of the header\\n\\t\\tmargin-block: 24px;\\n\\t}\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n"],"names":["defineComponent","name","components","NcButton","NcDialog","NcNoteCard","NcTextField","setup","t","owner","loadState","ownerDisplayName","label","note","filename","data","computed","dialogName","folder","watch","newName","trim","input","$refs","$el","querySelector","validity","escape","arguments","length","undefined","validateFilename","error","InvalidFilenameError","reason","InvalidFilenameErrorReason","Character","char","segment","ReservedName","Extension","match","extension","getFilenameValidity","setCustomValidity","reportValidity","beforeMount","talkNick","localStorage","getItem","methods","onSubmit","form","checkValidity","setItem","$emit","options","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","locals","_vm","this","_c","_self","_setupProxy","staticClass","attrs","scopedSlots","_u","key","fn","ref","on","_v","_s","proxy","_e","$event","preventDefault","stopPropagation","InvalidFilenameErrorReason2","Error","constructor","super","cause","capabilities","files","forbiddenCharacters","forbidden_filename_characters","window","_oc_config","forbidden_filenames_characters","character","includes","toLocaleLowerCase","forbidden_filenames","endOfBasename","indexOf","basename2","substring","forbidden_filename_basenames","forbiddenFilenameExtensions","forbidden_filename_extensions","endsWith","humanList","humanListBinary","formatFileSize","size","skipSmallSizes","binaryPrefixes","base1000","Number","order","Math","floor","log","min","readableFormat","relativeSize","pow","toFixed","parseFloat","toLocaleString","stringify","value","Date","toISOString","String","sortNodes","nodes","sortingOptions","sortingMode","sortingOrder","collection","identifiers2","orders","sorting","map","_","index","collator","Intl","Collator","numeric","usage","sort","a2","b2","identifier","entries","compare","orderBy","sortFavoritesFirst","v","attributes","favorite","sortFoldersFirst","type","displayname","basename","lastIndexOf","slice","hasRequiredUtil","hasRequiredValidator","validator","util","requireUtil","exports","nameStartChar","nameRegexp","regexName","RegExp","isExist","isEmptyObject","obj","Object","keys","merge","target","arrayMode","len","i2","getValue","isName","string","exec","getAllMatches","regex","matches","allmatches","startIndex","lastIndex","push","requireValidator","util2","defaultOptions","allowBooleanAttributes","unpairedTags","isWhiteSpace","readPI","xmlData","start","tagname","substr","getErrorObject","getLineNumberForPosition","readCommentAndCDATA","angleBracketsCount","validate","assign","tags","tagFound","reachedRoot","err","tagStartPos","closingTag","tagName","msg","result","readAttributeStr","attrStr","attrStrStart","isValid","validateAttributeString","code","line","tagClosed","otg","pop","openPos","col","afterAmp","validateAmpersand","JSON","t2","replace","doubleQuote","singleQuote","startChar","validAttrStrRegxp","attrNames","getPositionFromMatch","attrName","validateAttrName","hasOwnProperty","re2","validateNumberAmpersand","count","message","lineNumber","lines","split","hasRequiredOptionsBuilder","xmlNode","hasRequiredXmlNode","DocTypeReader","hasRequiredDocTypeReader","strnum","hasRequiredStrnum","ignoreAttributes","hasRequiredIgnoreAttributes","OrderedObjParser_1","hasRequiredOrderedObjParser","OptionsBuilder","requireIgnoreAttributes","ignoreAttributes2","Array","isArray","pattern","test","hasRequiredNode2json","XMLParser_1","hasRequiredXMLParser","orderedJs2Xml","hasRequiredOrderedJs2Xml","json2xml","hasRequiredJson2xml","fxp","hasRequiredFxp","debug_1","hasRequiredDebug","constants","hasRequiredConstants","node2json","requireNode2json","compress","arr","jPath","text","compressedObj","tagObj","property","propName","newJpath","textNodeName","val","isLeaf","isLeafTag","assignAttributes","alwaysCreateTextNode","attrMap","jpath","atrrName","propCount","prettify","node","requireXMLParser","buildOptions","preserveOrder","attributeNamePrefix","attributesGroupName","removeNSPrefix","parseTagValue","parseAttributeValue","trimValues","cdataPropName","numberParseOptions","hex","leadingZeros","eNotation","tagValueProcessor","attributeValueProcessor","stopNodes","commentPropName","processEntities","htmlEntities","ignoreDeclaration","ignorePiTags","transformTagName","transformAttributeName","updateTag","requireOptionsBuilder","OrderedObjParser","xmlNode2","child","add","addChild","readDocType","readEntityExp","entityName","isEntity","isElement","isAttlist","isNotation","validateEntityName","entities","hasBody","comment","exp","regx","i","requireDocTypeReader","toNumber","hexRegex","numRegex","parseInt","consider","decimalPoint","str","trimmedStr","skipLike","sign","numTrimmedByZeros","numStr","num","search","requireStrnum","getIgnoreAttributesFn","addExternalEntities","externalEntities","entKeys","ent","lastEntities","parseTextData","dontTrim","hasAttributes","isLeafNode","escapeEntities","replaceEntitiesValue","newval","parseValue","resolveNameSpace","prefix","charAt","attrsRegx","buildAttributesMap","ignoreAttributesFn","oldVal","aName","newVal","attrCollection","parseXml","xmlObj","currentNode","textData","closeIndex","findClosingIndex","colonIndex","saveTextToParentTag","lastTagName","propIndex","tagsNodeStack","tagData","readTagExp","childNode","tagExp","attrExpPresent","endIndex","docTypeEntities","rawTagName","lastTag","isItStopNode","tagContent","result2","readStopNodeData","entity","ampEntity","currentTagName","allNodesExp","stopNodePath","stopNodeExp","errMsg","closingIndex","closingChar","attrBoundary","ch","tagExpWithClosingIndex","separatorIndex","trimStart","openTagCount","shouldParse","fromCharCode","requireOrderedObjParser","validator2","parse","validationOption","toString","orderedObjParser","orderedResult","addEntity","requireOrderedJs2Xml","arrToStr","indentation","xmlStr","isPreviousElementTag","newJPath","tagText","isStopNode","attStr2","attr_to_str","tempInd","piTextNodeName","newIdentation","indentBy","tagStart","tagValue","suppressUnpairedNode","suppressEmptyNode","attr","attrVal","suppressBooleanAttributes","textValue","jArray","format","requireDebug","debug","process","env","NODE_DEBUG","args","console","requireConstants","MAX_SAFE_INTEGER","MAX_LENGTH","MAX_SAFE_COMPONENT_LENGTH","MAX_SAFE_BUILD_LENGTH","RELEASE_TYPES","SEMVER_SPEC_VERSION","FLAG_INCLUDE_PRERELEASE","FLAG_LOOSE","XMLParser","XMLBuilder","buildFromOrderedJs","oneListGroup","Builder","isAttribute","attrPrefixLen","processTextOrObjNode","indentate","tagEndChar","newLine","object","level","ajPath","j2x","concat","buildTextValNode","buildObjectNode","repeat","startsWith","prototype","build","jObj","arrayNodeName","join","call","buildAttrPairStr","arrLen","listTagVal","listTagAttr","j2","item","Ks","L","closeTag","tagEndExp","piClosingChar","requireJson2xml","XMLValidator","requireFxp","hasRequiredRe","parseOptions_1","hasRequiredParseOptions","identifiers","hasRequiredIdentifiers","semver","hasRequiredSemver","parse_1","hasRequiredParse","valid_1","hasRequiredValid","major_1","hasRequiredMajor","re","requireSemver","safeRe","module","src","R","LETTERDASHNUMBER","safeRegexReplacements","createToken","isGlobal","safe","token","max","makeSafeRegex","NUMERICIDENTIFIER","NUMERICIDENTIFIERLOOSE","NONNUMERICIDENTIFIER","PRERELEASEIDENTIFIER","PRERELEASEIDENTIFIERLOOSE","BUILDIDENTIFIER","MAINVERSION","PRERELEASE","BUILD","FULLPLAIN","MAINVERSIONLOOSE","PRERELEASELOOSE","LOOSEPLAIN","XRANGEIDENTIFIER","XRANGEIDENTIFIERLOOSE","GTLT","XRANGEPLAIN","XRANGEPLAINLOOSE","COERCEPLAIN","COERCE","COERCEFULL","LONETILDE","tildeTrimReplace","LONECARET","caretTrimReplace","comparatorTrimReplace","parseOptions","looseOption","freeze","loose","emptyOpts","requireParseOptions","compareIdentifiers","anum","bnum","rcompareIdentifiers","requireIdentifiers","SemVer","version","includePrerelease","TypeError","m2","LOOSE","FULL","raw","major","minor","patch","prerelease","id","other","compareMain","comparePre","compareBuild","inc","release","identifierBase","base","isNaN","throwErrors","er","requireParse","requireValid","requireMajor","___CSS_LOADER_EXPORT___"],"sourceRoot":""}